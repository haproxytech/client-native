---
stages:
  - check-commit
  - generate
  - build
  - lint
  - test
  - e2e
variables:
  DOCKER_HOST: tcp://docker:2375

build-specification:
  stage: build
  needs: []
  image:
    name: $CI_REGISTRY_GO/golang:1.19
    entrypoint: [""]
  tags:
    - go
  script:
    - go run specification/build/build.go -file specification/haproxy-spec.yaml > specification/build/haproxy_spec_to_compare.yaml
    - diff -u specification/build/haproxy_spec_to_compare.yaml specification/build/haproxy_spec.yaml
  only:
    - merge_requests
    - branches

yaml-lint:
  stage: lint
  needs: ["build-specification"]
  image:
    name: $CI_REGISTRY_GO/cytopia/yamllint:latest
    entrypoint: [""]
  tags:
    - go
  script:
    # to test locally, run:  docker run --rm -v $(pwd):/data cytopia/yamllint .
    - /bin/sh -c "yamllint -f colored ."
    - chmod +x ./specification/scripts/lint-yaml.sh
    - /bin/sh -c ./specification/scripts/lint-yaml.sh
  only:
    - merge_requests
    - branches

.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  image:
    name: $CI_REGISTRY_GO/golang:1.19
    entrypoint: [""]
  before_script:
    - mkdir -p .go
  cache:
    paths:
      - .go/pkg/mod/

generate:
  stage: generate
  image:
    name: $CI_REGISTRY_GO/docker:stable-go1.19
    entrypoint: [""]
  services:
    - name: $CI_REGISTRY_GO/docker:18.09.7-dind
      alias: docker
  tags:
    - go
  before_script:
    - apk add make git
    - wget -O /usr/local/bin/swagger https://github.com/go-swagger/go-swagger/releases/download/v0.30.2/swagger_linux_amd64
    - chmod +x /usr/local/bin/swagger
    - make models-native
  script:
    - test -z "$(git diff 2> /dev/null)" || exit "Models are not generated, issue \`make models\` and commit the result"
    - test -z "$(git ls-files --others --exclude-standard 2> /dev/null)" || exit "Models generation created untracked files, cannot proceed"
  only:
    - merge_requests
    - branches

build:
  extends: .go-cache
  stage: build
  needs: []
  tags:
    - go
  before_script:
    - mkdir -p .go
  script:
    - go build
  only:
    - merge_requests
    - branches

tidy:
  stage: lint
  needs: ["build"]
  image:
    name: $CI_REGISTRY_GO/golang:1.19
    entrypoint: [""]
  tags:
    - go
  script:
    - go mod tidy
    - test -z "$(git diff 2> /dev/null)" || exit 'Go modules not tidied, issue \`go mod tidy\` and commit the result'
  only:
    - merge_requests
    - branches

golangci-lint:
  stage: lint
  needs: ["generate", "build"]
  image:
    name: $CI_REGISTRY_GO/lint:1.46.2
    entrypoint: [""]
  tags:
    - go
  script:
    - golangci-lint run --timeout 5m --color always --max-issues-per-linter 0 --max-same-issues 0
  only:
    - merge_requests
    - branches

lint-commit-msg:
  stage: lint
  needs: ["build"]
  image:
    name: $CI_REGISTRY_GO/check-commit:v2.1.0
    entrypoint: [""]
  tags:
    - go
  script:
    - /check
  only:
    - merge_requests

test:
  extends: .go-cache
  stage: test
  needs: ["generate", "build"]
  image:
    name: $CI_REGISTRY_GO/golang:1.19
    entrypoint: [""]
  tags:
    - go
  script:
    - go test ./...
  only:
    - merge_requests
    - branches

.e2e:
  stage: e2e
  needs: ["test"]
  extends: .go-cache
  image:
    name: $CI_REGISTRY_GO/docker:stable
    entrypoint: [""]
  services:
    - name: $CI_REGISTRY_GO/docker:20.10.11-dind
      alias: docker
  tags:
    - go
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY_GO
    - docker pull $CI_REGISTRY_GO/client-native-env:$HAPROXY_VERSION
    - docker image tag $CI_REGISTRY_GO/client-native-env:$HAPROXY_VERSION test_env:$HAPROXY_VERSION
    - docker build -f ./e2e/Dockerfile --build-arg HAPROXY_VERSION=${HAPROXY_VERSION} -t client-native-test:${HAPROXY_VERSION} .
  script:
    - docker run client-native-test:$HAPROXY_VERSION
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'push'
HAProxy-2.1:
  extends: .e2e
  variables:
    HAPROXY_VERSION: "2.1"
HAProxy-2.2:
  extends: .e2e
  variables:
    HAPROXY_VERSION: "2.2"
HAProxy-2.3:
  extends: .e2e
  variables:
    HAPROXY_VERSION: "2.3"
HAProxy-2.4:
  extends: .e2e
  variables:
    HAPROXY_VERSION: "2.4"
HAProxy-2.5:
  extends: .e2e
  variables:
    HAPROXY_VERSION: "2.5"
