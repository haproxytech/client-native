// Code generated by go generate; DO NOT EDIT.
/*
Copyright 2019 HAProxy Technologies

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package integration_test

const defaults_aclurlstatspathbegstats = `
defaults test
  acl url_stats path_beg /stats
`
const defaults_aclurlstaticpathbegistaticimages = `
defaults test
  acl url_static path_beg -i /static /images /javascript /stylesheets
`
const defaults_aclurlstaticpathendijpggifpngcss = `
defaults test
  acl url_static path_end -i .jpg .gif .png .css .js
`
const defaults_aclbeappoknbsrvbeappgt0 = `
defaults test
  acl be_app_ok nbsrv(be_app) gt 0
`
const defaults_aclbestaticoknbsrvbestaticgt0 = `
defaults test
  acl be_static_ok nbsrv(be_static) gt 0
`
const defaults_aclkeyreqhdrXAddACLKeymfound = `
defaults test
  acl key req.hdr(X-Add-ACL-Key) -m found
`
const defaults_acladdpathaddacl = `
defaults test
  acl add path /addacl
`
const defaults_acldelpathdelacl = `
defaults test
  acl del path /delacl
`
const defaults_aclmyhosthdrHostfmyhostlst = `
defaults test
  acl myhost hdr(Host) -f myhost.lst
`
const defaults_aclcleardstport80 = `
defaults test
  acl clear dst_port 80
`
const defaults_aclsecuredstport8080 = `
defaults test
  acl secure dst_port 8080
`
const defaults_aclloginpageurlbeglogin = `
defaults test
  acl login_page url_beg /login
`
const defaults_acllogouturlbeglogout = `
defaults test
  acl logout url_beg /logout
`
const defaults_acluidgivenurlregloginuserid = `
defaults test
  acl uid_given url_reg /login?userid=[^&]+
`
const defaults_aclcookiesethdrsubcookieSEEN1 = `
defaults test
  acl cookie_set hdr_sub(cookie) SEEN=1
`
const defaults_balanceroundrobin = `
defaults test
  balance roundrobin
`
const defaults_balanceuri = `
defaults test
  balance uri
`
const defaults_balanceuriwhole = `
defaults test
  balance uri whole
`
const defaults_balanceurilen12 = `
defaults test
  balance uri len 12
`
const defaults_balanceuridepth8 = `
defaults test
  balance uri depth 8
`
const defaults_balanceuridepth8whole = `
defaults test
  balance uri depth 8 whole
`
const defaults_balanceuridepth8len12whole = `
defaults test
  balance uri depth 8 len 12 whole
`
const defaults_balanceurlparam = `
defaults test
  balance url_param
`
const defaults_balanceurlparamsessionid = `
defaults test
  balance url_param session_id
`
const defaults_balanceurlparamcheckpost10 = `
defaults test
  balance url_param check_post 10
`
const defaults_balanceurlparamcheckpost10maxwai = `
defaults test
  balance url_param check_post 10 max_wait 20
`
const defaults_balanceurlparamsessionidcheckpos = `
defaults test
  balance url_param session_id check_post 10 max_wait 20
`
const defaults_balancehdrhdrName = `
defaults test
  balance hdr(hdrName)
`
const defaults_balancehdrhdrNameusedomainonly = `
defaults test
  balance hdr(hdrName) use_domain_only
`
const defaults_balancerandom = `
defaults test
  balance random
`
const defaults_balancerandom15 = `
defaults test
  balance random(15)
`
const defaults_balancerdpcookie = `
defaults test
  balance rdp-cookie
`
const defaults_balancerdpcookiesomething = `
defaults test
  balance rdp-cookie(something)
`
const defaults_balancehashreqcookieclientid = `
defaults test
  balance hash req.cookie(clientid)
`
const defaults_balancehashreqhdripxforwardedfor = `
defaults test
  balance hash req.hdr_ip(x-forwarded-for,-1),ipmask(24)
`
const defaults_balancehashreqhdripxforwardedfor_ = `
defaults test
  balance hash req.hdr_ip(x-forwarded-for ,-1),ipmask(24)
`
const defaults_persistrdpcookie = `
defaults test
  persist rdp-cookie
`
const defaults_persistrdpcookiecookies = `
defaults test
  persist rdp-cookie(cookies)
`
const defaults_cookietest = `
defaults test
  cookie test
`
const defaults_cookiemyCookiedomaindom1indirect = `
defaults test
  cookie myCookie domain dom1 indirect postonly
`
const defaults_cookiemyCookiedomaindom1domaindo = `
defaults test
  cookie myCookie domain dom1 domain dom2 indirect postonly
`
const defaults_cookiemyCookieindirectmaxidle10m = `
defaults test
  cookie myCookie indirect maxidle 10 maxlife 5 postonly
`
const defaults_cookiemyCookieindirectmaxidle10 = `
defaults test
  cookie myCookie indirect maxidle 10
`
const defaults_cookiemyCookieindirectmaxlife10 = `
defaults test
  cookie myCookie indirect maxlife 10
`
const defaults_cookiemyCookiedomaindom1domaindo_ = `
defaults test
  cookie myCookie domain dom1 domain dom2 httponly indirect maxidle 10 maxlife 5 nocache postonly preserve rewrite secure
`
const defaults_cookiemyCookieattrSameSiteStrict = `
defaults test
  cookie myCookie attr \"SameSite=Strict\" attr \"mykey=myvalue\" insert
`
const defaults_defaultserveraddr127001 = `
defaults test
  default-server addr 127.0.0.1
`
const defaults_defaultserveraddr1 = `
defaults test
  default-server addr ::1
`
const defaults_defaultserveragentcheck = `
defaults test
  default-server agent-check
`
const defaults_defaultserveragentsendname = `
defaults test
  default-server agent-send name
`
const defaults_defaultserveragentinter1000ms = `
defaults test
  default-server agent-inter 1000ms
`
const defaults_defaultserveragentaddr127001 = `
defaults test
  default-server agent-addr 127.0.0.1
`
const defaults_defaultserveragentaddrsitecom = `
defaults test
  default-server agent-addr site.com
`
const defaults_defaultserveragentport1 = `
defaults test
  default-server agent-port 1
`
const defaults_defaultserveragentport65535 = `
defaults test
  default-server agent-port 65535
`
const defaults_defaultserverallow0rtt = `
defaults test
  default-server allow-0rtt
`
const defaults_defaultserveralpnh2 = `
defaults test
  default-server alpn h2
`
const defaults_defaultserveralpnhttp11 = `
defaults test
  default-server alpn http/1.1
`
const defaults_defaultserveralpnh2http11 = `
defaults test
  default-server alpn h2,http/1.1
`
const defaults_defaultserverbackup = `
defaults test
  default-server backup
`
const defaults_defaultservercafilecertcrt = `
defaults test
  default-server ca-file cert.crt
`
const defaults_defaultservercheck = `
defaults test
  default-server check
`
const defaults_defaultserverchecksendproxy = `
defaults test
  default-server check-send-proxy
`
const defaults_defaultservercheckalpnhttp10 = `
defaults test
  default-server check-alpn http/1.0
`
const defaults_defaultservercheckalpnhttp11http = `
defaults test
  default-server check-alpn http/1.1,http/1.0
`
const defaults_defaultservercheckprotoh2 = `
defaults test
  default-server check-proto h2
`
const defaults_defaultservercheckssl = `
defaults test
  default-server check-ssl
`
const defaults_defaultservercheckviasocks4 = `
defaults test
  default-server check-via-socks4
`
const defaults_defaultserverciphersECDHERSAAES1 = `
defaults test
  default-server ciphers ECDHE-RSA-AES128-GCM-SHA256
`
const defaults_defaultserverciphersECDHEECDSACH = `
defaults test
  default-server ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
`
const defaults_defaultserverciphersuitesECDHEEC = `
defaults test
  default-server ciphersuites ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
`
const defaults_defaultservercookievalue = `
defaults test
  default-server cookie value
`
const defaults_defaultservercrlfilefilepem = `
defaults test
  default-server crl-file file.pem
`
const defaults_defaultservercrtcertpem = `
defaults test
  default-server crt cert.pem
`
const defaults_defaultserverdisabled = `
defaults test
  default-server disabled
`
const defaults_defaultserverenabled = `
defaults test
  default-server enabled
`
const defaults_defaultservererrorlimit50 = `
defaults test
  default-server error-limit 50
`
const defaults_defaultserverfall30 = `
defaults test
  default-server fall 30
`
const defaults_defaultserverfall1rise2inter3spo = `
defaults test
  default-server fall 1 rise 2 inter 3s port 4444
`
const defaults_defaultserverforcesslv3 = `
defaults test
  default-server force-sslv3
`
const defaults_defaultserverforcetlsv10 = `
defaults test
  default-server force-tlsv10
`
const defaults_defaultserverforcetlsv11 = `
defaults test
  default-server force-tlsv11
`
const defaults_defaultserverforcetlsv12 = `
defaults test
  default-server force-tlsv12
`
const defaults_defaultserverforcetlsv13 = `
defaults test
  default-server force-tlsv13
`
const defaults_defaultserverinitaddrlastlibcnon = `
defaults test
  default-server init-addr last,libc,none
`
const defaults_defaultserverinitaddrlastlibcnon_ = `
defaults test
  default-server init-addr last,libc,none,127.0.0.1
`
const defaults_defaultserverinter1500ms = `
defaults test
  default-server inter 1500ms
`
const defaults_defaultserverinter1000weight13 = `
defaults test
  default-server inter 1000 weight 13
`
const defaults_defaultserverfastinter2500ms = `
defaults test
  default-server fastinter 2500ms
`
const defaults_defaultserverfastinterunknown = `
defaults test
  default-server fastinter unknown
`
const defaults_defaultserverdowninter3500ms = `
defaults test
  default-server downinter 3500ms
`
const defaults_defaultserverlogprotolegacy = `
defaults test
  default-server log-proto legacy
`
const defaults_defaultserverlogprotooctetcount = `
defaults test
  default-server log-proto octet-count
`
const defaults_defaultservermaxconn1 = `
defaults test
  default-server maxconn 1
`
const defaults_defaultservermaxconn50 = `
defaults test
  default-server maxconn 50
`
const defaults_defaultservermaxqueue0 = `
defaults test
  default-server maxqueue 0
`
const defaults_defaultservermaxqueue1000 = `
defaults test
  default-server maxqueue 1000
`
const defaults_defaultservermaxreuse1 = `
defaults test
  default-server max-reuse -1
`
const defaults_defaultservermaxreuse0 = `
defaults test
  default-server max-reuse 0
`
const defaults_defaultservermaxreuse1_ = `
defaults test
  default-server max-reuse 1
`
const defaults_defaultserverminconn1 = `
defaults test
  default-server minconn 1
`
const defaults_defaultserverminconn50 = `
defaults test
  default-server minconn 50
`
const defaults_defaultservernamespacetest = `
defaults test
  default-server namespace test
`
const defaults_defaultservernoagentcheck = `
defaults test
  default-server no-agent-check
`
const defaults_defaultservernobackup = `
defaults test
  default-server no-backup
`
const defaults_defaultservernocheck = `
defaults test
  default-server no-check
`
const defaults_defaultservernocheckssl = `
defaults test
  default-server no-check-ssl
`
const defaults_defaultservernosendproxyv2 = `
defaults test
  default-server no-send-proxy-v2
`
const defaults_defaultservernosendproxyv2ssl = `
defaults test
  default-server no-send-proxy-v2-ssl
`
const defaults_defaultservernosendproxyv2sslcn = `
defaults test
  default-server no-send-proxy-v2-ssl-cn
`
const defaults_defaultservernossl = `
defaults test
  default-server no-ssl
`
const defaults_defaultservernosslreuse = `
defaults test
  default-server no-ssl-reuse
`
const defaults_defaultservernosslv3 = `
defaults test
  default-server no-sslv3
`
const defaults_defaultservernotlstickets = `
defaults test
  default-server no-tls-tickets
`
const defaults_defaultservernotlsv10 = `
defaults test
  default-server no-tlsv10
`
const defaults_defaultservernotlsv11 = `
defaults test
  default-server no-tlsv11
`
const defaults_defaultservernotlsv12 = `
defaults test
  default-server no-tlsv12
`
const defaults_defaultservernotlsv13 = `
defaults test
  default-server no-tlsv13
`
const defaults_defaultservernoverifyhost = `
defaults test
  default-server no-verifyhost
`
const defaults_defaultservernotfo = `
defaults test
  default-server no-tfo
`
const defaults_defaultservernonstick = `
defaults test
  default-server non-stick
`
const defaults_defaultservernpnhttp11http10 = `
defaults test
  default-server npn http/1.1,http/1.0
`
const defaults_defaultserverobservelayer4 = `
defaults test
  default-server observe layer4
`
const defaults_defaultserverobservelayer7 = `
defaults test
  default-server observe layer7
`
const defaults_defaultserveronerrorfastinter = `
defaults test
  default-server on-error fastinter
`
const defaults_defaultserveronerrorfailcheck = `
defaults test
  default-server on-error fail-check
`
const defaults_defaultserveronerrorsuddendeath = `
defaults test
  default-server on-error sudden-death
`
const defaults_defaultserveronerrormarkdown = `
defaults test
  default-server on-error mark-down
`
const defaults_defaultserveronmarkeddownshutdow = `
defaults test
  default-server on-marked-down shutdown-sessions
`
const defaults_defaultserveronmarkedupshutdownb = `
defaults test
  default-server on-marked-up shutdown-backup-session
`
const defaults_defaultserverpoolmaxconn1 = `
defaults test
  default-server pool-max-conn -1
`
const defaults_defaultserverpoolmaxconn0 = `
defaults test
  default-server pool-max-conn 0
`
const defaults_defaultserverpoolmaxconn100 = `
defaults test
  default-server pool-max-conn 100
`
const defaults_defaultserverpoolpurgedelay0 = `
defaults test
  default-server pool-purge-delay 0
`
const defaults_defaultserverpoolpurgedelay5 = `
defaults test
  default-server pool-purge-delay 5
`
const defaults_defaultserverpoolpurgedelay500 = `
defaults test
  default-server pool-purge-delay 500
`
const defaults_defaultserverport27015 = `
defaults test
  default-server port 27015
`
const defaults_defaultserverport27016 = `
defaults test
  default-server port 27016
`
const defaults_defaultserverprotoh2 = `
defaults test
  default-server proto h2
`
const defaults_defaultserverredirhttpimage1mydo = `
defaults test
  default-server redir http://image1.mydomain.com
`
const defaults_defaultserverredirhttpsimage1myd = `
defaults test
  default-server redir https://image1.mydomain.com
`
const defaults_defaultserverrise2 = `
defaults test
  default-server rise 2
`
const defaults_defaultserverrise200 = `
defaults test
  default-server rise 200
`
const defaults_defaultserverresolveoptsallowdup = `
defaults test
  default-server resolve-opts allow-dup-ip
`
const defaults_defaultserverresolveoptsignorewe = `
defaults test
  default-server resolve-opts ignore-weight
`
const defaults_defaultserverresolveoptsallowdup_ = `
defaults test
  default-server resolve-opts allow-dup-ip,ignore-weight
`
const defaults_defaultserverresolveoptspreventd = `
defaults test
  default-server resolve-opts prevent-dup-ip,ignore-weight
`
const defaults_defaultserverresolvepreferipv4 = `
defaults test
  default-server resolve-prefer ipv4
`
const defaults_defaultserverresolvepreferipv6 = `
defaults test
  default-server resolve-prefer ipv6
`
const defaults_defaultserverresolvenet100008 = `
defaults test
  default-server resolve-net 10.0.0.0/8
`
const defaults_defaultserverresolvenet100008100 = `
defaults test
  default-server resolve-net 10.0.0.0/8,10.0.0.0/16
`
const defaults_defaultserverresolversmydns = `
defaults test
  default-server resolvers mydns
`
const defaults_defaultserversendproxy = `
defaults test
  default-server send-proxy
`
const defaults_defaultserversendproxyv2 = `
defaults test
  default-server send-proxy-v2
`
const defaults_defaultserverproxyv2optionsssl = `
defaults test
  default-server proxy-v2-options ssl
`
const defaults_defaultserverproxyv2optionssslce = `
defaults test
  default-server proxy-v2-options ssl,cert-cn
`
const defaults_defaultserverproxyv2optionssslce_ = `
defaults test
  default-server proxy-v2-options ssl,cert-cn,ssl-cipher,cert-sig,cert-key,authority,crc32c,unique-id
`
const defaults_defaultserversendproxyv2ssl = `
defaults test
  default-server send-proxy-v2-ssl
`
const defaults_defaultserversendproxyv2sslcn = `
defaults test
  default-server send-proxy-v2-ssl-cn
`
const defaults_defaultserverslowstart2000ms = `
defaults test
  default-server slowstart 2000ms
`
const defaults_defaultserversniTODO = `
defaults test
  default-server sni TODO
`
const defaults_defaultserversourceTODO = `
defaults test
  default-server source TODO
`
const defaults_defaultserverssl = `
defaults test
  default-server ssl
`
const defaults_defaultserversslmaxverSSLv3 = `
defaults test
  default-server ssl-max-ver SSLv3
`
const defaults_defaultserversslmaxverTLSv10 = `
defaults test
  default-server ssl-max-ver TLSv1.0
`
const defaults_defaultserversslmaxverTLSv11 = `
defaults test
  default-server ssl-max-ver TLSv1.1
`
const defaults_defaultserversslmaxverTLSv12 = `
defaults test
  default-server ssl-max-ver TLSv1.2
`
const defaults_defaultserversslmaxverTLSv13 = `
defaults test
  default-server ssl-max-ver TLSv1.3
`
const defaults_defaultserversslminverSSLv3 = `
defaults test
  default-server ssl-min-ver SSLv3
`
const defaults_defaultserversslminverTLSv10 = `
defaults test
  default-server ssl-min-ver TLSv1.0
`
const defaults_defaultserversslminverTLSv11 = `
defaults test
  default-server ssl-min-ver TLSv1.1
`
const defaults_defaultserversslminverTLSv12 = `
defaults test
  default-server ssl-min-ver TLSv1.2
`
const defaults_defaultserversslminverTLSv13 = `
defaults test
  default-server ssl-min-ver TLSv1.3
`
const defaults_defaultserversslreuse = `
defaults test
  default-server ssl-reuse
`
const defaults_defaultserverstick = `
defaults test
  default-server stick
`
const defaults_defaultserversocks412700181 = `
defaults test
  default-server socks4 127.0.0.1:81
`
const defaults_defaultservertcput20ms = `
defaults test
  default-server tcp-ut 20ms
`
const defaults_defaultservertfo = `
defaults test
  default-server tfo
`
const defaults_defaultservertrackTODO = `
defaults test
  default-server track TODO
`
const defaults_defaultservertlstickets = `
defaults test
  default-server tls-tickets
`
const defaults_defaultserververifynone = `
defaults test
  default-server verify none
`
const defaults_defaultserververifyrequired = `
defaults test
  default-server verify required
`
const defaults_defaultserververifyhostsitecom = `
defaults test
  default-server verifyhost site.com
`
const defaults_defaultserverweight1 = `
defaults test
  default-server weight 1
`
const defaults_defaultserverweight128 = `
defaults test
  default-server weight 128
`
const defaults_defaultserverweight256 = `
defaults test
  default-server weight 256
`
const defaults_defaultserverpoollowconn384 = `
defaults test
  default-server pool-low-conn 384
`
const defaults_defaultserverwsh1 = `
defaults test
  default-server ws h1
`
const defaults_defaultserverwsh2 = `
defaults test
  default-server ws h2
`
const defaults_defaultserverwsauto = `
defaults test
  default-server ws auto
`
const defaults_defaultserverlogbufsize10 = `
defaults test
  default-server log-bufsize 10
`
const defaults_emailalertfromadminexamplecom = `
defaults test
  email-alert from admin@example.com
`
const defaults_emailalerttoazxy = `
defaults test
  email-alert to a@z,x@y
`
const defaults_emailalertlevelwarning = `
defaults test
  email-alert level warning
`
const defaults_emailalertmailerslocalmailers = `
defaults test
  email-alert mailers local-mailers
`
const defaults_emailalertmyhostnamesrv01example = `
defaults test
  email-alert myhostname srv01.example.com
`
const defaults_emailalerttosupportexamplecom = `
defaults test
  email-alert to support@example.com
`
const defaults_emailalerttoabcd = `
defaults test
  email-alert to "a@b, c@d"
`
const defaults_errorfile400etchaproxyerrorfiles = `
defaults test
  errorfile 400 /etc/haproxy/errorfiles/400badreq.http
`
const defaults_errorfile408devnullworkaroundChr = `
defaults test
  errorfile 408 /dev/null # work around Chrome pre-connect bug
`
const defaults_errorfile403etchaproxyerrorfiles = `
defaults test
  errorfile 403 /etc/haproxy/errorfiles/403forbid.http
`
const defaults_errorfile503etchaproxyerrorfiles = `
defaults test
  errorfile 503 /etc/haproxy/errorfiles/503sorry.http
`
const defaults_errorloc302400httpwwwmyawesomesi = `
defaults test
  errorloc302 400 http://www.myawesomesite.com/error_page
`
const defaults_errorloc302404httpwwwmyawesomesi = `
defaults test
  errorloc302 404 http://www.myawesomesite.com/not_found
`
const defaults_errorloc302501errorpage = `
defaults test
  errorloc302 501 /error_page
`
const defaults_errorloc303400httpwwwmyawesomesi = `
defaults test
  errorloc303 400 http://www.myawesomesite.com/error_page
`
const defaults_errorloc303404httpwwwmyawesomesi = `
defaults test
  errorloc303 404 http://www.myawesomesite.com/not_found
`
const defaults_errorloc303501errorpage = `
defaults test
  errorloc303 501 /error_page
`
const defaults_errorfileserrorssection400 = `
defaults test
  errorfiles errors_section 400
`
const defaults_errorfileserrorssection400401500 = `
defaults test
  errorfiles errors_section 400 401 500
`
const defaults_errorfileserrorssection = `
defaults test
  errorfiles errors_section
`
const defaults_hashtypemapbased = `
defaults test
  hash-type map-based
`
const defaults_hashtypemapbasedavalanche = `
defaults test
  hash-type map-based avalanche
`
const defaults_hashtypeconsistent = `
defaults test
  hash-type consistent
`
const defaults_hashtypeconsistentavalanche = `
defaults test
  hash-type consistent avalanche
`
const defaults_hashtypeavalanche = `
defaults test
  hash-type avalanche
`
const defaults_hashtypemapbasedsdbm = `
defaults test
  hash-type map-based sdbm
`
const defaults_hashtypemapbaseddjb2 = `
defaults test
  hash-type map-based djb2
`
const defaults_hashtypemapbasedwt6 = `
defaults test
  hash-type map-based wt6
`
const defaults_hashtypemapbasedcrc32 = `
defaults test
  hash-type map-based crc32
`
const defaults_hashtypeconsistentsdbm = `
defaults test
  hash-type consistent sdbm
`
const defaults_hashtypeconsistentdjb2 = `
defaults test
  hash-type consistent djb2
`
const defaults_hashtypeconsistentwt6 = `
defaults test
  hash-type consistent wt6
`
const defaults_hashtypeconsistentcrc32 = `
defaults test
  hash-type consistent crc32
`
const defaults_hashtypemapbasedsdbmavalanche = `
defaults test
  hash-type map-based sdbm avalanche
`
const defaults_hashtypemapbaseddjb2avalanche = `
defaults test
  hash-type map-based djb2 avalanche
`
const defaults_hashtypemapbasedwt6avalanche = `
defaults test
  hash-type map-based wt6 avalanche
`
const defaults_hashtypemapbasedcrc32avalanche = `
defaults test
  hash-type map-based crc32 avalanche
`
const defaults_hashtypeconsistentsdbmavalanche = `
defaults test
  hash-type consistent sdbm avalanche
`
const defaults_hashtypeconsistentdjb2avalanche = `
defaults test
  hash-type consistent djb2 avalanche
`
const defaults_hashtypeconsistentwt6avalanche = `
defaults test
  hash-type consistent wt6 avalanche
`
const defaults_hashtypeconsistentcrc32avalanche = `
defaults test
  hash-type consistent crc32 avalanche
`
const defaults_hashtypeconsistentnone = `
defaults test
  hash-type consistent none
`
const defaults_httpreusenever = `
defaults test
  http-reuse never
`
const defaults_httpreusesafe = `
defaults test
  http-reuse safe
`
const defaults_httpreuseaggressive = `
defaults test
  http-reuse aggressive
`
const defaults_httpreusealways = `
defaults test
  http-reuse always
`
const defaults_logglobal = `
defaults test
  log global
`
const defaults_nolog = `
defaults test
  no log
`
const defaults_logstdoutformatshortdaemonsendlo = `
defaults test
  log stdout format short daemon # send log to systemd
`
const defaults_logstdoutformatrawdaemonsendever = `
defaults test
  log stdout format raw daemon # send everything to stdout
`
const defaults_logstderrformatrawdaemonnoticese = `
defaults test
  log stderr format raw daemon notice # send important events to stderr
`
const defaults_log127001514local0noticeonlysend = `
defaults test
  log 127.0.0.1:514 local0 notice # only send important events
`
const defaults_log127001514local0noticenoticesa = `
defaults test
  log 127.0.0.1:514 local0 notice notice # same but limit output level
`
const defaults_log1270011515len8192formatrfc542 = `
defaults test
  log 127.0.0.1:1515 len 8192 format rfc5424 local2 info
`
const defaults_log1270011515sample12local0 = `
defaults test
  log 127.0.0.1:1515 sample 1:2 local0
`
const defaults_log1270011515len8192formatrfc542_ = `
defaults test
  log 127.0.0.1:1515 len 8192 format rfc5424 sample 1,2-5:6 local2 info
`
const defaults_log1270011515formatrfc5424sample = `
defaults test
  log 127.0.0.1:1515 format rfc5424 sample 1,2-5:6 local2 info
`
const defaults_log1270011515formatrfc5424sample_ = `
defaults test
  log 127.0.0.1:1515 format rfc5424 sample 1-5:6 local2
`
const defaults_log1270011515sample16local2 = `
defaults test
  log 127.0.0.1:1515 sample 1:6 local2
`
const defaults_optionhttpchkOPTIONSHTTP11rnHost = `
defaults test
  option httpchk OPTIONS * HTTP/1.1\\r\\nHost:\\ www
`
const defaults_optionhttpchkuri = `
defaults test
  option httpchk <uri>
`
const defaults_optionhttpchkmethoduri = `
defaults test
  option httpchk <method> <uri>
`
const defaults_optionhttpchkmethoduriversion = `
defaults test
  option httpchk <method> <uri> <version>
`
const defaults_uniqueidformatXocicpfifpTsrtpid = `
defaults test
  unique-id-format %{+X}o_%ci:%cp_%fi:%fp_%Ts_%rt:%pid
`
const defaults_uniqueidformatXocpfifpTsrtpid = `
defaults test
  unique-id-format %{+X}o_%cp_%fi:%fp_%Ts_%rt:%pid
`
const defaults_uniqueidformatXofifpTsrtpid = `
defaults test
  unique-id-format %{+X}o_%fi:%fp_%Ts_%rt:%pid
`
const defaults_uniqueidheaderXUniqueID = `
defaults test
  unique-id-header X-Unique-ID
`
const defaults_loadserverstatefromfileglobal = `
defaults test
  load-server-state-from-file global
`
const defaults_loadserverstatefromfilelocal = `
defaults test
  load-server-state-from-file local
`
const defaults_loadserverstatefromfilenone = `
defaults test
  load-server-state-from-file none
`
const defaults_monitorurihaproxytest = `
defaults test
  monitor-uri /haproxy_test
`
const defaults_httpsendnameheader = `
defaults test
  http-send-name-header
`
const defaults_httpsendnameheaderXMyAwesomeHead = `
defaults test
  http-send-name-header X-My-Awesome-Header
`
const defaults_optionhttprestrictreqhdrnamespre = `
defaults test
  option http-restrict-req-hdr-names preserve
`
const defaults_optionhttprestrictreqhdrnamesdel = `
defaults test
  option http-restrict-req-hdr-names delete
`
const defaults_optionhttprestrictreqhdrnamesrej = `
defaults test
  option http-restrict-req-hdr-names reject
`
const defaults_source1921681200 = `
defaults test
  source 192.168.1.200
`
const defaults_source1921681200usesrcclientip = `
defaults test
  source 192.168.1.200 usesrc clientip
`
const defaults_source192168120080usesrcclientip = `
defaults test
  source 192.168.1.200:80 usesrc clientip
`
const defaults_source1921681200usesrcclient = `
defaults test
  source 192.168.1.200 usesrc client
`
const defaults_source192168120080usesrcclient = `
defaults test
  source 192.168.1.200:80 usesrc client
`
const defaults_source0000usesrcclientip = `
defaults test
  source 0.0.0.0 usesrc clientip
`
const defaults_source0000usesrchdripxforwardedf = `
defaults test
  source 0.0.0.0 usesrc hdr_ip(x-forwarded-for,-1)
`
const defaults_source1921681200interfacename = `
defaults test
  source 192.168.1.200 interface name
`
const defaults_source1921681200usesrc1921681201 = `
defaults test
  source 192.168.1.200 usesrc 192.168.1.201
`
const defaults_source1921681200usesrchdriphdr = `
defaults test
  source 192.168.1.200 usesrc hdr_ip(hdr)
`
const defaults_source1921681200usesrchdriphdroc = `
defaults test
  source 192.168.1.200 usesrc hdr_ip(hdr,occ)
`
const defaults_optionoriginalto = `
defaults test
  option originalto
`
const defaults_optionoriginaltoexcept127001 = `
defaults test
  option originalto except 127.0.0.1
`
const defaults_optionoriginaltoheaderXClientDst = `
defaults test
  option originalto header X-Client-Dst
`
const defaults_optionoriginaltoexcept127001head = `
defaults test
  option originalto except 127.0.0.1 header X-Client-Dst
`
const defaults_optionoriginaltocomment = `
defaults test
  option originalto # comment
`
const defaults_optionoriginaltoexcept127001comm = `
defaults test
  option originalto except 127.0.0.1 # comment
`
const defaults_httprequestsetmapmaplstsrcreqhdr = `
defaults test
  http-request set-map(map.lst) %[src] %[req.hdr(X-Value)] if value
`
const defaults_httprequestsetmapmaplstsrcreqhdr_ = `
defaults test
  http-request set-map(map.lst) %[src] %[req.hdr(X-Value)]
`
const defaults_httprequestaddaclmaplstsrc = `
defaults test
  http-request add-acl(map.lst) [src]
`
const defaults_httprequestaddheaderXvaluevalue = `
defaults test
  http-request add-header X-value value
`
const defaults_httprequestcacheusecachename = `
defaults test
  http-request cache-use cache-name
`
const defaults_httprequestcacheusecachenameifFA = `
defaults test
  http-request cache-use cache-name if FALSE
`
const defaults_httprequestdelaclmaplstsrc = `
defaults test
  http-request del-acl(map.lst) [src]
`
const defaults_httprequestallow = `
defaults test
  http-request allow
`
const defaults_httprequestauth = `
defaults test
  http-request auth
`
const defaults_httprequestdelheaderXvalue = `
defaults test
  http-request del-header X-value
`
const defaults_httprequestdelheaderXvalueifTRUE = `
defaults test
  http-request del-header X-value if TRUE
`
const defaults_httprequestdelheaderXvaluemstrif = `
defaults test
  http-request del-header X-value -m str if TRUE
`
const defaults_httprequestdelmapmaplstsrcifvalu = `
defaults test
  http-request del-map(map.lst) %[src] if ! value
`
const defaults_httprequestdelmapmaplstsrc = `
defaults test
  http-request del-map(map.lst) %[src]
`
const defaults_httprequestdeny = `
defaults test
  http-request deny
`
const defaults_httprequestdenydenystatus400 = `
defaults test
  http-request deny deny_status 400
`
const defaults_httprequestdenyifTRUE = `
defaults test
  http-request deny if TRUE
`
const defaults_httprequestdenydenystatus400ifTR = `
defaults test
  http-request deny deny_status 400 if TRUE
`
const defaults_httprequestdenydenystatus400cont = `
defaults test
  http-request deny deny_status 400 content-type application/json if TRUE
`
const defaults_httprequestdenydenystatus400cont_ = `
defaults test
  http-request deny deny_status 400 content-type application/json
`
const defaults_httprequestdenydenystatus400cont__ = `
defaults test
  http-request deny deny_status 400 content-type application/json default-errorfiles
`
const defaults_httprequestdenydenystatus400cont___ = `
defaults test
  http-request deny deny_status 400 content-type application/json errorfile errors
`
const defaults_httprequestdenydenystatus400cont____ = `
defaults test
  http-request deny deny_status 400 content-type application/json string error if TRUE
`
const defaults_httprequestdenydenystatus400cont_____ = `
defaults test
  http-request deny deny_status 400 content-type application/json lf-string error hdr host google.com if TRUE
`
const defaults_httprequestdenydenystatus400cont______ = `
defaults test
  http-request deny deny_status 400 content-type application/json file /var/errors.file
`
const defaults_httprequestdenydenystatus400cont_______ = `
defaults test
  http-request deny deny_status 400 content-type application/json lf-file /var/errors.file
`
const defaults_httprequestdenydenystatus400cont________ = `
defaults test
  http-request deny deny_status 400 content-type application/json string error hdr host google.com if TRUE
`
const defaults_httprequestdenydenystatus400cont_________ = `
defaults test
  http-request deny deny_status 400 content-type application/json string error hdr host google.com hdr x-value bla if TRUE
`
const defaults_httprequestdenydenystatus400cont__________ = `
defaults test
  http-request deny deny_status 400 content-type application/json string error hdr host google.com hdr x-value bla
`
const defaults_httprequestdisablel7retry = `
defaults test
  http-request disable-l7-retry
`
const defaults_httprequestdisablel7retryifFALSE = `
defaults test
  http-request disable-l7-retry if FALSE
`
const defaults_httprequestearlyhinthintsrc = `
defaults test
  http-request early-hint hint %[src]
`
const defaults_httprequestearlyhinthintsrcifFAL = `
defaults test
  http-request early-hint hint %[src] if FALSE
`
const defaults_httprequestearlyhintifFALSE = `
defaults test
  http-request early-hint if FALSE
`
const defaults_httprequestluafoo = `
defaults test
  http-request lua.foo
`
const defaults_httprequestluafooifFALSE = `
defaults test
  http-request lua.foo if FALSE
`
const defaults_httprequestluafooparam = `
defaults test
  http-request lua.foo param
`
const defaults_httprequestluafooparamparam2 = `
defaults test
  http-request lua.foo param param2
`
const defaults_httprequestnormalizeurifragmente = `
defaults test
  http-request normalize-uri fragment-encode
`
const defaults_httprequestnormalizeurifragmente_ = `
defaults test
  http-request normalize-uri fragment-encode if TRUE
`
const defaults_httprequestnormalizeurifragments = `
defaults test
  http-request normalize-uri fragment-strip
`
const defaults_httprequestnormalizeurifragments_ = `
defaults test
  http-request normalize-uri fragment-strip if TRUE
`
const defaults_httprequestnormalizeuripathmerge = `
defaults test
  http-request normalize-uri path-merge-slashes
`
const defaults_httprequestnormalizeuripathmerge_ = `
defaults test
  http-request normalize-uri path-merge-slashes if TRUE
`
const defaults_httprequestnormalizeuripathstrip = `
defaults test
  http-request normalize-uri path-strip-dot
`
const defaults_httprequestnormalizeuripathstrip_ = `
defaults test
  http-request normalize-uri path-strip-dot if TRUE
`
const defaults_httprequestnormalizeuripathstrip__ = `
defaults test
  http-request normalize-uri path-strip-dotdot
`
const defaults_httprequestnormalizeuripathstrip___ = `
defaults test
  http-request normalize-uri path-strip-dotdot full
`
const defaults_httprequestnormalizeuripathstrip____ = `
defaults test
  http-request normalize-uri path-strip-dotdot if TRUE
`
const defaults_httprequestnormalizeuripathstrip_____ = `
defaults test
  http-request normalize-uri path-strip-dotdot full if TRUE
`
const defaults_httprequestnormalizeuripercentde = `
defaults test
  http-request normalize-uri percent-decode-unreserved
`
const defaults_httprequestnormalizeuripercentde_ = `
defaults test
  http-request normalize-uri percent-decode-unreserved if TRUE
`
const defaults_httprequestnormalizeuripercentde__ = `
defaults test
  http-request normalize-uri percent-decode-unreserved strict
`
const defaults_httprequestnormalizeuripercentde___ = `
defaults test
  http-request normalize-uri percent-decode-unreserved strict if TRUE
`
const defaults_httprequestnormalizeuripercentto = `
defaults test
  http-request normalize-uri percent-to-uppercase
`
const defaults_httprequestnormalizeuripercentto_ = `
defaults test
  http-request normalize-uri percent-to-uppercase if TRUE
`
const defaults_httprequestnormalizeuripercentto__ = `
defaults test
  http-request normalize-uri percent-to-uppercase strict
`
const defaults_httprequestnormalizeuripercentto___ = `
defaults test
  http-request normalize-uri percent-to-uppercase strict if TRUE
`
const defaults_httprequestnormalizeuriquerysort = `
defaults test
  http-request normalize-uri query-sort-by-name
`
const defaults_httprequestnormalizeuriquerysort_ = `
defaults test
  http-request normalize-uri query-sort-by-name if TRUE
`
const defaults_httprequestredirectprefixhttpsmy = `
defaults test
  http-request redirect prefix https://mysite.com
`
const defaults_httprequestreject = `
defaults test
  http-request reject
`
const defaults_httprequestreplaceheaderUseragen = `
defaults test
  http-request replace-header User-agent curl foo
`
const defaults_httprequestreplacepathfoo = `
defaults test
  http-request replace-path (.*) /foo
`
const defaults_httprequestreplacepathfooifTRUE = `
defaults test
  http-request replace-path (.*) /foo if TRUE
`
const defaults_httprequestreplacepathqfoo = `
defaults test
  http-request replace-pathq (.*) /foo
`
const defaults_httprequestreplacepathqfooifTRUE = `
defaults test
  http-request replace-pathq (.*) /foo if TRUE
`
const defaults_httprequestreplaceurihttphttps1 = `
defaults test
  http-request replace-uri ^http://(.*) https://1
`
const defaults_httprequestreplaceurihttphttps1i = `
defaults test
  http-request replace-uri ^http://(.*) https://1 if FALSE
`
const defaults_httprequestreplacevalueXForwarde = `
defaults test
  http-request replace-value X-Forwarded-For ^192.168.(.*)$ 172.16.1
`
const defaults_httprequestscaddgpc121 = `
defaults test
  http-request sc-add-gpc(1,2) 1
`
const defaults_httprequestscaddgpc121ifiserror = `
defaults test
  http-request sc-add-gpc(1,2) 1 if is-error
`
const defaults_httprequestscincgpc12 = `
defaults test
  http-request sc-inc-gpc(1,2)
`
const defaults_httprequestscincgpc12ifFALSE = `
defaults test
  http-request sc-inc-gpc(1,2) if FALSE
`
const defaults_httprequestscincgpc01 = `
defaults test
  http-request sc-inc-gpc0(1)
`
const defaults_httprequestscincgpc01ifFALSE = `
defaults test
  http-request sc-inc-gpc0(1) if FALSE
`
const defaults_httprequestscincgpc11 = `
defaults test
  http-request sc-inc-gpc1(1)
`
const defaults_httprequestscincgpc11ifFALSE = `
defaults test
  http-request sc-inc-gpc1(1) if FALSE
`
const defaults_httprequestscsetgpt12hdrHostlowe = `
defaults test
  http-request sc-set-gpt(1,2) hdr(Host),lower if FALSE
`
const defaults_httprequestscsetgpt01hdrHostlowe = `
defaults test
  http-request sc-set-gpt0(1) hdr(Host),lower
`
const defaults_httprequestscsetgpt0110 = `
defaults test
  http-request sc-set-gpt0(1) 10
`
const defaults_httprequestscsetgpt01hdrHostlowe_ = `
defaults test
  http-request sc-set-gpt0(1) hdr(Host),lower if FALSE
`
const defaults_httprequestsendspoegroupenginegr = `
defaults test
  http-request send-spoe-group engine group
`
const defaults_httprequestsetheaderXvaluevalue = `
defaults test
  http-request set-header X-value value
`
const defaults_httprequestsetloglevelsilent = `
defaults test
  http-request set-log-level silent
`
const defaults_httprequestsetmark20 = `
defaults test
  http-request set-mark 20
`
const defaults_httprequestsetmark0x1Ab = `
defaults test
  http-request set-mark 0x1Ab
`
const defaults_httprequestsetnice0 = `
defaults test
  http-request set-nice 0
`
const defaults_httprequestsetnice0ifFALSE = `
defaults test
  http-request set-nice 0 if FALSE
`
const defaults_httprequestsetmethodPOST = `
defaults test
  http-request set-method POST
`
const defaults_httprequestsetmethodPOSTifFALSE = `
defaults test
  http-request set-method POST if FALSE
`
const defaults_httprequestsetpathhdrhostpath = `
defaults test
  http-request set-path /%[hdr(host)]%[path]
`
const defaults_httprequestsetpathqhdrhostpath = `
defaults test
  http-request set-pathq /%[hdr(host)]%[path]
`
const defaults_httprequestsetpriorityclassreqhd = `
defaults test
  http-request set-priority-class req.hdr(priority)
`
const defaults_httprequestsetpriorityclassreqhd_ = `
defaults test
  http-request set-priority-class req.hdr(priority) if FALSE
`
const defaults_httprequestsetpriorityoffsetreqh = `
defaults test
  http-request set-priority-offset req.hdr(offset)
`
const defaults_httprequestsetpriorityoffsetreqh_ = `
defaults test
  http-request set-priority-offset req.hdr(offset) if FALSE
`
const defaults_httprequestsetqueryqueryregsub3D = `
defaults test
  http-request set-query %[query,regsub(%3D,=,g)]
`
const defaults_httprequestsetsrchdrsrc = `
defaults test
  http-request set-src hdr(src)
`
const defaults_httprequestsetsrchdrsrcifFALSE = `
defaults test
  http-request set-src hdr(src) if FALSE
`
const defaults_httprequestsetsrcporthdrport = `
defaults test
  http-request set-src-port hdr(port)
`
const defaults_httprequestsetsrcporthdrportifFA = `
defaults test
  http-request set-src-port hdr(port) if FALSE
`
const defaults_httprequestsettimeoutserver20 = `
defaults test
  http-request set-timeout server 20
`
const defaults_httprequestsettimeouttunnel20 = `
defaults test
  http-request set-timeout tunnel 20
`
const defaults_httprequestsettimeouttunnel20sif = `
defaults test
  http-request set-timeout tunnel 20s if TRUE
`
const defaults_httprequestsettimeoutserver20sif = `
defaults test
  http-request set-timeout server 20s if TRUE
`
const defaults_httprequestsettimeoutclient20 = `
defaults test
  http-request set-timeout client 20
`
const defaults_httprequestsettimeoutclient20sif = `
defaults test
  http-request set-timeout client 20s if TRUE
`
const defaults_httprequestsettos0ifFALSE = `
defaults test
  http-request set-tos 0 if FALSE
`
const defaults_httprequestsettos0 = `
defaults test
  http-request set-tos 0
`
const defaults_httprequestseturihdrhostpath = `
defaults test
  http-request set-uri /%[hdr(host)]%[path]
`
const defaults_httprequestsetvarreqmyvarreqfhdr = `
defaults test
  http-request set-var(req.my_var) req.fhdr(user-agent),lower
`
const defaults_httprequestsetvarfmtreqmyvarreqf = `
defaults test
  http-request set-var-fmt(req.my_var) req.fhdr(user-agent),lower
`
const defaults_httprequestsilentdrop = `
defaults test
  http-request silent-drop
`
const defaults_httprequestsilentdropifFALSE = `
defaults test
  http-request silent-drop if FALSE
`
const defaults_httprequestsilentdroprstttl1 = `
defaults test
  http-request silent-drop rst-ttl 1
`
const defaults_httprequestsilentdroprstttl1ifsr = `
defaults test
  http-request silent-drop rst-ttl 1 if { src,table_http_req_rate(ratelimits.agg),sub(txn.rate_limit) ge 1000 }
`
const defaults_httprequeststrictmodeon = `
defaults test
  http-request strict-mode on
`
const defaults_httprequeststrictmodeonifFALSE = `
defaults test
  http-request strict-mode on if FALSE
`
const defaults_httprequesttarpit = `
defaults test
  http-request tarpit
`
const defaults_httprequesttarpitdenystatus400 = `
defaults test
  http-request tarpit deny_status 400
`
const defaults_httprequesttarpitifTRUE = `
defaults test
  http-request tarpit if TRUE
`
const defaults_httprequesttarpitdenystatus400if = `
defaults test
  http-request tarpit deny_status 400 if TRUE
`
const defaults_httprequesttarpitdenystatus400co = `
defaults test
  http-request tarpit deny_status 400 content-type application/json if TRUE
`
const defaults_httprequesttarpitdenystatus400co_ = `
defaults test
  http-request tarpit deny_status 400 content-type application/json
`
const defaults_httprequesttarpitdenystatus400co__ = `
defaults test
  http-request tarpit deny_status 400 content-type application/json default-errorfiles
`
const defaults_httprequesttarpitdenystatus400co___ = `
defaults test
  http-request tarpit deny_status 400 content-type application/json errorfile errors
`
const defaults_httprequesttarpitdenystatus400co____ = `
defaults test
  http-request tarpit deny_status 400 content-type application/json string error if TRUE
`
const defaults_httprequesttarpitdenystatus400co_____ = `
defaults test
  http-request tarpit deny_status 400 content-type application/json lf-string error hdr host google.com if TRUE
`
const defaults_httprequesttarpitdenystatus400co______ = `
defaults test
  http-request tarpit deny_status 400 content-type application/json file /var/errors.file
`
const defaults_httprequesttarpitdenystatus400co_______ = `
defaults test
  http-request tarpit deny_status 400 content-type application/json lf-file /var/errors.file
`
const defaults_httprequesttarpitdenystatus400co________ = `
defaults test
  http-request tarpit deny_status 400 content-type application/json string error hdr host google.com if TRUE
`
const defaults_httprequesttarpitdenystatus400co_________ = `
defaults test
  http-request tarpit deny_status 400 content-type application/json string error hdr host google.com hdr x-value bla if TRUE
`
const defaults_httprequesttarpitdenystatus400co__________ = `
defaults test
  http-request tarpit deny_status 400 content-type application/json string error hdr host google.com hdr x-value bla
`
const defaults_httprequesttracksc0src = `
defaults test
  http-request track-sc0 src
`
const defaults_httprequesttracksc1src = `
defaults test
  http-request track-sc1 src
`
const defaults_httprequesttracksc2src = `
defaults test
  http-request track-sc2 src
`
const defaults_httprequesttracksc5src = `
defaults test
  http-request track-sc5 src
`
const defaults_httprequesttracksc5srctableatabl = `
defaults test
  http-request track-sc5 src table a_table
`
const defaults_httprequesttracksc5srctableatabl_ = `
defaults test
  http-request track-sc5 src table a_table if some_cond
`
const defaults_httprequesttracksc5srcifsomecond = `
defaults test
  http-request track-sc5 src if some_cond
`
const defaults_httprequestunsetvarreqmyvar = `
defaults test
  http-request unset-var(req.my_var)
`
const defaults_httprequestunsetvarreqmyvarifFAL = `
defaults test
  http-request unset-var(req.my_var) if FALSE
`
const defaults_httprequestwaitforbodytime20s = `
defaults test
  http-request wait-for-body time 20s
`
const defaults_httprequestwaitforbodytime20sifT = `
defaults test
  http-request wait-for-body time 20s if TRUE
`
const defaults_httprequestwaitforbodytime20satl = `
defaults test
  http-request wait-for-body time 20s at-least 100k
`
const defaults_httprequestwaitforbodytime20satl_ = `
defaults test
  http-request wait-for-body time 20s at-least 100k if TRUE
`
const defaults_httprequestwaitforhandshake = `
defaults test
  http-request wait-for-handshake
`
const defaults_httprequestwaitforhandshakeifFAL = `
defaults test
  http-request wait-for-handshake if FALSE
`
const defaults_httprequestdoresolvetxnmyipmydns = `
defaults test
  http-request do-resolve(txn.myip,mydns) hdr(Host),lower
`
const defaults_httprequestdoresolvetxnmyipmydns_ = `
defaults test
  http-request do-resolve(txn.myip,mydns) hdr(Host),lower if { var(txn.myip) -m found }
`
const defaults_httprequestdoresolvetxnmyipmydns__ = `
defaults test
  http-request do-resolve(txn.myip,mydns) hdr(Host),lower unless { var(txn.myip) -m found }
`
const defaults_httprequestdoresolvetxnmyipmydns___ = `
defaults test
  http-request do-resolve(txn.myip,mydns,ipv4) hdr(Host),lower
`
const defaults_httprequestdoresolvetxnmyipmydns____ = `
defaults test
  http-request do-resolve(txn.myip,mydns,ipv6) hdr(Host),lower
`
const defaults_httprequestsetdstvartxnmyip = `
defaults test
  http-request set-dst var(txn.myip)
`
const defaults_httprequestsetdstvartxnmyipifvar = `
defaults test
  http-request set-dst var(txn.myip) if { var(txn.myip) -m found }
`
const defaults_httprequestsetdstvartxnmyipunles = `
defaults test
  http-request set-dst var(txn.myip) unless { var(txn.myip) -m found }
`
const defaults_httprequestsetdstporthdrxport = `
defaults test
  http-request set-dst-port hdr(x-port)
`
const defaults_httprequestsetdstporthdrxportifv = `
defaults test
  http-request set-dst-port hdr(x-port) if { var(txn.myip) -m found }
`
const defaults_httprequestsetdstporthdrxportunl = `
defaults test
  http-request set-dst-port hdr(x-port) unless { var(txn.myip) -m found }
`
const defaults_httprequestsetdstportint4000 = `
defaults test
  http-request set-dst-port int(4000)
`
const defaults_httprequestreturnstatus400defaul = `
defaults test
  http-request return status 400 default-errorfiles if { var(txn.myip) -m found }
`
const defaults_httprequestreturnstatus400errorf = `
defaults test
  http-request return status 400 errorfile /my/fancy/errorfile if { var(txn.myip) -m found }
`
const defaults_httprequestreturnstatus400errorf_ = `
defaults test
  http-request return status 400 errorfiles myerror if { var(txn.myip) -m found }
`
const defaults_httprequestredirectlocationfileh = `
defaults test
  http-request redirect location /file.html if { var(txn.routecookie) -m found } !{ var(txn.pod),nbsrv -m found }:1]
`
const defaults_httprequestsetbandwidthlimitmyli = `
defaults test
  http-request set-bandwidth-limit my-limit
`
const defaults_httprequestsetbandwidthlimitmyli_ = `
defaults test
  http-request set-bandwidth-limit my-limit limit 1m period 10s
`
const defaults_httprequestsetbandwidthlimitmyli__ = `
defaults test
  http-request set-bandwidth-limit my-limit period 10s
`
const defaults_httprequestsetbandwidthlimitmyli___ = `
defaults test
  http-request set-bandwidth-limit my-limit limit 1m
`
const defaults_httprequestsetbcmark123 = `
defaults test
  http-request set-bc-mark 123
`
const defaults_httprequestsetbcmark0xffffffff = `
defaults test
  http-request set-bc-mark 0xffffffff
`
const defaults_httprequestsetbcmarkhdrportifFAL = `
defaults test
  http-request set-bc-mark hdr(port) if FALSE
`
const defaults_httprequestsetbctos10 = `
defaults test
  http-request set-bc-tos 10
`
const defaults_httprequestsetfcmark0 = `
defaults test
  http-request set-fc-mark 0
`
const defaults_httprequestsetfctos0xffifTRUE = `
defaults test
  http-request set-fc-tos 0xff if TRUE
`
const defaults_httprequestaddheaderAuthorizatio = `
defaults test
  http-request add-header Authorization Basic\ eC1oYXByb3h5LXJlY3J1aXRzOlBlb3BsZSB3aG8gZGVjb2RlIG1lc3NhZ2VzIG9mdGVuIGxvdmUgd29ya2luZyBhdCBIQVByb3h5LiBEbyBub3QgYmUgc2h5LCBjb250YWN0IHVz
`
const defaults_httprequestaddheaderAuthorisatio = `
defaults test
  http-request add-header Authorisation "Basic eC1oYXByb3h5LXJlY3J1aXRzOlBlb3BsZSB3aG8gZGVjb2RlIG1lc3NhZ2VzIG9mdGVuIGxvdmUgd29ya2luZyBhdCBIQVByb3h5LiBEbyBub3QgYmUgc2h5LCBjb250YWN0IHVz"
`
const defaults_httprequestreturnstatus200conten = `
defaults test
  http-request return status 200 content-type "text/plain" string "My content" if { var(txn.myip) -m found }
`
const defaults_httprequestreturnstatus200conten_ = `
defaults test
  http-request return status 200 content-type "text/plain" string "My content" unless { var(txn.myip) -m found }
`
const defaults_httprequestreturncontenttypetext = `
defaults test
  http-request return content-type "text/plain" string "My content" if { var(txn.myip) -m found }
`
const defaults_httprequestreturncontenttypetext_ = `
defaults test
  http-request return content-type 'text/plain' string 'My content' if { var(txn.myip) -m found }
`
const defaults_httprequestreturncontenttypetext__ = `
defaults test
  http-request return content-type "text/plain" lf-string "Hello, you are: %[src]" if { var(txn.myip) -m found }
`
const defaults_httprequestreturncontenttypetext___ = `
defaults test
  http-request return content-type "text/plain" file /my/fancy/response/file if { var(txn.myip) -m found }
`
const defaults_httprequestreturncontenttypetext____ = `
defaults test
  http-request return content-type "text/plain" lf-file /my/fancy/lof/format/response/file if { var(txn.myip) -m found }
`
const defaults_httprequestreturncontenttypetext_____ = `
defaults test
  http-request return content-type "text/plain" string "My content" hdr X-value value if { var(txn.myip) -m found }
`
const defaults_httprequestreturncontenttypetext______ = `
defaults test
  http-request return content-type "text/plain" string "My content" hdr X-value x-value hdr Y-value y-value if { var(txn.myip) -m found }
`
const defaults_httprequestreturncontenttypetext_______ = `
defaults test
  http-request return content-type "text/plain" lf-string "Hello, you are: %[src]"
`
const defaults_httprequestredirectlocationfileh_ = `
defaults test
  http-request redirect location /file.html if { var(txn.routecookie) "ROUTEMP" }:1
`
const defaults_httpresponsesetmapmaplstsrcreshd = `
defaults test
  http-response set-map(map.lst) %[src] %[res.hdr(X-Value)] if value
`
const defaults_httpresponsesetmapmaplstsrcreshd_ = `
defaults test
  http-response set-map(map.lst) %[src] %[res.hdr(X-Value)]
`
const defaults_httpresponseaddaclmaplstsrc = `
defaults test
  http-response add-acl(map.lst) [src]
`
const defaults_httpresponseaddheaderXvaluevalue = `
defaults test
  http-response add-header X-value value
`
const defaults_httpresponsedelaclmaplstsrc = `
defaults test
  http-response del-acl(map.lst) [src]
`
const defaults_httpresponseallow = `
defaults test
  http-response allow
`
const defaults_httpresponsecachestorecachename = `
defaults test
  http-response cache-store cache-name
`
const defaults_httpresponsecachestorecachenamei = `
defaults test
  http-response cache-store cache-name if FALSE
`
const defaults_httpresponsedelheaderXvalue = `
defaults test
  http-response del-header X-value
`
const defaults_httpresponsedelmapmaplstsrcifval = `
defaults test
  http-response del-map(map.lst) %[src] if ! value
`
const defaults_httpresponsedelmapmaplstsrc = `
defaults test
  http-response del-map(map.lst) %[src]
`
const defaults_httpresponsedeny = `
defaults test
  http-response deny
`
const defaults_httpresponsedenydenystatus400 = `
defaults test
  http-response deny deny_status 400
`
const defaults_httpresponsedenyifTRUE = `
defaults test
  http-response deny if TRUE
`
const defaults_httpresponsedenydenystatus400ifT = `
defaults test
  http-response deny deny_status 400 if TRUE
`
const defaults_httpresponsedenydenystatus400con = `
defaults test
  http-response deny deny_status 400 content-type application/json if TRUE
`
const defaults_httpresponsedenydenystatus400con_ = `
defaults test
  http-response deny deny_status 400 content-type application/json
`
const defaults_httpresponsedenydenystatus400con__ = `
defaults test
  http-response deny deny_status 400 content-type application/json default-errorfiles
`
const defaults_httpresponsedenydenystatus400con___ = `
defaults test
  http-response deny deny_status 400 content-type application/json errorfile errors
`
const defaults_httpresponsedenydenystatus400con____ = `
defaults test
  http-response deny deny_status 400 content-type application/json string error if TRUE
`
const defaults_httpresponsedenydenystatus400con_____ = `
defaults test
  http-response deny deny_status 400 content-type application/json lf-string error hdr host google.com if TRUE
`
const defaults_httpresponsedenydenystatus400con______ = `
defaults test
  http-response deny deny_status 400 content-type application/json file /var/errors.file
`
const defaults_httpresponsedenydenystatus400con_______ = `
defaults test
  http-response deny deny_status 400 content-type application/json lf-file /var/errors.file
`
const defaults_httpresponsedenydenystatus400con________ = `
defaults test
  http-response deny deny_status 400 content-type application/json string error hdr host google.com if TRUE
`
const defaults_httpresponsedenydenystatus400con_________ = `
defaults test
  http-response deny deny_status 400 content-type application/json string error hdr host google.com hdr x-value bla if TRUE
`
const defaults_httpresponsedenydenystatus400con__________ = `
defaults test
  http-response deny deny_status 400 content-type application/json string error hdr host google.com hdr x-value bla
`
const defaults_httpresponseluafoo = `
defaults test
  http-response lua.foo
`
const defaults_httpresponseluafooifFALSE = `
defaults test
  http-response lua.foo if FALSE
`
const defaults_httpresponseluafooparam = `
defaults test
  http-response lua.foo param
`
const defaults_httpresponseluafooparamparam2 = `
defaults test
  http-response lua.foo param param2
`
const defaults_httpresponseredirectprefixhttpsm = `
defaults test
  http-response redirect prefix https://mysite.com
`
const defaults_httpresponsereplaceheaderUserage = `
defaults test
  http-response replace-header User-agent curl foo
`
const defaults_httpresponsereplacevalueXForward = `
defaults test
  http-response replace-value X-Forwarded-For ^192.168.(.*)$ 172.16.1
`
const defaults_httpresponsereturnstatus400defau = `
defaults test
  http-response return status 400 default-errorfiles if { var(txn.myip) -m found }
`
const defaults_httpresponsereturnstatus400error = `
defaults test
  http-response return status 400 errorfile /my/fancy/errorfile if { var(txn.myip) -m found }
`
const defaults_httpresponsereturnstatus400error_ = `
defaults test
  http-response return status 400 errorfiles myerror if { var(txn.myip) -m found }
`
const defaults_httpresponsescaddgpc121 = `
defaults test
  http-response sc-add-gpc(1,2) 1
`
const defaults_httpresponsescaddgpc121ifiserror = `
defaults test
  http-response sc-add-gpc(1,2) 1 if is-error
`
const defaults_httpresponsescincgpc12 = `
defaults test
  http-response sc-inc-gpc(1,2)
`
const defaults_httpresponsescincgpc12ifFALSE = `
defaults test
  http-response sc-inc-gpc(1,2) if FALSE
`
const defaults_httpresponsescincgpc01 = `
defaults test
  http-response sc-inc-gpc0(1)
`
const defaults_httpresponsescincgpc01ifFALSE = `
defaults test
  http-response sc-inc-gpc0(1) if FALSE
`
const defaults_httpresponsescincgpc11 = `
defaults test
  http-response sc-inc-gpc1(1)
`
const defaults_httpresponsescincgpc11ifFALSE = `
defaults test
  http-response sc-inc-gpc1(1) if FALSE
`
const defaults_httpresponsescsetgpt12hdrHostlow = `
defaults test
  http-response sc-set-gpt(1,2) hdr(Host),lower if FALSE
`
const defaults_httpresponsescsetgpt01hdrHostlow = `
defaults test
  http-response sc-set-gpt0(1) hdr(Host),lower
`
const defaults_httpresponsescsetgpt0110 = `
defaults test
  http-response sc-set-gpt0(1) 10
`
const defaults_httpresponsescsetgpt01hdrHostlow_ = `
defaults test
  http-response sc-set-gpt0(1) hdr(Host),lower if FALSE
`
const defaults_httpresponsesendspoegroupengineg = `
defaults test
  http-response send-spoe-group engine group
`
const defaults_httpresponsesetheaderXvaluevalue = `
defaults test
  http-response set-header X-value value
`
const defaults_httpresponsesetloglevelsilent = `
defaults test
  http-response set-log-level silent
`
const defaults_httpresponsesetmark20 = `
defaults test
  http-response set-mark 20
`
const defaults_httpresponsesetmark0x1Ab = `
defaults test
  http-response set-mark 0x1Ab
`
const defaults_httpresponsesetnice0 = `
defaults test
  http-response set-nice 0
`
const defaults_httpresponsesetnice0ifFALSE = `
defaults test
  http-response set-nice 0 if FALSE
`
const defaults_httpresponsesetstatus503 = `
defaults test
  http-response set-status 503
`
const defaults_httpresponsesettimeoutserver20 = `
defaults test
  http-response set-timeout server 20
`
const defaults_httpresponsesettimeouttunnel20 = `
defaults test
  http-response set-timeout tunnel 20
`
const defaults_httpresponsesettimeouttunnel20si = `
defaults test
  http-response set-timeout tunnel 20s if TRUE
`
const defaults_httpresponsesettimeoutserver20si = `
defaults test
  http-response set-timeout server 20s if TRUE
`
const defaults_httpresponsesettimeoutclient20 = `
defaults test
  http-response set-timeout client 20
`
const defaults_httpresponsesettimeoutclient20si = `
defaults test
  http-response set-timeout client 20s if TRUE
`
const defaults_httpresponsesettos0ifFALSE = `
defaults test
  http-response set-tos 0 if FALSE
`
const defaults_httpresponsesettos0 = `
defaults test
  http-response set-tos 0
`
const defaults_httpresponsesetvarreqmyvarresfhd = `
defaults test
  http-response set-var(req.my_var) res.fhdr(user-agent),lower
`
const defaults_httpresponsesetvarfmtreqmyvarres = `
defaults test
  http-response set-var-fmt(req.my_var) res.fhdr(user-agent),lower
`
const defaults_httpresponsesilentdrop = `
defaults test
  http-response silent-drop
`
const defaults_httpresponsesilentdropifFALSE = `
defaults test
  http-response silent-drop if FALSE
`
const defaults_httpresponsesilentdroprstttl1 = `
defaults test
  http-response silent-drop rst-ttl 1
`
const defaults_httpresponsesilentdroprstttl1ifs = `
defaults test
  http-response silent-drop rst-ttl 1 if { src,table_http_req_rate(ratelimits.agg),sub(txn.rate_limit) ge 1000 }
`
const defaults_httpresponseunsetvarreqmyvar = `
defaults test
  http-response unset-var(req.my_var)
`
const defaults_httpresponseunsetvarreqmyvarifFA = `
defaults test
  http-response unset-var(req.my_var) if FALSE
`
const defaults_httpresponsetracksc0srcifFALSE = `
defaults test
  http-response track-sc0 src if FALSE
`
const defaults_httpresponsetracksc0srctabletrif = `
defaults test
  http-response track-sc0 src table tr if FALSE
`
const defaults_httpresponsetracksc0src = `
defaults test
  http-response track-sc0 src
`
const defaults_httpresponsetracksc1srcifFALSE = `
defaults test
  http-response track-sc1 src if FALSE
`
const defaults_httpresponsetracksc1srctabletrif = `
defaults test
  http-response track-sc1 src table tr if FALSE
`
const defaults_httpresponsetracksc1src = `
defaults test
  http-response track-sc1 src
`
const defaults_httpresponsetracksc2srcifFALSE = `
defaults test
  http-response track-sc2 src if FALSE
`
const defaults_httpresponsetracksc2srctabletrif = `
defaults test
  http-response track-sc2 src table tr if FALSE
`
const defaults_httpresponsetracksc2src = `
defaults test
  http-response track-sc2 src
`
const defaults_httpresponsetracksc5src = `
defaults test
  http-response track-sc5 src
`
const defaults_httpresponsetracksc5srctableatab = `
defaults test
  http-response track-sc5 src table a_table
`
const defaults_httpresponsetracksc5srctableatab_ = `
defaults test
  http-response track-sc5 src table a_table if some_cond
`
const defaults_httpresponsetracksc5srcifsomecon = `
defaults test
  http-response track-sc5 src if some_cond
`
const defaults_httpresponsestrictmodeon = `
defaults test
  http-response strict-mode on
`
const defaults_httpresponsestrictmodeonifFALSE = `
defaults test
  http-response strict-mode on if FALSE
`
const defaults_httpresponsewaitforbodytime20s = `
defaults test
  http-response wait-for-body time 20s
`
const defaults_httpresponsewaitforbodytime20sif = `
defaults test
  http-response wait-for-body time 20s if TRUE
`
const defaults_httpresponsewaitforbodytime20sat = `
defaults test
  http-response wait-for-body time 20s at-least 100k
`
const defaults_httpresponsewaitforbodytime20sat_ = `
defaults test
  http-response wait-for-body time 20s at-least 100k if TRUE
`
const defaults_httpresponsesetbandwidthlimitmyl = `
defaults test
  http-response set-bandwidth-limit my-limit
`
const defaults_httpresponsesetbandwidthlimitmyl_ = `
defaults test
  http-response set-bandwidth-limit my-limit limit 1m period 10s
`
const defaults_httpresponsesetbandwidthlimitmyl__ = `
defaults test
  http-response set-bandwidth-limit my-limit period 10s
`
const defaults_httpresponsesetbandwidthlimitmyl___ = `
defaults test
  http-response set-bandwidth-limit my-limit limit 1m
`
const defaults_httpresponsesetfcmark2000 = `
defaults test
  http-response set-fc-mark 2000
`
const defaults_httpresponsesetfctos200 = `
defaults test
  http-response set-fc-tos 200
`
const defaults_httpresponsereturnstatus200conte = `
defaults test
  http-response return status 200 content-type "text/plain" string "My content" if { var(txn.myip) -m found }
`
const defaults_httpresponsereturnstatus200conte_ = `
defaults test
  http-response return status 200 content-type "text/plain" string "My content" unless { var(txn.myip) -m found }
`
const defaults_httpresponsereturncontenttypetex = `
defaults test
  http-response return content-type "text/plain" string "My content" if { var(txn.myip) -m found }
`
const defaults_httpresponsereturncontenttypetex_ = `
defaults test
  http-response return content-type 'text/plain' string 'My content' if { var(txn.myip) -m found }
`
const defaults_httpresponsereturncontenttypetex__ = `
defaults test
  http-response return content-type "text/plain" lf-string "Hello, you are: %[src]" if { var(txn.myip) -m found }
`
const defaults_httpresponsereturncontenttypetex___ = `
defaults test
  http-response return content-type "text/plain" file /my/fancy/response/file if { var(txn.myip) -m found }
`
const defaults_httpresponsereturncontenttypetex____ = `
defaults test
  http-response return content-type "text/plain" lf-file /my/fancy/lof/format/response/file if { var(txn.myip) -m found }
`
const defaults_httpresponsereturncontenttypetex_____ = `
defaults test
  http-response return content-type "text/plain" string "My content" hdr X-value value if { var(txn.myip) -m found }
`
const defaults_httpresponsereturncontenttypetex______ = `
defaults test
  http-response return content-type "text/plain" string "My content" hdr X-value x-value hdr Y-value y-value if { var(txn.myip) -m found }
`
const defaults_httpresponsereturncontenttypetex_______ = `
defaults test
  http-response return content-type "text/plain" lf-string "Hello, you are: %[src]"
`
const defaults_httpafterresponseallow = `
defaults test
  http-after-response allow
`
const defaults_httpafterresponseallowifacl = `
defaults test
  http-after-response allow if acl
`
const defaults_httpafterresponsesetheaderStrict = `
defaults test
  http-after-response set-header Strict-Transport-Security \"max-age=31536000\"
`
const defaults_httpafterresponseaddheaderXHeade = `
defaults test
  http-after-response add-header X-Header \"foo=bar\"
`
const defaults_httpafterresponseaddheaderXHeade_ = `
defaults test
  http-after-response add-header X-Header \"foo=bar\" if acl
`
const defaults_httpafterresponseaddheaderXHeade__ = `
defaults test
  http-after-response add-header X-Header \"foo=bar\" unless acl
`
const defaults_httpafterresponseallowunlessacl = `
defaults test
  http-after-response allow unless acl
`
const defaults_httpafterresponsedelheaderXValue = `
defaults test
  http-after-response del-header X-Value
`
const defaults_httpafterresponsedelheaderXValue_ = `
defaults test
  http-after-response del-header X-Value -m GET
`
const defaults_httpafterresponsedelheaderXValue__ = `
defaults test
  http-after-response del-header X-Value -m GET if acl
`
const defaults_httpafterresponsedelheaderXValue___ = `
defaults test
  http-after-response del-header X-Value -m GET unless acl
`
const defaults_httpafterresponsereplaceheaderSe = `
defaults test
  http-after-response replace-header Set-Cookie (C=[^;]*);(.*) \\1;ip=%bi;\\2
`
const defaults_httpafterresponsereplaceheaderSe_ = `
defaults test
  http-after-response replace-header Set-Cookie (C=[^;]*);(.*) \\1;ip=%bi;\\2 if acl
`
const defaults_httpafterresponsereplacevalueCac = `
defaults test
  http-after-response replace-value Cache-control ^public$ private
`
const defaults_httpafterresponsereplacevalueCac_ = `
defaults test
  http-after-response replace-value Cache-control ^public$ private if acl
`
const defaults_httpafterresponsesetstatus431 = `
defaults test
  http-after-response set-status 431
`
const defaults_httpafterresponsesetstatus503rea = `
defaults test
  http-after-response set-status 503 reason \"SlowDown\"
`
const defaults_httpafterresponsesetstatus500rea = `
defaults test
  http-after-response set-status 500 reason \"ServiceUnavailable\" if acl
`
const defaults_httpafterresponsesetstatus500rea_ = `
defaults test
  http-after-response set-status 500 reason \"ServiceUnavailable\" unless acl
`
const defaults_httpafterresponsesetvarsesslastr = `
defaults test
  http-after-response set-var(sess.last_redir) res.hdr(location)
`
const defaults_httpafterresponsesetvarsesslastr_ = `
defaults test
  http-after-response set-var(sess.last_redir) res.hdr(location) if acl
`
const defaults_httpafterresponsesetvarsesslastr__ = `
defaults test
  http-after-response set-var(sess.last_redir) res.hdr(location) unless acl
`
const defaults_httpafterresponsestrictmodeon = `
defaults test
  http-after-response strict-mode on
`
const defaults_httpafterresponsestrictmodeoff = `
defaults test
  http-after-response strict-mode off
`
const defaults_httpafterresponseunsetvarsesslas = `
defaults test
  http-after-response unset-var(sess.last_redir)
`
const defaults_httpafterresponseunsetvarsesslas_ = `
defaults test
  http-after-response unset-var(sess.last_redir) if acl
`
const defaults_httpafterresponseunsetvarsesslas__ = `
defaults test
  http-after-response unset-var(sess.last_redir) unless acl
`
const defaults_httpafterresponsesetmapmaplstsrc = `
defaults test
  http-after-response set-map(map.lst) %[src] %[res.hdr(X-Value)] if value
`
const defaults_httpafterresponsesetmapmaplstsrc_ = `
defaults test
  http-after-response set-map(map.lst) %[src] %[res.hdr(X-Value)]
`
const defaults_httpafterresponsedelaclmaplstsrc = `
defaults test
  http-after-response del-acl(map.lst) [src]
`
const defaults_httpafterresponsedelmapmaplstsrc = `
defaults test
  http-after-response del-map(map.lst) %[src] if ! value
`
const defaults_httpafterresponsedelmapmaplstsrc_ = `
defaults test
  http-after-response del-map(map.lst) %[src]
`
const defaults_httpafterresponsescaddgpc121 = `
defaults test
  http-after-response sc-add-gpc(1,2) 1
`
const defaults_httpafterresponsescaddgpc121ifis = `
defaults test
  http-after-response sc-add-gpc(1,2) 1 if is-error
`
const defaults_httpafterresponsescincgpc12 = `
defaults test
  http-after-response sc-inc-gpc(1,2)
`
const defaults_httpafterresponsescincgpc12ifise = `
defaults test
  http-after-response sc-inc-gpc(1,2) if is-error
`
const defaults_httpafterresponsescincgpc01 = `
defaults test
  http-after-response sc-inc-gpc0(1)
`
const defaults_httpafterresponsescincgpc01ifFAL = `
defaults test
  http-after-response sc-inc-gpc0(1) if FALSE
`
const defaults_httpafterresponsescincgpc11 = `
defaults test
  http-after-response sc-inc-gpc1(1)
`
const defaults_httpafterresponsescincgpc11ifFAL = `
defaults test
  http-after-response sc-inc-gpc1(1) if FALSE
`
const defaults_httpafterresponsescsetgpt1210 = `
defaults test
  http-after-response sc-set-gpt(1,2) 10
`
const defaults_httpafterresponsescsetgpt01hdrHo = `
defaults test
  http-after-response sc-set-gpt0(1) hdr(Host),lower
`
const defaults_httpafterresponsescsetgpt0110 = `
defaults test
  http-after-response sc-set-gpt0(1) 10
`
const defaults_httpafterresponsescsetgpt01hdrHo_ = `
defaults test
  http-after-response sc-set-gpt0(1) hdr(Host),lower if FALSE
`
const defaults_httperrorstatus400 = `
defaults test
  http-error status 400
`
const defaults_httperrorstatus400defaulterrorfi = `
defaults test
  http-error status 400 default-errorfiles
`
const defaults_httperrorstatus400errorfilemyfan = `
defaults test
  http-error status 400 errorfile /my/fancy/errorfile
`
const defaults_httperrorstatus400errorfilesmyer = `
defaults test
  http-error status 400 errorfiles myerror
`
const defaults_httperrorstatus200contenttypetex = `
defaults test
  http-error status 200 content-type "text/plain" string "My content"
`
const defaults_httperrorstatus400contenttypetex = `
defaults test
  http-error status 400 content-type "text/plain" lf-string "Hello, you are: %[src]"
`
const defaults_httperrorstatus400contenttypetex_ = `
defaults test
  http-error status 400 content-type "text/plain" file /my/fancy/response/file
`
const defaults_httperrorstatus400contenttypetex__ = `
defaults test
  http-error status 400 content-type "text/plain" lf-file /my/fancy/lof/format/response/file
`
const defaults_httperrorstatus400contenttypetex___ = `
defaults test
  http-error status 400 content-type "text/plain" string "My content" hdr X-value value
`
const defaults_httperrorstatus400contenttypetex____ = `
defaults test
  http-error status 400 content-type "text/plain" string "My content" hdr X-value x-value hdr Y-value y-value
`
const defaults_httpcheckcommenttestcomment = `
defaults test
  http-check comment testcomment
`
const defaults_httpcheckconnect = `
defaults test
  http-check connect
`
const defaults_httpcheckconnectdefault = `
defaults test
  http-check connect default
`
const defaults_httpcheckconnectport8080 = `
defaults test
  http-check connect port 8080
`
const defaults_httpcheckconnectaddr8888 = `
defaults test
  http-check connect addr 8.8.8.8
`
const defaults_httpcheckconnectsendproxy = `
defaults test
  http-check connect send-proxy
`
const defaults_httpcheckconnectviasocks4 = `
defaults test
  http-check connect via-socks4
`
const defaults_httpcheckconnectssl = `
defaults test
  http-check connect ssl
`
const defaults_httpcheckconnectsnihaproxy1wteu = `
defaults test
  http-check connect sni haproxy.1wt.eu
`
const defaults_httpcheckconnectalpnh2http11 = `
defaults test
  http-check connect alpn h2,http/1.1
`
const defaults_httpcheckconnectprotoh2 = `
defaults test
  http-check connect proto h2
`
const defaults_httpcheckconnectlinger = `
defaults test
  http-check connect linger
`
const defaults_httpcheckconnectcommenttestcomme = `
defaults test
  http-check connect comment testcomment
`
const defaults_httpcheckconnectport443addr8888s = `
defaults test
  http-check connect port 443 addr 8.8.8.8 send-proxy via-socks4 ssl sni haproxy.1wt.eu alpn h2,http/1.1 linger proto h2 comment testcomment
`
const defaults_httpcheckdisableon404 = `
defaults test
  http-check disable-on-404
`
const defaults_httpcheckexpectstatus200 = `
defaults test
  http-check expect status 200
`
const defaults_httpcheckexpectminrecv50status20 = `
defaults test
  http-check expect min-recv 50 status 200
`
const defaults_httpcheckexpectcommenttestcommen = `
defaults test
  http-check expect comment testcomment status 200
`
const defaults_httpcheckexpectokstatusL7OKstatu = `
defaults test
  http-check expect ok-status L7OK status 200
`
const defaults_httpcheckexpecterrorstatusL7RSPs = `
defaults test
  http-check expect error-status L7RSP status 200
`
const defaults_httpcheckexpecttoutstatusL7TOUTs = `
defaults test
  http-check expect tout-status L7TOUT status 200
`
const defaults_httpcheckexpectonsuccessmylogfor = `
defaults test
  http-check expect on-success \"my-log-format\" status 200
`
const defaults_httpcheckexpectonerrormylogforma = `
defaults test
  http-check expect on-error \"my-log-format\" status 200
`
const defaults_httpcheckexpectstatuscode500stat = `
defaults test
  http-check expect status-code \"500\" status 200
`
const defaults_httpcheckexpectstringSQLError = `
defaults test
  http-check expect ! string SQL\\ Error
`
const defaults_httpcheckexpectrstatus5 = `
defaults test
  http-check expect ! rstatus ^5
`
const defaults_httpcheckexpectrstringtag09afhtm = `
defaults test
  http-check expect rstring <!--tag:[0-9a-f]*--></html>
`
const defaults_httpchecksendmethGET = `
defaults test
  http-check send meth GET
`
const defaults_httpchecksendurihealth = `
defaults test
  http-check send uri /health
`
const defaults_httpchecksendverHTTP11 = `
defaults test
  http-check send ver \"HTTP/1.1\"
`
const defaults_httpchecksendcommenttestcomment = `
defaults test
  http-check send comment testcomment
`
const defaults_httpchecksendmethGETurihealthver = `
defaults test
  http-check send meth GET uri /health ver \"HTTP/1.1\" hdr Host example.com hdr Accept-Encoding gzip body '{\"key\":\"value\"}'
`
const defaults_httpchecksendurilfmylogformatbod = `
defaults test
  http-check send uri-lf my-log-format body-lf 'my-log-format'
`
const defaults_httpchecksendstate = `
defaults test
  http-check send-state
`
const defaults_httpchecksetvarcheckportint1234 = `
defaults test
  http-check set-var(check.port) int(1234)
`
const defaults_httpchecksetvarfmtcheckportint12 = `
defaults test
  http-check set-var-fmt(check.port) int(1234)
`
const defaults_httpcheckunsetvartxnfrom = `
defaults test
  http-check unset-var(txn.from)
`
const defaults_tcpcheckcommenttestcomment = `
defaults test
  tcp-check comment testcomment
`
const defaults_tcpcheckconnect = `
defaults test
  tcp-check connect
`
const defaults_tcpcheckconnectport443ssl = `
defaults test
  tcp-check connect port 443 ssl
`
const defaults_tcpcheckconnectport110linger = `
defaults test
  tcp-check connect port 110 linger
`
const defaults_tcpcheckconnectport143 = `
defaults test
  tcp-check connect port 143
`
const defaults_tcpcheckexpectstringPONG = `
defaults test
  tcp-check expect string +PONG
`
const defaults_tcpcheckexpectstringrolemaster = `
defaults test
  tcp-check expect string role:master
`
const defaults_tcpcheckexpectstringOK = `
defaults test
  tcp-check expect string +OK
`
const defaults_tcpchecksendlftestfmt = `
defaults test
  tcp-check send-lf testfmt
`
const defaults_tcpchecksendlftestfmtcommenttest = `
defaults test
  tcp-check send-lf testfmt comment testcomment
`
const defaults_tcpchecksendbinarytesthexstring = `
defaults test
  tcp-check send-binary testhexstring
`
const defaults_tcpchecksendbinarytesthexstringc = `
defaults test
  tcp-check send-binary testhexstring comment testcomment
`
const defaults_tcpchecksendbinarylftesthexfmt = `
defaults test
  tcp-check send-binary-lf testhexfmt
`
const defaults_tcpchecksendbinarylftesthexfmtco = `
defaults test
  tcp-check send-binary-lf testhexfmt comment testcomment
`
const defaults_tcpchecksetvarcheckportint1234 = `
defaults test
  tcp-check set-var(check.port) int(1234)
`
const defaults_tcpcheckexpectstringOKPOP3ready = `
defaults test
  tcp-check expect string +OK\ POP3\ ready
`
const defaults_tcpcheckexpectstringOKIMAP4ready = `
defaults test
  tcp-check expect string *\ OK\ IMAP4\ ready
`
const defaults_tcpchecksendPINGrn = `
defaults test
  tcp-check send PING\r\n
`
const defaults_tcpchecksendPINGrncommenttestcom = `
defaults test
  tcp-check send PING\r\n comment testcomment
`
const defaults_tcpchecksendQUITrn = `
defaults test
  tcp-check send QUIT\r\n
`
const defaults_tcpchecksendQUITrncommenttestcom = `
defaults test
  tcp-check send QUIT\r\n comment testcomment
`
const defaults_tcpchecksendinforeplicationrn = `
defaults test
  tcp-check send info\ replication\r\n
`
const defaults_tcpchecksetvarfmtchecknameH = `
defaults test
  tcp-check set-var-fmt(check.name) "%H"
`
const defaults_tcpchecksetvarfmttxnfromaddrsrcs = `
defaults test
  tcp-check set-var-fmt(txn.from) "addr=%[src]:%[src_port]"
`
const defaults_tcpcheckunsetvartxnfrom = `
defaults test
  tcp-check unset-var(txn.from)
`
const defaults_tcprequestcontentaccept = `
defaults test
  tcp-request content accept
`
const defaults_tcprequestcontentacceptifHTTP = `
defaults test
  tcp-request content accept if !HTTP
`
const defaults_tcprequestcontentreject = `
defaults test
  tcp-request content reject
`
const defaults_tcprequestcontentrejectifHTTP = `
defaults test
  tcp-request content reject if !HTTP
`
const defaults_tcprequestcontentcapturereqpaylo = `
defaults test
  tcp-request content capture req.payload(0,6) len 6
`
const defaults_tcprequestcontentcapturereqpaylo_ = `
defaults test
  tcp-request content capture req.payload(0,6) len 6 if !HTTP
`
const defaults_tcprequestcontentdoresolvetxnmyi = `
defaults test
  tcp-request content do-resolve(txn.myip,mydns,ipv6) capture.req.hdr(0),lower
`
const defaults_tcprequestcontentdoresolvetxnmyi_ = `
defaults test
  tcp-request content do-resolve(txn.myip,mydns) capture.req.hdr(0),lower
`
const defaults_tcprequestcontentsetpriorityclas = `
defaults test
  tcp-request content set-priority-class int(1)
`
const defaults_tcprequestcontentsetpriorityclas_ = `
defaults test
  tcp-request content set-priority-class int(1) if some_check
`
const defaults_tcprequestcontentsetpriorityoffs = `
defaults test
  tcp-request content set-priority-offset int(10)
`
const defaults_tcprequestcontentsetpriorityoffs_ = `
defaults test
  tcp-request content set-priority-offset int(10) if some_check
`
const defaults_tcprequestcontenttracksc0src = `
defaults test
  tcp-request content track-sc0 src
`
const defaults_tcprequestcontenttracksc0srcifso = `
defaults test
  tcp-request content track-sc0 src if some_check
`
const defaults_tcprequestcontenttracksc1src = `
defaults test
  tcp-request content track-sc1 src
`
const defaults_tcprequestcontenttracksc1srcifso = `
defaults test
  tcp-request content track-sc1 src if some_check
`
const defaults_tcprequestcontenttracksc2src = `
defaults test
  tcp-request content track-sc2 src
`
const defaults_tcprequestcontenttracksc2srcifso = `
defaults test
  tcp-request content track-sc2 src if some_check
`
const defaults_tcprequestcontenttracksc0srctabl = `
defaults test
  tcp-request content track-sc0 src table foo
`
const defaults_tcprequestcontenttracksc0srctabl_ = `
defaults test
  tcp-request content track-sc0 src table foo if some_check
`
const defaults_tcprequestcontenttracksc1srctabl = `
defaults test
  tcp-request content track-sc1 src table foo
`
const defaults_tcprequestcontenttracksc1srctabl_ = `
defaults test
  tcp-request content track-sc1 src table foo if some_check
`
const defaults_tcprequestcontenttracksc2srctabl = `
defaults test
  tcp-request content track-sc2 src table foo
`
const defaults_tcprequestcontenttracksc2srctabl_ = `
defaults test
  tcp-request content track-sc2 src table foo if some_check
`
const defaults_tcprequestcontenttracksc5src = `
defaults test
  tcp-request content track-sc5 src
`
const defaults_tcprequestcontenttracksc5srcifso = `
defaults test
  tcp-request content track-sc5 src if some_check
`
const defaults_tcprequestcontenttracksc5srctabl = `
defaults test
  tcp-request content track-sc5 src table foo
`
const defaults_tcprequestcontenttracksc5srctabl_ = `
defaults test
  tcp-request content track-sc5 src table foo if some_check
`
const defaults_tcprequestcontentscincgpc12 = `
defaults test
  tcp-request content sc-inc-gpc(1,2)
`
const defaults_tcprequestcontentscincgpc12ifise = `
defaults test
  tcp-request content sc-inc-gpc(1,2) if is-error
`
const defaults_tcprequestcontentscincgpc02 = `
defaults test
  tcp-request content sc-inc-gpc0(2)
`
const defaults_tcprequestcontentscincgpc02ifise = `
defaults test
  tcp-request content sc-inc-gpc0(2) if is-error
`
const defaults_tcprequestcontentscincgpc12_ = `
defaults test
  tcp-request content sc-inc-gpc1(2)
`
const defaults_tcprequestcontentscincgpc12ifise_ = `
defaults test
  tcp-request content sc-inc-gpc1(2) if is-error
`
const defaults_tcprequestcontentscsetgptx91337i = `
defaults test
  tcp-request content sc-set-gpt(x,9) 1337 if exceeds_limit
`
const defaults_tcprequestcontentscsetgpt001337 = `
defaults test
  tcp-request content sc-set-gpt0(0) 1337
`
const defaults_tcprequestcontentscsetgpt001337i = `
defaults test
  tcp-request content sc-set-gpt0(0) 1337 if exceeds_limit
`
const defaults_tcprequestcontentscaddgpc121 = `
defaults test
  tcp-request content sc-add-gpc(1,2) 1
`
const defaults_tcprequestcontentscaddgpc121ifis = `
defaults test
  tcp-request content sc-add-gpc(1,2) 1 if is-error
`
const defaults_tcprequestcontentsetdstipv410001 = `
defaults test
  tcp-request content set-dst ipv4(10.0.0.1)
`
const defaults_tcprequestcontentsetvarsesssrcsr = `
defaults test
  tcp-request content set-var(sess.src) src
`
const defaults_tcprequestcontentsetvarsessdnssl = `
defaults test
  tcp-request content set-var(sess.dn) ssl_c_s_dn
`
const defaults_tcprequestcontentsetvarfmtsesssr = `
defaults test
  tcp-request content set-var-fmt(sess.src) src
`
const defaults_tcprequestcontentsetvarfmtsessdn = `
defaults test
  tcp-request content set-var-fmt(sess.dn) ssl_c_s_dn
`
const defaults_tcprequestcontentunsetvarsesssrc = `
defaults test
  tcp-request content unset-var(sess.src)
`
const defaults_tcprequestcontentunsetvarsessdn = `
defaults test
  tcp-request content unset-var(sess.dn)
`
const defaults_tcprequestcontentsilentdrop = `
defaults test
  tcp-request content silent-drop
`
const defaults_tcprequestcontentsilentdropifHTT = `
defaults test
  tcp-request content silent-drop if !HTTP
`
const defaults_tcprequestcontentsilentdroprsttt = `
defaults test
  tcp-request content silent-drop rst-ttl 1
`
const defaults_tcprequestcontentsilentdroprsttt_ = `
defaults test
  tcp-request content silent-drop rst-ttl 1 if { src,table_http_req_rate(ratelimits.agg),sub(txn.rate_limit) ge 1000 }
`
const defaults_tcprequestcontentsendspoegroupen = `
defaults test
  tcp-request content send-spoe-group engine group
`
const defaults_tcprequestcontentuseserviceluade = `
defaults test
  tcp-request content use-service lua.deny
`
const defaults_tcprequestcontentuseserviceluade_ = `
defaults test
  tcp-request content use-service lua.deny if !HTTP
`
const defaults_tcprequestcontentluafoo = `
defaults test
  tcp-request content lua.foo
`
const defaults_tcprequestcontentluafooparamifHT = `
defaults test
  tcp-request content lua.foo param if !HTTP
`
const defaults_tcprequestcontentluafooparampara = `
defaults test
  tcp-request content lua.foo param param1
`
const defaults_tcprequestconnectionaccept = `
defaults test
  tcp-request connection accept
`
const defaults_tcprequestconnectionacceptifHTTP = `
defaults test
  tcp-request connection accept if !HTTP
`
const defaults_tcprequestconnectionreject = `
defaults test
  tcp-request connection reject
`
const defaults_tcprequestconnectionrejectifHTTP = `
defaults test
  tcp-request connection reject if !HTTP
`
const defaults_tcprequestconnectionexpectproxyl = `
defaults test
  tcp-request connection expect-proxy layer4 if { src -f proxies.lst }
`
const defaults_tcprequestconnectionexpectnetsca = `
defaults test
  tcp-request connection expect-netscaler-cip layer4
`
const defaults_tcprequestconnectionexpectnetsca_ = `
defaults test
  tcp-request connection expect-netscaler-cip layer4 if TRUE
`
const defaults_tcprequestconnectioncapturereqpa = `
defaults test
  tcp-request connection capture req.payload(0,6) len 6
`
const defaults_tcprequestconnectiontracksc0src = `
defaults test
  tcp-request connection track-sc0 src
`
const defaults_tcprequestconnectiontracksc0srci = `
defaults test
  tcp-request connection track-sc0 src if some_check
`
const defaults_tcprequestconnectiontracksc1src = `
defaults test
  tcp-request connection track-sc1 src
`
const defaults_tcprequestconnectiontracksc1srci = `
defaults test
  tcp-request connection track-sc1 src if some_check
`
const defaults_tcprequestconnectiontracksc2src = `
defaults test
  tcp-request connection track-sc2 src
`
const defaults_tcprequestconnectiontracksc2srci = `
defaults test
  tcp-request connection track-sc2 src if some_check
`
const defaults_tcprequestconnectiontracksc0srct = `
defaults test
  tcp-request connection track-sc0 src table foo
`
const defaults_tcprequestconnectiontracksc0srct_ = `
defaults test
  tcp-request connection track-sc0 src table foo if some_check
`
const defaults_tcprequestconnectiontracksc1srct = `
defaults test
  tcp-request connection track-sc1 src table foo
`
const defaults_tcprequestconnectiontracksc1srct_ = `
defaults test
  tcp-request connection track-sc1 src table foo if some_check
`
const defaults_tcprequestconnectiontracksc2srct = `
defaults test
  tcp-request connection track-sc2 src table foo
`
const defaults_tcprequestconnectiontracksc2srct_ = `
defaults test
  tcp-request connection track-sc2 src table foo if some_check
`
const defaults_tcprequestconnectiontracksc5src = `
defaults test
  tcp-request connection track-sc5 src
`
const defaults_tcprequestconnectiontracksc5srci = `
defaults test
  tcp-request connection track-sc5 src if some_check
`
const defaults_tcprequestconnectiontracksc5srct = `
defaults test
  tcp-request connection track-sc5 src table foo
`
const defaults_tcprequestconnectiontracksc5srct_ = `
defaults test
  tcp-request connection track-sc5 src table foo if some_check
`
const defaults_tcprequestconnectionscaddgpc121 = `
defaults test
  tcp-request connection sc-add-gpc(1,2) 1
`
const defaults_tcprequestconnectionscaddgpc121i = `
defaults test
  tcp-request connection sc-add-gpc(1,2) 1 if is-error
`
const defaults_tcprequestconnectionscincgpc12 = `
defaults test
  tcp-request connection sc-inc-gpc(1,2)
`
const defaults_tcprequestconnectionscincgpc12if = `
defaults test
  tcp-request connection sc-inc-gpc(1,2) if is-error
`
const defaults_tcprequestconnectionscincgpc02 = `
defaults test
  tcp-request connection sc-inc-gpc0(2)
`
const defaults_tcprequestconnectionscincgpc02if = `
defaults test
  tcp-request connection sc-inc-gpc0(2) if is-error
`
const defaults_tcprequestconnectionscincgpc12_ = `
defaults test
  tcp-request connection sc-inc-gpc1(2)
`
const defaults_tcprequestconnectionscincgpc12if_ = `
defaults test
  tcp-request connection sc-inc-gpc1(2) if is-error
`
const defaults_tcprequestconnectionscsetgptscx4 = `
defaults test
  tcp-request connection sc-set-gpt(scx,44) 1337 if exceeds_limit
`
const defaults_tcprequestconnectionscsetgpt0013 = `
defaults test
  tcp-request connection sc-set-gpt0(0) 1337
`
const defaults_tcprequestconnectionscsetgpt0013_ = `
defaults test
  tcp-request connection sc-set-gpt0(0) 1337 if exceeds_limit
`
const defaults_tcprequestconnectionsetsrcsrcipm = `
defaults test
  tcp-request connection set-src src,ipmask(24)
`
const defaults_tcprequestconnectionsetsrcsrcipm_ = `
defaults test
  tcp-request connection set-src src,ipmask(24) if some_check
`
const defaults_tcprequestconnectionsetsrchdrxfo = `
defaults test
  tcp-request connection set-src hdr(x-forwarded-for)
`
const defaults_tcprequestconnectionsetsrchdrxfo_ = `
defaults test
  tcp-request connection set-src hdr(x-forwarded-for) if some_check
`
const defaults_tcprequestconnectionsilentdrop = `
defaults test
  tcp-request connection silent-drop
`
const defaults_tcprequestconnectionsilentdropif = `
defaults test
  tcp-request connection silent-drop if !HTTP
`
const defaults_tcprequestconnectionsilentdroprs = `
defaults test
  tcp-request connection silent-drop rst-ttl 1
`
const defaults_tcprequestconnectionsilentdroprs_ = `
defaults test
  tcp-request connection silent-drop rst-ttl 1 if { src,table_http_req_rate(ratelimits.agg),sub(txn.rate_limit) ge 1000 }
`
const defaults_tcprequestconnectionluafoo = `
defaults test
  tcp-request connection lua.foo
`
const defaults_tcprequestconnectionluafooparami = `
defaults test
  tcp-request connection lua.foo param if !HTTP
`
const defaults_tcprequestconnectionluafooparamp = `
defaults test
  tcp-request connection lua.foo param param1
`
const defaults_tcprequestsessionaccept = `
defaults test
  tcp-request session accept
`
const defaults_tcprequestsessionacceptifHTTP = `
defaults test
  tcp-request session accept if !HTTP
`
const defaults_tcprequestsessionreject = `
defaults test
  tcp-request session reject
`
const defaults_tcprequestsessionrejectifHTTP = `
defaults test
  tcp-request session reject if !HTTP
`
const defaults_tcprequestsessiontracksc0src = `
defaults test
  tcp-request session track-sc0 src
`
const defaults_tcprequestsessiontracksc0srcifso = `
defaults test
  tcp-request session track-sc0 src if some_check
`
const defaults_tcprequestsessiontracksc1src = `
defaults test
  tcp-request session track-sc1 src
`
const defaults_tcprequestsessiontracksc1srcifso = `
defaults test
  tcp-request session track-sc1 src if some_check
`
const defaults_tcprequestsessiontracksc2src = `
defaults test
  tcp-request session track-sc2 src
`
const defaults_tcprequestsessiontracksc2srcifso = `
defaults test
  tcp-request session track-sc2 src if some_check
`
const defaults_tcprequestsessiontracksc0srctabl = `
defaults test
  tcp-request session track-sc0 src table foo
`
const defaults_tcprequestsessiontracksc0srctabl_ = `
defaults test
  tcp-request session track-sc0 src table foo if some_check
`
const defaults_tcprequestsessiontracksc1srctabl = `
defaults test
  tcp-request session track-sc1 src table foo
`
const defaults_tcprequestsessiontracksc1srctabl_ = `
defaults test
  tcp-request session track-sc1 src table foo if some_check
`
const defaults_tcprequestsessiontracksc2srctabl = `
defaults test
  tcp-request session track-sc2 src table foo
`
const defaults_tcprequestsessiontracksc2srctabl_ = `
defaults test
  tcp-request session track-sc2 src table foo if some_check
`
const defaults_tcprequestsessiontracksc5src = `
defaults test
  tcp-request session track-sc5 src
`
const defaults_tcprequestsessiontracksc5srcifso = `
defaults test
  tcp-request session track-sc5 src if some_check
`
const defaults_tcprequestsessiontracksc5srctabl = `
defaults test
  tcp-request session track-sc5 src table foo
`
const defaults_tcprequestsessiontracksc5srctabl_ = `
defaults test
  tcp-request session track-sc5 src table foo if some_check
`
const defaults_tcprequestsessionscaddgpc121 = `
defaults test
  tcp-request session sc-add-gpc(1,2) 1
`
const defaults_tcprequestsessionscaddgpc121ifis = `
defaults test
  tcp-request session sc-add-gpc(1,2) 1 if is-error
`
const defaults_tcprequestsessionscincgpc12 = `
defaults test
  tcp-request session sc-inc-gpc(1,2)
`
const defaults_tcprequestsessionscincgpc12ifise = `
defaults test
  tcp-request session sc-inc-gpc(1,2) if is-error
`
const defaults_tcprequestsessionscincgpc02 = `
defaults test
  tcp-request session sc-inc-gpc0(2)
`
const defaults_tcprequestsessionscincgpc02ifise = `
defaults test
  tcp-request session sc-inc-gpc0(2) if is-error
`
const defaults_tcprequestsessionscincgpc12_ = `
defaults test
  tcp-request session sc-inc-gpc1(2)
`
const defaults_tcprequestsessionscincgpc12ifise_ = `
defaults test
  tcp-request session sc-inc-gpc1(2) if is-error
`
const defaults_tcprequestsessionscsetgptsc51133 = `
defaults test
  tcp-request session sc-set-gpt(sc5,1) 1337 if exceeds_limit
`
const defaults_tcprequestsessionscsetgpt001337 = `
defaults test
  tcp-request session sc-set-gpt0(0) 1337
`
const defaults_tcprequestsessionscsetgpt001337i = `
defaults test
  tcp-request session sc-set-gpt0(0) 1337 if exceeds_limit
`
const defaults_tcprequestsessionsetvarsesssrcsr = `
defaults test
  tcp-request session set-var(sess.src) src
`
const defaults_tcprequestsessionsetvarsessdnssl = `
defaults test
  tcp-request session set-var(sess.dn) ssl_c_s_dn
`
const defaults_tcprequestsessionsetvarfmtsesssr = `
defaults test
  tcp-request session set-var-fmt(sess.src) src
`
const defaults_tcprequestsessionsetvarfmtsessdn = `
defaults test
  tcp-request session set-var-fmt(sess.dn) ssl_c_s_dn
`
const defaults_tcprequestsessionunsetvarsesssrc = `
defaults test
  tcp-request session unset-var(sess.src)
`
const defaults_tcprequestsessionunsetvarsessdn = `
defaults test
  tcp-request session unset-var(sess.dn)
`
const defaults_tcprequestsessionsilentdrop = `
defaults test
  tcp-request session silent-drop
`
const defaults_tcprequestsessionsilentdropifHTT = `
defaults test
  tcp-request session silent-drop if !HTTP
`
const defaults_tcprequestsessionsilentdroprsttt = `
defaults test
  tcp-request session silent-drop rst-ttl 1
`
const defaults_tcprequestsessionsilentdroprsttt_ = `
defaults test
  tcp-request session silent-drop rst-ttl 1 if { src,table_http_req_rate(ratelimits.agg),sub(txn.rate_limit) ge 1000 }
`
const defaults_tcprequestsessionattachsrvsrv1 = `
defaults test
  tcp-request session attach-srv srv1
`
const defaults_tcprequestsessionattachsrvsrv1na = `
defaults test
  tcp-request session attach-srv srv1 name example.com
`
const defaults_tcprequestsessionattachsrvsrv1na_ = `
defaults test
  tcp-request session attach-srv srv1 name example.com if exceeds_limit
`
const defaults_tcprequestcontentsetbandwidthlim = `
defaults test
  tcp-request content set-bandwidth-limit my-limit
`
const defaults_tcprequestcontentsetbandwidthlim_ = `
defaults test
  tcp-request content set-bandwidth-limit my-limit limit 1m period 10s
`
const defaults_tcprequestcontentsetbandwidthlim__ = `
defaults test
  tcp-request content set-bandwidth-limit my-limit period 10s
`
const defaults_tcprequestcontentsetbandwidthlim___ = `
defaults test
  tcp-request content set-bandwidth-limit my-limit limit 1m
`
const defaults_tcprequestcontentsetloglevelsile = `
defaults test
  tcp-request content set-log-level silent
`
const defaults_tcprequestcontentsetloglevelsile_ = `
defaults test
  tcp-request content set-log-level silent if FALSE
`
const defaults_tcprequestcontentsetmark20 = `
defaults test
  tcp-request content set-mark 20
`
const defaults_tcprequestcontentsetmark0x1AbifF = `
defaults test
  tcp-request content set-mark 0x1Ab if FALSE
`
const defaults_tcprequestconnectionsetmark20 = `
defaults test
  tcp-request connection set-mark 20
`
const defaults_tcprequestconnectionsetmark0x1Ab = `
defaults test
  tcp-request connection set-mark 0x1Ab if FALSE
`
const defaults_tcprequestconnectionsetsrcporthd = `
defaults test
  tcp-request connection set-src-port hdr(port)
`
const defaults_tcprequestconnectionsetsrcporthd_ = `
defaults test
  tcp-request connection set-src-port hdr(port) if FALSE
`
const defaults_tcprequestcontentsetsrcporthdrpo = `
defaults test
  tcp-request content set-src-port hdr(port)
`
const defaults_tcprequestcontentsetsrcporthdrpo_ = `
defaults test
  tcp-request content set-src-port hdr(port) if FALSE
`
const defaults_tcprequestcontentsettos0ifFALSE = `
defaults test
  tcp-request content set-tos 0 if FALSE
`
const defaults_tcprequestcontentsettos0 = `
defaults test
  tcp-request content set-tos 0
`
const defaults_tcprequestconnectionsettos0ifFAL = `
defaults test
  tcp-request connection set-tos 0 if FALSE
`
const defaults_tcprequestconnectionsettos0 = `
defaults test
  tcp-request connection set-tos 0
`
const defaults_tcprequestconnectionsetvarfmttxn = `
defaults test
  tcp-request connection set-var-fmt(txn.ip_port) %%[dst]:%%[dst_port]
`
const defaults_tcprequestcontentsetnice0ifFALSE = `
defaults test
  tcp-request content set-nice 0 if FALSE
`
const defaults_tcprequestcontentsetnice0 = `
defaults test
  tcp-request content set-nice 0
`
const defaults_tcprequestcontentswitchmodehttp = `
defaults test
  tcp-request content switch-mode http
`
const defaults_tcprequestcontentswitchmodehttpi = `
defaults test
  tcp-request content switch-mode http if FALSE
`
const defaults_tcprequestcontentswitchmodehttpp = `
defaults test
  tcp-request content switch-mode http proto my-proto
`
const defaults_tcprequestconnectionsetfcmark1 = `
defaults test
  tcp-request connection set-fc-mark 1
`
const defaults_tcprequestconnectionsetfctos1 = `
defaults test
  tcp-request connection set-fc-tos 1
`
const defaults_tcprequestsessionsetfcmark9999if = `
defaults test
  tcp-request session set-fc-mark 9999 if some_check
`
const defaults_tcprequestsessionsetfctos255 = `
defaults test
  tcp-request session set-fc-tos 255
`
const defaults_tcprequestcontentsetbcmarkhdrpor = `
defaults test
  tcp-request content set-bc-mark hdr(port)
`
const defaults_tcprequestcontentsetbctos0xffifs = `
defaults test
  tcp-request content set-bc-tos 0xff if some_check
`
const defaults_tcprequestcontentsetfcmark0xffff = `
defaults test
  tcp-request content set-fc-mark 0xffffffff
`
const defaults_tcprequestcontentsetfctos100 = `
defaults test
  tcp-request content set-fc-tos 100
`
const defaults_statsauthadmin1AdMiN123 = `
defaults test
  stats auth admin1:AdMiN123
`
const defaults_statsenable = `
defaults test
  stats enable
`
const defaults_statshideversion = `
defaults test
  stats hide-version
`
const defaults_statsshowlegends = `
defaults test
  stats show-legends
`
const defaults_statsshowmodules = `
defaults test
  stats show-modules
`
const defaults_statsmaxconn10 = `
defaults test
  stats maxconn 10
`
const defaults_statsrealmHAProxyStatistics = `
defaults test
  stats realm HAProxy\\ Statistics
`
const defaults_statsrefresh10s = `
defaults test
  stats refresh 10s
`
const defaults_statsscope = `
defaults test
  stats scope .
`
const defaults_statsshowdescMasternodeforEurope = `
defaults test
  stats show-desc Master node for Europe, Asia, Africa
`
const defaults_statsshownode = `
defaults test
  stats show-node
`
const defaults_statsshownodeEurope1 = `
defaults test
  stats show-node Europe-1
`
const defaults_statsuriadminstats = `
defaults test
  stats uri /admin?stats
`
const defaults_statsbindprocessall = `
defaults test
  stats bind-process all
`
const defaults_statsbindprocessodd = `
defaults test
  stats bind-process odd
`
const defaults_statsbindprocesseven = `
defaults test
  stats bind-process even
`
const defaults_statsbindprocess1234 = `
defaults test
  stats bind-process 1 2 3 4
`
const defaults_statsbindprocess14 = `
defaults test
  stats bind-process 1-4
`
