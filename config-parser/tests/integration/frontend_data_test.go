// Code generated by go generate; DO NOT EDIT.
/*
Copyright 2019 HAProxy Technologies

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package integration_test

const frontend_aclurlstatspathbegstats = `
frontend test
  acl url_stats path_beg /stats
`
const frontend_aclurlstaticpathbegistaticimages = `
frontend test
  acl url_static path_beg -i /static /images /javascript /stylesheets
`
const frontend_aclurlstaticpathendijpggifpngcss = `
frontend test
  acl url_static path_end -i .jpg .gif .png .css .js
`
const frontend_aclbeappoknbsrvbeappgt0 = `
frontend test
  acl be_app_ok nbsrv(be_app) gt 0
`
const frontend_aclbestaticoknbsrvbestaticgt0 = `
frontend test
  acl be_static_ok nbsrv(be_static) gt 0
`
const frontend_aclkeyreqhdrXAddACLKeymfound = `
frontend test
  acl key req.hdr(X-Add-ACL-Key) -m found
`
const frontend_acladdpathaddacl = `
frontend test
  acl add path /addacl
`
const frontend_acldelpathdelacl = `
frontend test
  acl del path /delacl
`
const frontend_aclmyhosthdrHostfmyhostlst = `
frontend test
  acl myhost hdr(Host) -f myhost.lst
`
const frontend_aclcleardstport80 = `
frontend test
  acl clear dst_port 80
`
const frontend_aclsecuredstport8080 = `
frontend test
  acl secure dst_port 8080
`
const frontend_aclloginpageurlbeglogin = `
frontend test
  acl login_page url_beg /login
`
const frontend_acllogouturlbeglogout = `
frontend test
  acl logout url_beg /logout
`
const frontend_acluidgivenurlregloginuserid = `
frontend test
  acl uid_given url_reg /login?userid=[^&]+
`
const frontend_aclcookiesethdrsubcookieSEEN1 = `
frontend test
  acl cookie_set hdr_sub(cookie) SEEN=1
`
const frontend_bind80443 = `
frontend test
  bind :80,:443
`
const frontend_bind10001100801000110443 = `
frontend test
  bind 10.0.0.1:10080,10.0.0.1:10443
`
const frontend_bindvarrunsslfrontendsockuserroo = `
frontend test
  bind /var/run/ssl-frontend.sock user root mode 600 accept-proxy
`
const frontend_bind80 = `
frontend test
  bind :80
`
const frontend_bind443sslcrtetchaproxysitepem = `
frontend test
  bind :443 ssl crt /etc/haproxy/site.pem
`
const frontend_bind443sslcrtetchaproxysitepemal = `
frontend test
  bind :443 ssl crt /etc/haproxy/site.pem alpn h2,http/1.1
`
const frontend_bind443v4v6sslcrtetchaproxysitep = `
frontend test
  bind :::443 v4v6 ssl crt /etc/haproxy/site.pem alpn h2,http/1.1
`
const frontend_bindipv680 = `
frontend test
  bind ipv6@:80
`
const frontend_bindipv4publicssl443sslcrtetchap = `
frontend test
  bind ipv4@public_ssl:443 ssl crt /etc/haproxy/site.pem
`
const frontend_bindunixsslfrontendsockuserrootm = `
frontend test
  bind unix@ssl-frontend.sock user root mode 600 accept-proxy
`
const frontend_bind443acceptnetscalercip1234 = `
frontend test
  bind :443 accept-netscaler-cip 1234
`
const frontend_bind443acceptproxy = `
frontend test
  bind :443 accept-proxy
`
const frontend_bind443allow0rtt = `
frontend test
  bind :443 allow-0rtt
`
const frontend_bind443alpnh2 = `
frontend test
  bind :443 alpn h2
`
const frontend_bind443alpnhttp11 = `
frontend test
  bind :443 alpn http/1.1
`
const frontend_bind443alpnh2http11 = `
frontend test
  bind :443 alpn h2,http/1.1
`
const frontend_bind443backlogtest = `
frontend test
  bind :443 backlog test
`
const frontend_bind443curvesECDHECDSAECDHEECDSA = `
frontend test
  bind :443 curves ECDH_ECDSA,ECDHE_ECDSA,ECDH_RSA,ECDHE_RSA,ECDH_anon
`
const frontend_bind443ecdheECDHECDSAECDHEECDSAE = `
frontend test
  bind :443 ecdhe ECDH_ECDSA,ECDHE_ECDSA,ECDH_RSA,ECDHE_RSA,ECDH_anon
`
const frontend_bind443cafilefilepem = `
frontend test
  bind :443 ca-file file.pem
`
const frontend_bind443caignoreerrall = `
frontend test
  bind :443 ca-ignore-err all
`
const frontend_bind443caignoreerr1234 = `
frontend test
  bind :443 ca-ignore-err 1234
`
const frontend_bind443casignfilefiletest = `
frontend test
  bind :443 ca-sign-file file.test
`
const frontend_bind443casignpasspassphrase = `
frontend test
  bind :443 ca-sign-pass passphrase
`
const frontend_bind443caverifyfilefiletest = `
frontend test
  bind :443 ca-verify-file file.test
`
const frontend_bind443ciphersECDHEaRSAAES256GCM = `
frontend test
  bind :443 ciphers ECDHE+aRSA+AES256+GCM+SHA384:ECDHE+aRSA+AES128+GCM+SHA256:ECDHE+aRSA+AES256+SHA384:ECDHE+aRSA+AES128+SHA256:ECDHE+aRSA+RC4+SHA:ECDHE+aRSA+AES256+SHA:ECDHE+aRSA+AES128+SHA:AES256+GCM+SHA384:AES128+GCM+SHA256:AES128+SHA256:AES256+SHA256:DHE+aRSA+AES128+SHA:RC4+SHA:HIGH:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS
`
const frontend_bind443ciphersuitesTODO = `
frontend test
  bind :443 ciphersuites TODO
`
const frontend_bind443clientsigalgsvalue = `
frontend test
  bind :443 client-sigalgs value
`
const frontend_bind443crlfilefiletest = `
frontend test
  bind :443 crl-file file.test
`
const frontend_bind443crtexamplepem = `
frontend test
  bind :443 crt example.pem
`
const frontend_bind443crtignoreerrall = `
frontend test
  bind :443 crt-ignore-err all
`
const frontend_bind443crtignoreerr404410 = `
frontend test
  bind :443 crt-ignore-err 404,410
`
const frontend_bind443crtlistcert1pem = `
frontend test
  bind :443 crt-list cert1.pem
`
const frontend_bind443deferaccept = `
frontend test
  bind :443 defer-accept
`
const frontend_bind443exposefdlisteners = `
frontend test
  bind :443 expose-fd listeners
`
const frontend_bind443forcesslv3 = `
frontend test
  bind :443 force-sslv3
`
const frontend_bind443forcetlsv10 = `
frontend test
  bind :443 force-tlsv10
`
const frontend_bind443forcetlsv11 = `
frontend test
  bind :443 force-tlsv11
`
const frontend_bind443forcetlsv12 = `
frontend test
  bind :443 force-tlsv12
`
const frontend_bind443forcetlsv13 = `
frontend test
  bind :443 force-tlsv13
`
const frontend_bind443generatecertificates = `
frontend test
  bind :443 generate-certificates
`
const frontend_bind443gidusers = `
frontend test
  bind :443 gid users
`
const frontend_bind443groupgroup = `
frontend test
  bind :443 group group
`
const frontend_bind443id1 = `
frontend test
  bind :443 id 1
`
const frontend_bind443interfaceeth0 = `
frontend test
  bind :443 interface eth0
`
const frontend_bind443interfaceeth1 = `
frontend test
  bind :443 interface eth1
`
const frontend_bind443interfacepppoewan = `
frontend test
  bind :443 interface pppoe-wan
`
const frontend_bind443leveluser = `
frontend test
  bind :443 level user
`
const frontend_bind443levelopeerator = `
frontend test
  bind :443 level opeerator
`
const frontend_bind443leveladmin = `
frontend test
  bind :443 level admin
`
const frontend_bind443severityoutputnone = `
frontend test
  bind :443 severity-output none
`
const frontend_bind443severityoutputnumber = `
frontend test
  bind :443 severity-output number
`
const frontend_bind443severityoutputstring = `
frontend test
  bind :443 severity-output string
`
const frontend_bind443maxconn1024 = `
frontend test
  bind :443 maxconn 1024
`
const frontend_bind443modeTODO = `
frontend test
  bind :443 mode TODO
`
const frontend_bind443mss1460 = `
frontend test
  bind :443 mss 1460
`
const frontend_bind443mss1460_ = `
frontend test
  bind :443 mss -1460
`
const frontend_bind443namesockets = `
frontend test
  bind :443 name sockets
`
const frontend_bind443namespaceexample = `
frontend test
  bind :443 namespace example
`
const frontend_bind443nice0 = `
frontend test
  bind :443 nice 0
`
const frontend_bind443nice1024 = `
frontend test
  bind :443 nice 1024
`
const frontend_bind443nice1024_ = `
frontend test
  bind :443 nice -1024
`
const frontend_bind443noalpn = `
frontend test
  bind :443 no-alpn
`
const frontend_bind443nocanames = `
frontend test
  bind :443 no-ca-names
`
const frontend_bind443nosslv3 = `
frontend test
  bind :443 no-sslv3
`
const frontend_bind443notlstickets = `
frontend test
  bind :443 no-tls-tickets
`
const frontend_bind443notlsv10 = `
frontend test
  bind :443 no-tlsv10
`
const frontend_bind443notlsv11 = `
frontend test
  bind :443 no-tlsv11
`
const frontend_bind443notlsv12 = `
frontend test
  bind :443 no-tlsv12
`
const frontend_bind443notlsv13 = `
frontend test
  bind :443 no-tlsv13
`
const frontend_bind443npnhttp10 = `
frontend test
  bind :443 npn http/1.0
`
const frontend_bind443npnhttp11 = `
frontend test
  bind :443 npn http/1.1
`
const frontend_bind443npnhttp10http11 = `
frontend test
  bind :443 npn http/1.0,http/1.1
`
const frontend_bind443ocspupdateoff = `
frontend test
  bind :443 ocsp-update off
`
const frontend_bind443ocspupdateon = `
frontend test
  bind :443 ocsp-update on
`
const frontend_bind443preferclientciphers = `
frontend test
  bind :443 prefer-client-ciphers
`
const frontend_bind443processall = `
frontend test
  bind :443 process all
`
const frontend_bind443processodd = `
frontend test
  bind :443 process odd
`
const frontend_bind443processeven = `
frontend test
  bind :443 process even
`
const frontend_bind443process14 = `
frontend test
  bind :443 process 1-4
`
const frontend_bind443protoh2 = `
frontend test
  bind :443 proto h2
`
const frontend_bind443sigalgsvalue = `
frontend test
  bind :443 sigalgs value
`
const frontend_bind443ssl = `
frontend test
  bind :443 ssl
`
const frontend_bind443sslmaxverSSLv3 = `
frontend test
  bind :443 ssl-max-ver SSLv3
`
const frontend_bind443sslmaxverTLSv10 = `
frontend test
  bind :443 ssl-max-ver TLSv1.0
`
const frontend_bind443sslmaxverTLSv11 = `
frontend test
  bind :443 ssl-max-ver TLSv1.1
`
const frontend_bind443sslmaxverTLSv12 = `
frontend test
  bind :443 ssl-max-ver TLSv1.2
`
const frontend_bind443sslmaxverTLSv13 = `
frontend test
  bind :443 ssl-max-ver TLSv1.3
`
const frontend_bind443sslminverSSLv3 = `
frontend test
  bind :443 ssl-min-ver SSLv3
`
const frontend_bind443sslminverTLSv10 = `
frontend test
  bind :443 ssl-min-ver TLSv1.0
`
const frontend_bind443sslminverTLSv11 = `
frontend test
  bind :443 ssl-min-ver TLSv1.1
`
const frontend_bind443sslminverTLSv12 = `
frontend test
  bind :443 ssl-min-ver TLSv1.2
`
const frontend_bind443sslminverTLSv13 = `
frontend test
  bind :443 ssl-min-ver TLSv1.3
`
const frontend_bind443strictsni = `
frontend test
  bind :443 strict-sni
`
const frontend_bind443tcput30s = `
frontend test
  bind :443 tcp-ut 30s
`
const frontend_bind443tfo = `
frontend test
  bind :443 tfo
`
const frontend_bind443threadall = `
frontend test
  bind :443 thread all
`
const frontend_bind443threadodd = `
frontend test
  bind :443 thread odd
`
const frontend_bind443threadeven = `
frontend test
  bind :443 thread even
`
const frontend_bind443thread1 = `
frontend test
  bind :443 thread 1
`
const frontend_bind443thread11 = `
frontend test
  bind :443 thread 1-1
`
const frontend_bind443thread1all = `
frontend test
  bind :443 thread 1/all
`
const frontend_bind443thread1odd = `
frontend test
  bind :443 thread 1/odd
`
const frontend_bind443thread1even = `
frontend test
  bind :443 thread 1/even
`
const frontend_bind443thread11_ = `
frontend test
  bind :443 thread 1/1
`
const frontend_bind443thread111 = `
frontend test
  bind :443 thread 1/1-1
`
const frontend_bind443tlsticketkeystmptlsticket = `
frontend test
  bind :443 tls-ticket-keys /tmp/tls_ticket_keys
`
const frontend_bind443transparent = `
frontend test
  bind :443 transparent
`
const frontend_bind443v4v6 = `
frontend test
  bind :443 v4v6
`
const frontend_bind443v6only = `
frontend test
  bind :443 v6only
`
const frontend_bind443uid65534 = `
frontend test
  bind :443 uid 65534
`
const frontend_bind443userweb1 = `
frontend test
  bind :443 user web1
`
const frontend_bind443verifynone = `
frontend test
  bind :443 verify none
`
const frontend_bind443verifyoptional = `
frontend test
  bind :443 verify optional
`
const frontend_bind443verifyrequired = `
frontend test
  bind :443 verify required
`
const frontend_bind443quicccalgocubic = `
frontend test
  bind :443 quic-cc-algo cubic
`
const frontend_bind443quicccalgonewreno = `
frontend test
  bind :443 quic-cc-algo newreno
`
const frontend_bind443quicforceretry = `
frontend test
  bind :443 quic-force-retry
`
const frontend_bind443quicsocketconnection = `
frontend test
  bind :443 quic-socket connection
`
const frontend_bind443quicsocketlistener = `
frontend test
  bind :443 quic-socket listener
`
const frontend_bind443nbconn1 = `
frontend test
  bind :443 nbconn 1
`
const frontend_bind443nbconn2 = `
frontend test
  bind :443 nbconn +2
`
const frontend_bindprocessall = `
frontend test
  bind-process all
`
const frontend_bindprocessodd = `
frontend test
  bind-process odd
`
const frontend_bindprocesseven = `
frontend test
  bind-process even
`
const frontend_bindprocess1234 = `
frontend test
  bind-process 1 2 3 4
`
const frontend_bindprocess14 = `
frontend test
  bind-process 1-4
`
const frontend_emailalertfromadminexamplecom = `
frontend test
  email-alert from admin@example.com
`
const frontend_emailalerttoazxy = `
frontend test
  email-alert to a@z,x@y
`
const frontend_emailalertlevelwarning = `
frontend test
  email-alert level warning
`
const frontend_emailalertmailerslocalmailers = `
frontend test
  email-alert mailers local-mailers
`
const frontend_emailalertmyhostnamesrv01example = `
frontend test
  email-alert myhostname srv01.example.com
`
const frontend_emailalerttosupportexamplecom = `
frontend test
  email-alert to support@example.com
`
const frontend_emailalerttoabcd = `
frontend test
  email-alert to "a@b, c@d"
`
const frontend_errorfile400etchaproxyerrorfiles = `
frontend test
  errorfile 400 /etc/haproxy/errorfiles/400badreq.http
`
const frontend_errorfile408devnullworkaroundChr = `
frontend test
  errorfile 408 /dev/null # work around Chrome pre-connect bug
`
const frontend_errorfile403etchaproxyerrorfiles = `
frontend test
  errorfile 403 /etc/haproxy/errorfiles/403forbid.http
`
const frontend_errorfile503etchaproxyerrorfiles = `
frontend test
  errorfile 503 /etc/haproxy/errorfiles/503sorry.http
`
const frontend_errorloc302400httpwwwmyawesomesi = `
frontend test
  errorloc302 400 http://www.myawesomesite.com/error_page
`
const frontend_errorloc302404httpwwwmyawesomesi = `
frontend test
  errorloc302 404 http://www.myawesomesite.com/not_found
`
const frontend_errorloc302501errorpage = `
frontend test
  errorloc302 501 /error_page
`
const frontend_errorloc303400httpwwwmyawesomesi = `
frontend test
  errorloc303 400 http://www.myawesomesite.com/error_page
`
const frontend_errorloc303404httpwwwmyawesomesi = `
frontend test
  errorloc303 404 http://www.myawesomesite.com/not_found
`
const frontend_errorloc303501errorpage = `
frontend test
  errorloc303 501 /error_page
`
const frontend_errorfileserrorssection400 = `
frontend test
  errorfiles errors_section 400
`
const frontend_errorfileserrorssection400401500 = `
frontend test
  errorfiles errors_section 400 401 500
`
const frontend_errorfileserrorssection = `
frontend test
  errorfiles errors_section
`
const frontend_logglobal = `
frontend test
  log global
`
const frontend_nolog = `
frontend test
  no log
`
const frontend_logstdoutformatshortdaemonsendlo = `
frontend test
  log stdout format short daemon # send log to systemd
`
const frontend_logstdoutformatrawdaemonsendever = `
frontend test
  log stdout format raw daemon # send everything to stdout
`
const frontend_logstderrformatrawdaemonnoticese = `
frontend test
  log stderr format raw daemon notice # send important events to stderr
`
const frontend_log127001514local0noticeonlysend = `
frontend test
  log 127.0.0.1:514 local0 notice # only send important events
`
const frontend_log127001514local0noticenoticesa = `
frontend test
  log 127.0.0.1:514 local0 notice notice # same but limit output level
`
const frontend_log1270011515len8192formatrfc542 = `
frontend test
  log 127.0.0.1:1515 len 8192 format rfc5424 local2 info
`
const frontend_log1270011515sample12local0 = `
frontend test
  log 127.0.0.1:1515 sample 1:2 local0
`
const frontend_log1270011515len8192formatrfc542_ = `
frontend test
  log 127.0.0.1:1515 len 8192 format rfc5424 sample 1,2-5:6 local2 info
`
const frontend_log1270011515formatrfc5424sample = `
frontend test
  log 127.0.0.1:1515 format rfc5424 sample 1,2-5:6 local2 info
`
const frontend_log1270011515formatrfc5424sample_ = `
frontend test
  log 127.0.0.1:1515 format rfc5424 sample 1-5:6 local2
`
const frontend_log1270011515sample16local2 = `
frontend test
  log 127.0.0.1:1515 sample 1:6 local2
`
const frontend_optionforwardfor = `
frontend test
  option forwardfor
`
const frontend_optionforwardforexceptA = `
frontend test
  option forwardfor except A
`
const frontend_optionforwardforexceptAheaderB = `
frontend test
  option forwardfor except A header B
`
const frontend_optionforwardforexceptAheaderBif = `
frontend test
  option forwardfor except A header B if-none
`
const frontend_optionforwardforcomment = `
frontend test
  option forwardfor # comment
`
const frontend_optionforwardforexceptAcomment = `
frontend test
  option forwardfor except A # comment
`
const frontend_optionhttplog = `
frontend test
  option httplog
`
const frontend_nooptionhttplog = `
frontend test
  no option httplog
`
const frontend_optionhttplogclf = `
frontend test
  option httplog clf
`
const frontend_optionhttplogcomment = `
frontend test
  option httplog # comment
`
const frontend_optionhttplogclfcomment = `
frontend test
  option httplog clf # comment
`
const frontend_sticktabletypeipsize1mexpire5mst = `
frontend test
  stick-table type ip size 1m expire 5m store gpc0,conn_rate(30s)
`
const frontend_sticktabletypeipsize1mexpire5mst_ = `
frontend test
  stick-table type ip size 1m expire 5m store gpc0,conn_rate(30s) # comment
`
const frontend_sticktabletypestringlen1000size1 = `
frontend test
  stick-table type string len 1000 size 1m expire 5m store gpc0,conn_rate(30s)
`
const frontend_sticktabletypestringlen1000size1_ = `
frontend test
  stick-table type string len 1000 size 1m expire 5m nopurge peers aaaaa store gpc0,conn_rate(30s)
`
const frontend_sticktabletypeintegersize1msrvke = `
frontend test
  stick-table type integer size 1m srvkey addr write-to t2
`
const frontend_usebackendtestifTRUE = `
frontend test
  use_backend test if TRUE
`
const frontend_usebackendtestifTRUEdeny = `
frontend test
  use_backend test if TRUE # deny
`
const frontend_usebackendtestdeny = `
frontend test
  use_backend test # deny
`
const frontend_uniqueidformatXocicpfifpTsrtpid = `
frontend test
  unique-id-format %{+X}o_%ci:%cp_%fi:%fp_%Ts_%rt:%pid
`
const frontend_uniqueidformatXocpfifpTsrtpid = `
frontend test
  unique-id-format %{+X}o_%cp_%fi:%fp_%Ts_%rt:%pid
`
const frontend_uniqueidformatXofifpTsrtpid = `
frontend test
  unique-id-format %{+X}o_%fi:%fp_%Ts_%rt:%pid
`
const frontend_uniqueidheaderXUniqueID = `
frontend test
  unique-id-header X-Unique-ID
`
const frontend_monitorurihaproxytest = `
frontend test
  monitor-uri /haproxy_test
`
const frontend_monitorfailifnodb01nodb02 = `
frontend test
  monitor fail if no_db01 no_db02
`
const frontend_monitorfailifready01ready02ready = `
frontend test
  monitor fail if ready_01 ready_02 ready_03
`
const frontend_monitorfailunlessbackendready = `
frontend test
  monitor fail unless backend_ready
`
const frontend_monitorfailunlessready01ready02r = `
frontend test
  monitor fail unless ready_01 ready_02 ready_03
`
const frontend_declarecapturerequestlen1 = `
frontend test
  declare capture request len 1
`
const frontend_declarecaptureresponselen2 = `
frontend test
  declare capture response len 2
`
const frontend_optionhttprestrictreqhdrnamespre = `
frontend test
  option http-restrict-req-hdr-names preserve
`
const frontend_optionhttprestrictreqhdrnamesdel = `
frontend test
  option http-restrict-req-hdr-names delete
`
const frontend_optionhttprestrictreqhdrnamesrej = `
frontend test
  option http-restrict-req-hdr-names reject
`
const frontend_optionoriginalto = `
frontend test
  option originalto
`
const frontend_optionoriginaltoexcept127001 = `
frontend test
  option originalto except 127.0.0.1
`
const frontend_optionoriginaltoheaderXClientDst = `
frontend test
  option originalto header X-Client-Dst
`
const frontend_optionoriginaltoexcept127001head = `
frontend test
  option originalto except 127.0.0.1 header X-Client-Dst
`
const frontend_optionoriginaltocomment = `
frontend test
  option originalto # comment
`
const frontend_optionoriginaltoexcept127001comm = `
frontend test
  option originalto except 127.0.0.1 # comment
`
const frontend_httprequestsetmapmaplstsrcreqhdr = `
frontend test
  http-request set-map(map.lst) %[src] %[req.hdr(X-Value)] if value
`
const frontend_httprequestsetmapmaplstsrcreqhdr_ = `
frontend test
  http-request set-map(map.lst) %[src] %[req.hdr(X-Value)]
`
const frontend_httprequestaddaclmaplstsrc = `
frontend test
  http-request add-acl(map.lst) [src]
`
const frontend_httprequestaddheaderXvaluevalue = `
frontend test
  http-request add-header X-value value
`
const frontend_httprequestcacheusecachename = `
frontend test
  http-request cache-use cache-name
`
const frontend_httprequestcacheusecachenameifFA = `
frontend test
  http-request cache-use cache-name if FALSE
`
const frontend_httprequestdelaclmaplstsrc = `
frontend test
  http-request del-acl(map.lst) [src]
`
const frontend_httprequestallow = `
frontend test
  http-request allow
`
const frontend_httprequestauth = `
frontend test
  http-request auth
`
const frontend_httprequestdelheaderXvalue = `
frontend test
  http-request del-header X-value
`
const frontend_httprequestdelheaderXvalueifTRUE = `
frontend test
  http-request del-header X-value if TRUE
`
const frontend_httprequestdelheaderXvaluemstrif = `
frontend test
  http-request del-header X-value -m str if TRUE
`
const frontend_httprequestdelmapmaplstsrcifvalu = `
frontend test
  http-request del-map(map.lst) %[src] if ! value
`
const frontend_httprequestdelmapmaplstsrc = `
frontend test
  http-request del-map(map.lst) %[src]
`
const frontend_httprequestdeny = `
frontend test
  http-request deny
`
const frontend_httprequestdenydenystatus400 = `
frontend test
  http-request deny deny_status 400
`
const frontend_httprequestdenyifTRUE = `
frontend test
  http-request deny if TRUE
`
const frontend_httprequestdenydenystatus400ifTR = `
frontend test
  http-request deny deny_status 400 if TRUE
`
const frontend_httprequestdenydenystatus400cont = `
frontend test
  http-request deny deny_status 400 content-type application/json if TRUE
`
const frontend_httprequestdenydenystatus400cont_ = `
frontend test
  http-request deny deny_status 400 content-type application/json
`
const frontend_httprequestdenydenystatus400cont__ = `
frontend test
  http-request deny deny_status 400 content-type application/json default-errorfiles
`
const frontend_httprequestdenydenystatus400cont___ = `
frontend test
  http-request deny deny_status 400 content-type application/json errorfile errors
`
const frontend_httprequestdenydenystatus400cont____ = `
frontend test
  http-request deny deny_status 400 content-type application/json string error if TRUE
`
const frontend_httprequestdenydenystatus400cont_____ = `
frontend test
  http-request deny deny_status 400 content-type application/json lf-string error hdr host google.com if TRUE
`
const frontend_httprequestdenydenystatus400cont______ = `
frontend test
  http-request deny deny_status 400 content-type application/json file /var/errors.file
`
const frontend_httprequestdenydenystatus400cont_______ = `
frontend test
  http-request deny deny_status 400 content-type application/json lf-file /var/errors.file
`
const frontend_httprequestdenydenystatus400cont________ = `
frontend test
  http-request deny deny_status 400 content-type application/json string error hdr host google.com if TRUE
`
const frontend_httprequestdenydenystatus400cont_________ = `
frontend test
  http-request deny deny_status 400 content-type application/json string error hdr host google.com hdr x-value bla if TRUE
`
const frontend_httprequestdenydenystatus400cont__________ = `
frontend test
  http-request deny deny_status 400 content-type application/json string error hdr host google.com hdr x-value bla
`
const frontend_httprequestdisablel7retry = `
frontend test
  http-request disable-l7-retry
`
const frontend_httprequestdisablel7retryifFALSE = `
frontend test
  http-request disable-l7-retry if FALSE
`
const frontend_httprequestearlyhinthintsrc = `
frontend test
  http-request early-hint hint %[src]
`
const frontend_httprequestearlyhinthintsrcifFAL = `
frontend test
  http-request early-hint hint %[src] if FALSE
`
const frontend_httprequestearlyhintifFALSE = `
frontend test
  http-request early-hint if FALSE
`
const frontend_httprequestluafoo = `
frontend test
  http-request lua.foo
`
const frontend_httprequestluafooifFALSE = `
frontend test
  http-request lua.foo if FALSE
`
const frontend_httprequestluafooparam = `
frontend test
  http-request lua.foo param
`
const frontend_httprequestluafooparamparam2 = `
frontend test
  http-request lua.foo param param2
`
const frontend_httprequestnormalizeurifragmente = `
frontend test
  http-request normalize-uri fragment-encode
`
const frontend_httprequestnormalizeurifragmente_ = `
frontend test
  http-request normalize-uri fragment-encode if TRUE
`
const frontend_httprequestnormalizeurifragments = `
frontend test
  http-request normalize-uri fragment-strip
`
const frontend_httprequestnormalizeurifragments_ = `
frontend test
  http-request normalize-uri fragment-strip if TRUE
`
const frontend_httprequestnormalizeuripathmerge = `
frontend test
  http-request normalize-uri path-merge-slashes
`
const frontend_httprequestnormalizeuripathmerge_ = `
frontend test
  http-request normalize-uri path-merge-slashes if TRUE
`
const frontend_httprequestnormalizeuripathstrip = `
frontend test
  http-request normalize-uri path-strip-dot
`
const frontend_httprequestnormalizeuripathstrip_ = `
frontend test
  http-request normalize-uri path-strip-dot if TRUE
`
const frontend_httprequestnormalizeuripathstrip__ = `
frontend test
  http-request normalize-uri path-strip-dotdot
`
const frontend_httprequestnormalizeuripathstrip___ = `
frontend test
  http-request normalize-uri path-strip-dotdot full
`
const frontend_httprequestnormalizeuripathstrip____ = `
frontend test
  http-request normalize-uri path-strip-dotdot if TRUE
`
const frontend_httprequestnormalizeuripathstrip_____ = `
frontend test
  http-request normalize-uri path-strip-dotdot full if TRUE
`
const frontend_httprequestnormalizeuripercentde = `
frontend test
  http-request normalize-uri percent-decode-unreserved
`
const frontend_httprequestnormalizeuripercentde_ = `
frontend test
  http-request normalize-uri percent-decode-unreserved if TRUE
`
const frontend_httprequestnormalizeuripercentde__ = `
frontend test
  http-request normalize-uri percent-decode-unreserved strict
`
const frontend_httprequestnormalizeuripercentde___ = `
frontend test
  http-request normalize-uri percent-decode-unreserved strict if TRUE
`
const frontend_httprequestnormalizeuripercentto = `
frontend test
  http-request normalize-uri percent-to-uppercase
`
const frontend_httprequestnormalizeuripercentto_ = `
frontend test
  http-request normalize-uri percent-to-uppercase if TRUE
`
const frontend_httprequestnormalizeuripercentto__ = `
frontend test
  http-request normalize-uri percent-to-uppercase strict
`
const frontend_httprequestnormalizeuripercentto___ = `
frontend test
  http-request normalize-uri percent-to-uppercase strict if TRUE
`
const frontend_httprequestnormalizeuriquerysort = `
frontend test
  http-request normalize-uri query-sort-by-name
`
const frontend_httprequestnormalizeuriquerysort_ = `
frontend test
  http-request normalize-uri query-sort-by-name if TRUE
`
const frontend_httprequestredirectprefixhttpsmy = `
frontend test
  http-request redirect prefix https://mysite.com
`
const frontend_httprequestreject = `
frontend test
  http-request reject
`
const frontend_httprequestreplaceheaderUseragen = `
frontend test
  http-request replace-header User-agent curl foo
`
const frontend_httprequestreplacepathfoo = `
frontend test
  http-request replace-path (.*) /foo
`
const frontend_httprequestreplacepathfooifTRUE = `
frontend test
  http-request replace-path (.*) /foo if TRUE
`
const frontend_httprequestreplacepathqfoo = `
frontend test
  http-request replace-pathq (.*) /foo
`
const frontend_httprequestreplacepathqfooifTRUE = `
frontend test
  http-request replace-pathq (.*) /foo if TRUE
`
const frontend_httprequestreplaceurihttphttps1 = `
frontend test
  http-request replace-uri ^http://(.*) https://1
`
const frontend_httprequestreplaceurihttphttps1i = `
frontend test
  http-request replace-uri ^http://(.*) https://1 if FALSE
`
const frontend_httprequestreplacevalueXForwarde = `
frontend test
  http-request replace-value X-Forwarded-For ^192.168.(.*)$ 172.16.1
`
const frontend_httprequestscaddgpc121 = `
frontend test
  http-request sc-add-gpc(1,2) 1
`
const frontend_httprequestscaddgpc121ifiserror = `
frontend test
  http-request sc-add-gpc(1,2) 1 if is-error
`
const frontend_httprequestscincgpc12 = `
frontend test
  http-request sc-inc-gpc(1,2)
`
const frontend_httprequestscincgpc12ifFALSE = `
frontend test
  http-request sc-inc-gpc(1,2) if FALSE
`
const frontend_httprequestscincgpc01 = `
frontend test
  http-request sc-inc-gpc0(1)
`
const frontend_httprequestscincgpc01ifFALSE = `
frontend test
  http-request sc-inc-gpc0(1) if FALSE
`
const frontend_httprequestscincgpc11 = `
frontend test
  http-request sc-inc-gpc1(1)
`
const frontend_httprequestscincgpc11ifFALSE = `
frontend test
  http-request sc-inc-gpc1(1) if FALSE
`
const frontend_httprequestscsetgpt12hdrHostlowe = `
frontend test
  http-request sc-set-gpt(1,2) hdr(Host),lower if FALSE
`
const frontend_httprequestscsetgpt01hdrHostlowe = `
frontend test
  http-request sc-set-gpt0(1) hdr(Host),lower
`
const frontend_httprequestscsetgpt0110 = `
frontend test
  http-request sc-set-gpt0(1) 10
`
const frontend_httprequestscsetgpt01hdrHostlowe_ = `
frontend test
  http-request sc-set-gpt0(1) hdr(Host),lower if FALSE
`
const frontend_httprequestsendspoegroupenginegr = `
frontend test
  http-request send-spoe-group engine group
`
const frontend_httprequestsetheaderXvaluevalue = `
frontend test
  http-request set-header X-value value
`
const frontend_httprequestsetloglevelsilent = `
frontend test
  http-request set-log-level silent
`
const frontend_httprequestsetmark20 = `
frontend test
  http-request set-mark 20
`
const frontend_httprequestsetmark0x1Ab = `
frontend test
  http-request set-mark 0x1Ab
`
const frontend_httprequestsetnice0 = `
frontend test
  http-request set-nice 0
`
const frontend_httprequestsetnice0ifFALSE = `
frontend test
  http-request set-nice 0 if FALSE
`
const frontend_httprequestsetmethodPOST = `
frontend test
  http-request set-method POST
`
const frontend_httprequestsetmethodPOSTifFALSE = `
frontend test
  http-request set-method POST if FALSE
`
const frontend_httprequestsetpathhdrhostpath = `
frontend test
  http-request set-path /%[hdr(host)]%[path]
`
const frontend_httprequestsetpathqhdrhostpath = `
frontend test
  http-request set-pathq /%[hdr(host)]%[path]
`
const frontend_httprequestsetpriorityclassreqhd = `
frontend test
  http-request set-priority-class req.hdr(priority)
`
const frontend_httprequestsetpriorityclassreqhd_ = `
frontend test
  http-request set-priority-class req.hdr(priority) if FALSE
`
const frontend_httprequestsetpriorityoffsetreqh = `
frontend test
  http-request set-priority-offset req.hdr(offset)
`
const frontend_httprequestsetpriorityoffsetreqh_ = `
frontend test
  http-request set-priority-offset req.hdr(offset) if FALSE
`
const frontend_httprequestsetqueryqueryregsub3D = `
frontend test
  http-request set-query %[query,regsub(%3D,=,g)]
`
const frontend_httprequestsetsrchdrsrc = `
frontend test
  http-request set-src hdr(src)
`
const frontend_httprequestsetsrchdrsrcifFALSE = `
frontend test
  http-request set-src hdr(src) if FALSE
`
const frontend_httprequestsetsrcporthdrport = `
frontend test
  http-request set-src-port hdr(port)
`
const frontend_httprequestsetsrcporthdrportifFA = `
frontend test
  http-request set-src-port hdr(port) if FALSE
`
const frontend_httprequestsettimeoutserver20 = `
frontend test
  http-request set-timeout server 20
`
const frontend_httprequestsettimeouttunnel20 = `
frontend test
  http-request set-timeout tunnel 20
`
const frontend_httprequestsettimeouttunnel20sif = `
frontend test
  http-request set-timeout tunnel 20s if TRUE
`
const frontend_httprequestsettimeoutserver20sif = `
frontend test
  http-request set-timeout server 20s if TRUE
`
const frontend_httprequestsettimeoutclient20 = `
frontend test
  http-request set-timeout client 20
`
const frontend_httprequestsettimeoutclient20sif = `
frontend test
  http-request set-timeout client 20s if TRUE
`
const frontend_httprequestsettos0ifFALSE = `
frontend test
  http-request set-tos 0 if FALSE
`
const frontend_httprequestsettos0 = `
frontend test
  http-request set-tos 0
`
const frontend_httprequestseturihdrhostpath = `
frontend test
  http-request set-uri /%[hdr(host)]%[path]
`
const frontend_httprequestsetvarreqmyvarreqfhdr = `
frontend test
  http-request set-var(req.my_var) req.fhdr(user-agent),lower
`
const frontend_httprequestsetvarfmtreqmyvarreqf = `
frontend test
  http-request set-var-fmt(req.my_var) req.fhdr(user-agent),lower
`
const frontend_httprequestsilentdrop = `
frontend test
  http-request silent-drop
`
const frontend_httprequestsilentdropifFALSE = `
frontend test
  http-request silent-drop if FALSE
`
const frontend_httprequestsilentdroprstttl1 = `
frontend test
  http-request silent-drop rst-ttl 1
`
const frontend_httprequestsilentdroprstttl1ifsr = `
frontend test
  http-request silent-drop rst-ttl 1 if { src,table_http_req_rate(ratelimits.agg),sub(txn.rate_limit) ge 1000 }
`
const frontend_httprequeststrictmodeon = `
frontend test
  http-request strict-mode on
`
const frontend_httprequeststrictmodeonifFALSE = `
frontend test
  http-request strict-mode on if FALSE
`
const frontend_httprequesttarpit = `
frontend test
  http-request tarpit
`
const frontend_httprequesttarpitdenystatus400 = `
frontend test
  http-request tarpit deny_status 400
`
const frontend_httprequesttarpitifTRUE = `
frontend test
  http-request tarpit if TRUE
`
const frontend_httprequesttarpitdenystatus400if = `
frontend test
  http-request tarpit deny_status 400 if TRUE
`
const frontend_httprequesttarpitdenystatus400co = `
frontend test
  http-request tarpit deny_status 400 content-type application/json if TRUE
`
const frontend_httprequesttarpitdenystatus400co_ = `
frontend test
  http-request tarpit deny_status 400 content-type application/json
`
const frontend_httprequesttarpitdenystatus400co__ = `
frontend test
  http-request tarpit deny_status 400 content-type application/json default-errorfiles
`
const frontend_httprequesttarpitdenystatus400co___ = `
frontend test
  http-request tarpit deny_status 400 content-type application/json errorfile errors
`
const frontend_httprequesttarpitdenystatus400co____ = `
frontend test
  http-request tarpit deny_status 400 content-type application/json string error if TRUE
`
const frontend_httprequesttarpitdenystatus400co_____ = `
frontend test
  http-request tarpit deny_status 400 content-type application/json lf-string error hdr host google.com if TRUE
`
const frontend_httprequesttarpitdenystatus400co______ = `
frontend test
  http-request tarpit deny_status 400 content-type application/json file /var/errors.file
`
const frontend_httprequesttarpitdenystatus400co_______ = `
frontend test
  http-request tarpit deny_status 400 content-type application/json lf-file /var/errors.file
`
const frontend_httprequesttarpitdenystatus400co________ = `
frontend test
  http-request tarpit deny_status 400 content-type application/json string error hdr host google.com if TRUE
`
const frontend_httprequesttarpitdenystatus400co_________ = `
frontend test
  http-request tarpit deny_status 400 content-type application/json string error hdr host google.com hdr x-value bla if TRUE
`
const frontend_httprequesttarpitdenystatus400co__________ = `
frontend test
  http-request tarpit deny_status 400 content-type application/json string error hdr host google.com hdr x-value bla
`
const frontend_httprequesttracksc0src = `
frontend test
  http-request track-sc0 src
`
const frontend_httprequesttracksc1src = `
frontend test
  http-request track-sc1 src
`
const frontend_httprequesttracksc2src = `
frontend test
  http-request track-sc2 src
`
const frontend_httprequesttracksc5src = `
frontend test
  http-request track-sc5 src
`
const frontend_httprequesttracksc5srctableatabl = `
frontend test
  http-request track-sc5 src table a_table
`
const frontend_httprequesttracksc5srctableatabl_ = `
frontend test
  http-request track-sc5 src table a_table if some_cond
`
const frontend_httprequesttracksc5srcifsomecond = `
frontend test
  http-request track-sc5 src if some_cond
`
const frontend_httprequestunsetvarreqmyvar = `
frontend test
  http-request unset-var(req.my_var)
`
const frontend_httprequestunsetvarreqmyvarifFAL = `
frontend test
  http-request unset-var(req.my_var) if FALSE
`
const frontend_httprequestwaitforbodytime20s = `
frontend test
  http-request wait-for-body time 20s
`
const frontend_httprequestwaitforbodytime20sifT = `
frontend test
  http-request wait-for-body time 20s if TRUE
`
const frontend_httprequestwaitforbodytime20satl = `
frontend test
  http-request wait-for-body time 20s at-least 100k
`
const frontend_httprequestwaitforbodytime20satl_ = `
frontend test
  http-request wait-for-body time 20s at-least 100k if TRUE
`
const frontend_httprequestwaitforhandshake = `
frontend test
  http-request wait-for-handshake
`
const frontend_httprequestwaitforhandshakeifFAL = `
frontend test
  http-request wait-for-handshake if FALSE
`
const frontend_httprequestdoresolvetxnmyipmydns = `
frontend test
  http-request do-resolve(txn.myip,mydns) hdr(Host),lower
`
const frontend_httprequestdoresolvetxnmyipmydns_ = `
frontend test
  http-request do-resolve(txn.myip,mydns) hdr(Host),lower if { var(txn.myip) -m found }
`
const frontend_httprequestdoresolvetxnmyipmydns__ = `
frontend test
  http-request do-resolve(txn.myip,mydns) hdr(Host),lower unless { var(txn.myip) -m found }
`
const frontend_httprequestdoresolvetxnmyipmydns___ = `
frontend test
  http-request do-resolve(txn.myip,mydns,ipv4) hdr(Host),lower
`
const frontend_httprequestdoresolvetxnmyipmydns____ = `
frontend test
  http-request do-resolve(txn.myip,mydns,ipv6) hdr(Host),lower
`
const frontend_httprequestsetdstvartxnmyip = `
frontend test
  http-request set-dst var(txn.myip)
`
const frontend_httprequestsetdstvartxnmyipifvar = `
frontend test
  http-request set-dst var(txn.myip) if { var(txn.myip) -m found }
`
const frontend_httprequestsetdstvartxnmyipunles = `
frontend test
  http-request set-dst var(txn.myip) unless { var(txn.myip) -m found }
`
const frontend_httprequestsetdstporthdrxport = `
frontend test
  http-request set-dst-port hdr(x-port)
`
const frontend_httprequestsetdstporthdrxportifv = `
frontend test
  http-request set-dst-port hdr(x-port) if { var(txn.myip) -m found }
`
const frontend_httprequestsetdstporthdrxportunl = `
frontend test
  http-request set-dst-port hdr(x-port) unless { var(txn.myip) -m found }
`
const frontend_httprequestsetdstportint4000 = `
frontend test
  http-request set-dst-port int(4000)
`
const frontend_httprequestreturnstatus400defaul = `
frontend test
  http-request return status 400 default-errorfiles if { var(txn.myip) -m found }
`
const frontend_httprequestreturnstatus400errorf = `
frontend test
  http-request return status 400 errorfile /my/fancy/errorfile if { var(txn.myip) -m found }
`
const frontend_httprequestreturnstatus400errorf_ = `
frontend test
  http-request return status 400 errorfiles myerror if { var(txn.myip) -m found }
`
const frontend_httprequestredirectlocationfileh = `
frontend test
  http-request redirect location /file.html if { var(txn.routecookie) -m found } !{ var(txn.pod),nbsrv -m found }:1]
`
const frontend_httprequestsetbandwidthlimitmyli = `
frontend test
  http-request set-bandwidth-limit my-limit
`
const frontend_httprequestsetbandwidthlimitmyli_ = `
frontend test
  http-request set-bandwidth-limit my-limit limit 1m period 10s
`
const frontend_httprequestsetbandwidthlimitmyli__ = `
frontend test
  http-request set-bandwidth-limit my-limit period 10s
`
const frontend_httprequestsetbandwidthlimitmyli___ = `
frontend test
  http-request set-bandwidth-limit my-limit limit 1m
`
const frontend_httprequestcapturereqcookcntFirs = `
frontend test
  http-request capture req.cook_cnt(FirstVisit),bool len 10
`
const frontend_httprequestaddheaderAuthorizatio = `
frontend test
  http-request add-header Authorization Basic\ eC1oYXByb3h5LXJlY3J1aXRzOlBlb3BsZSB3aG8gZGVjb2RlIG1lc3NhZ2VzIG9mdGVuIGxvdmUgd29ya2luZyBhdCBIQVByb3h5LiBEbyBub3QgYmUgc2h5LCBjb250YWN0IHVz
`
const frontend_httprequestaddheaderAuthorisatio = `
frontend test
  http-request add-header Authorisation "Basic eC1oYXByb3h5LXJlY3J1aXRzOlBlb3BsZSB3aG8gZGVjb2RlIG1lc3NhZ2VzIG9mdGVuIGxvdmUgd29ya2luZyBhdCBIQVByb3h5LiBEbyBub3QgYmUgc2h5LCBjb250YWN0IHVz"
`
const frontend_httprequestreturnstatus200conten = `
frontend test
  http-request return status 200 content-type "text/plain" string "My content" if { var(txn.myip) -m found }
`
const frontend_httprequestreturnstatus200conten_ = `
frontend test
  http-request return status 200 content-type "text/plain" string "My content" unless { var(txn.myip) -m found }
`
const frontend_httprequestreturncontenttypetext = `
frontend test
  http-request return content-type "text/plain" string "My content" if { var(txn.myip) -m found }
`
const frontend_httprequestreturncontenttypetext_ = `
frontend test
  http-request return content-type 'text/plain' string 'My content' if { var(txn.myip) -m found }
`
const frontend_httprequestreturncontenttypetext__ = `
frontend test
  http-request return content-type "text/plain" lf-string "Hello, you are: %[src]" if { var(txn.myip) -m found }
`
const frontend_httprequestreturncontenttypetext___ = `
frontend test
  http-request return content-type "text/plain" file /my/fancy/response/file if { var(txn.myip) -m found }
`
const frontend_httprequestreturncontenttypetext____ = `
frontend test
  http-request return content-type "text/plain" lf-file /my/fancy/lof/format/response/file if { var(txn.myip) -m found }
`
const frontend_httprequestreturncontenttypetext_____ = `
frontend test
  http-request return content-type "text/plain" string "My content" hdr X-value value if { var(txn.myip) -m found }
`
const frontend_httprequestreturncontenttypetext______ = `
frontend test
  http-request return content-type "text/plain" string "My content" hdr X-value x-value hdr Y-value y-value if { var(txn.myip) -m found }
`
const frontend_httprequestreturncontenttypetext_______ = `
frontend test
  http-request return content-type "text/plain" lf-string "Hello, you are: %[src]"
`
const frontend_httprequestredirectlocationfileh_ = `
frontend test
  http-request redirect location /file.html if { var(txn.routecookie) "ROUTEMP" }:1
`
const frontend_httpresponsesetmapmaplstsrcreshd = `
frontend test
  http-response set-map(map.lst) %[src] %[res.hdr(X-Value)] if value
`
const frontend_httpresponsesetmapmaplstsrcreshd_ = `
frontend test
  http-response set-map(map.lst) %[src] %[res.hdr(X-Value)]
`
const frontend_httpresponseaddaclmaplstsrc = `
frontend test
  http-response add-acl(map.lst) [src]
`
const frontend_httpresponseaddheaderXvaluevalue = `
frontend test
  http-response add-header X-value value
`
const frontend_httpresponsedelaclmaplstsrc = `
frontend test
  http-response del-acl(map.lst) [src]
`
const frontend_httpresponseallow = `
frontend test
  http-response allow
`
const frontend_httpresponsecachestorecachename = `
frontend test
  http-response cache-store cache-name
`
const frontend_httpresponsecachestorecachenamei = `
frontend test
  http-response cache-store cache-name if FALSE
`
const frontend_httpresponsedelheaderXvalue = `
frontend test
  http-response del-header X-value
`
const frontend_httpresponsedelmapmaplstsrcifval = `
frontend test
  http-response del-map(map.lst) %[src] if ! value
`
const frontend_httpresponsedelmapmaplstsrc = `
frontend test
  http-response del-map(map.lst) %[src]
`
const frontend_httpresponsedeny = `
frontend test
  http-response deny
`
const frontend_httpresponsedenydenystatus400 = `
frontend test
  http-response deny deny_status 400
`
const frontend_httpresponsedenyifTRUE = `
frontend test
  http-response deny if TRUE
`
const frontend_httpresponsedenydenystatus400ifT = `
frontend test
  http-response deny deny_status 400 if TRUE
`
const frontend_httpresponsedenydenystatus400con = `
frontend test
  http-response deny deny_status 400 content-type application/json if TRUE
`
const frontend_httpresponsedenydenystatus400con_ = `
frontend test
  http-response deny deny_status 400 content-type application/json
`
const frontend_httpresponsedenydenystatus400con__ = `
frontend test
  http-response deny deny_status 400 content-type application/json default-errorfiles
`
const frontend_httpresponsedenydenystatus400con___ = `
frontend test
  http-response deny deny_status 400 content-type application/json errorfile errors
`
const frontend_httpresponsedenydenystatus400con____ = `
frontend test
  http-response deny deny_status 400 content-type application/json string error if TRUE
`
const frontend_httpresponsedenydenystatus400con_____ = `
frontend test
  http-response deny deny_status 400 content-type application/json lf-string error hdr host google.com if TRUE
`
const frontend_httpresponsedenydenystatus400con______ = `
frontend test
  http-response deny deny_status 400 content-type application/json file /var/errors.file
`
const frontend_httpresponsedenydenystatus400con_______ = `
frontend test
  http-response deny deny_status 400 content-type application/json lf-file /var/errors.file
`
const frontend_httpresponsedenydenystatus400con________ = `
frontend test
  http-response deny deny_status 400 content-type application/json string error hdr host google.com if TRUE
`
const frontend_httpresponsedenydenystatus400con_________ = `
frontend test
  http-response deny deny_status 400 content-type application/json string error hdr host google.com hdr x-value bla if TRUE
`
const frontend_httpresponsedenydenystatus400con__________ = `
frontend test
  http-response deny deny_status 400 content-type application/json string error hdr host google.com hdr x-value bla
`
const frontend_httpresponseluafoo = `
frontend test
  http-response lua.foo
`
const frontend_httpresponseluafooifFALSE = `
frontend test
  http-response lua.foo if FALSE
`
const frontend_httpresponseluafooparam = `
frontend test
  http-response lua.foo param
`
const frontend_httpresponseluafooparamparam2 = `
frontend test
  http-response lua.foo param param2
`
const frontend_httpresponseredirectprefixhttpsm = `
frontend test
  http-response redirect prefix https://mysite.com
`
const frontend_httpresponsereplaceheaderUserage = `
frontend test
  http-response replace-header User-agent curl foo
`
const frontend_httpresponsereplacevalueXForward = `
frontend test
  http-response replace-value X-Forwarded-For ^192.168.(.*)$ 172.16.1
`
const frontend_httpresponsereturnstatus400defau = `
frontend test
  http-response return status 400 default-errorfiles if { var(txn.myip) -m found }
`
const frontend_httpresponsereturnstatus400error = `
frontend test
  http-response return status 400 errorfile /my/fancy/errorfile if { var(txn.myip) -m found }
`
const frontend_httpresponsereturnstatus400error_ = `
frontend test
  http-response return status 400 errorfiles myerror if { var(txn.myip) -m found }
`
const frontend_httpresponsescaddgpc121 = `
frontend test
  http-response sc-add-gpc(1,2) 1
`
const frontend_httpresponsescaddgpc121ifiserror = `
frontend test
  http-response sc-add-gpc(1,2) 1 if is-error
`
const frontend_httpresponsescincgpc12 = `
frontend test
  http-response sc-inc-gpc(1,2)
`
const frontend_httpresponsescincgpc12ifFALSE = `
frontend test
  http-response sc-inc-gpc(1,2) if FALSE
`
const frontend_httpresponsescincgpc01 = `
frontend test
  http-response sc-inc-gpc0(1)
`
const frontend_httpresponsescincgpc01ifFALSE = `
frontend test
  http-response sc-inc-gpc0(1) if FALSE
`
const frontend_httpresponsescincgpc11 = `
frontend test
  http-response sc-inc-gpc1(1)
`
const frontend_httpresponsescincgpc11ifFALSE = `
frontend test
  http-response sc-inc-gpc1(1) if FALSE
`
const frontend_httpresponsescsetgpt12hdrHostlow = `
frontend test
  http-response sc-set-gpt(1,2) hdr(Host),lower if FALSE
`
const frontend_httpresponsescsetgpt01hdrHostlow = `
frontend test
  http-response sc-set-gpt0(1) hdr(Host),lower
`
const frontend_httpresponsescsetgpt0110 = `
frontend test
  http-response sc-set-gpt0(1) 10
`
const frontend_httpresponsescsetgpt01hdrHostlow_ = `
frontend test
  http-response sc-set-gpt0(1) hdr(Host),lower if FALSE
`
const frontend_httpresponsesendspoegroupengineg = `
frontend test
  http-response send-spoe-group engine group
`
const frontend_httpresponsesetheaderXvaluevalue = `
frontend test
  http-response set-header X-value value
`
const frontend_httpresponsesetloglevelsilent = `
frontend test
  http-response set-log-level silent
`
const frontend_httpresponsesetmark20 = `
frontend test
  http-response set-mark 20
`
const frontend_httpresponsesetmark0x1Ab = `
frontend test
  http-response set-mark 0x1Ab
`
const frontend_httpresponsesetnice0 = `
frontend test
  http-response set-nice 0
`
const frontend_httpresponsesetnice0ifFALSE = `
frontend test
  http-response set-nice 0 if FALSE
`
const frontend_httpresponsesetstatus503 = `
frontend test
  http-response set-status 503
`
const frontend_httpresponsesettimeoutserver20 = `
frontend test
  http-response set-timeout server 20
`
const frontend_httpresponsesettimeouttunnel20 = `
frontend test
  http-response set-timeout tunnel 20
`
const frontend_httpresponsesettimeouttunnel20si = `
frontend test
  http-response set-timeout tunnel 20s if TRUE
`
const frontend_httpresponsesettimeoutserver20si = `
frontend test
  http-response set-timeout server 20s if TRUE
`
const frontend_httpresponsesettimeoutclient20 = `
frontend test
  http-response set-timeout client 20
`
const frontend_httpresponsesettimeoutclient20si = `
frontend test
  http-response set-timeout client 20s if TRUE
`
const frontend_httpresponsesettos0ifFALSE = `
frontend test
  http-response set-tos 0 if FALSE
`
const frontend_httpresponsesettos0 = `
frontend test
  http-response set-tos 0
`
const frontend_httpresponsesetvarreqmyvarresfhd = `
frontend test
  http-response set-var(req.my_var) res.fhdr(user-agent),lower
`
const frontend_httpresponsesetvarfmtreqmyvarres = `
frontend test
  http-response set-var-fmt(req.my_var) res.fhdr(user-agent),lower
`
const frontend_httpresponsesilentdrop = `
frontend test
  http-response silent-drop
`
const frontend_httpresponsesilentdropifFALSE = `
frontend test
  http-response silent-drop if FALSE
`
const frontend_httpresponsesilentdroprstttl1 = `
frontend test
  http-response silent-drop rst-ttl 1
`
const frontend_httpresponsesilentdroprstttl1ifs = `
frontend test
  http-response silent-drop rst-ttl 1 if { src,table_http_req_rate(ratelimits.agg),sub(txn.rate_limit) ge 1000 }
`
const frontend_httpresponseunsetvarreqmyvar = `
frontend test
  http-response unset-var(req.my_var)
`
const frontend_httpresponseunsetvarreqmyvarifFA = `
frontend test
  http-response unset-var(req.my_var) if FALSE
`
const frontend_httpresponsetracksc0srcifFALSE = `
frontend test
  http-response track-sc0 src if FALSE
`
const frontend_httpresponsetracksc0srctabletrif = `
frontend test
  http-response track-sc0 src table tr if FALSE
`
const frontend_httpresponsetracksc0src = `
frontend test
  http-response track-sc0 src
`
const frontend_httpresponsetracksc1srcifFALSE = `
frontend test
  http-response track-sc1 src if FALSE
`
const frontend_httpresponsetracksc1srctabletrif = `
frontend test
  http-response track-sc1 src table tr if FALSE
`
const frontend_httpresponsetracksc1src = `
frontend test
  http-response track-sc1 src
`
const frontend_httpresponsetracksc2srcifFALSE = `
frontend test
  http-response track-sc2 src if FALSE
`
const frontend_httpresponsetracksc2srctabletrif = `
frontend test
  http-response track-sc2 src table tr if FALSE
`
const frontend_httpresponsetracksc2src = `
frontend test
  http-response track-sc2 src
`
const frontend_httpresponsetracksc5src = `
frontend test
  http-response track-sc5 src
`
const frontend_httpresponsetracksc5srctableatab = `
frontend test
  http-response track-sc5 src table a_table
`
const frontend_httpresponsetracksc5srctableatab_ = `
frontend test
  http-response track-sc5 src table a_table if some_cond
`
const frontend_httpresponsetracksc5srcifsomecon = `
frontend test
  http-response track-sc5 src if some_cond
`
const frontend_httpresponsestrictmodeon = `
frontend test
  http-response strict-mode on
`
const frontend_httpresponsestrictmodeonifFALSE = `
frontend test
  http-response strict-mode on if FALSE
`
const frontend_httpresponsewaitforbodytime20s = `
frontend test
  http-response wait-for-body time 20s
`
const frontend_httpresponsewaitforbodytime20sif = `
frontend test
  http-response wait-for-body time 20s if TRUE
`
const frontend_httpresponsewaitforbodytime20sat = `
frontend test
  http-response wait-for-body time 20s at-least 100k
`
const frontend_httpresponsewaitforbodytime20sat_ = `
frontend test
  http-response wait-for-body time 20s at-least 100k if TRUE
`
const frontend_httpresponsesetbandwidthlimitmyl = `
frontend test
  http-response set-bandwidth-limit my-limit
`
const frontend_httpresponsesetbandwidthlimitmyl_ = `
frontend test
  http-response set-bandwidth-limit my-limit limit 1m period 10s
`
const frontend_httpresponsesetbandwidthlimitmyl__ = `
frontend test
  http-response set-bandwidth-limit my-limit period 10s
`
const frontend_httpresponsesetbandwidthlimitmyl___ = `
frontend test
  http-response set-bandwidth-limit my-limit limit 1m
`
const frontend_httpresponsecapturereshdrServeri = `
frontend test
  http-response capture res.hdr(Server) id 0
`
const frontend_httpresponsereturnstatus200conte = `
frontend test
  http-response return status 200 content-type "text/plain" string "My content" if { var(txn.myip) -m found }
`
const frontend_httpresponsereturnstatus200conte_ = `
frontend test
  http-response return status 200 content-type "text/plain" string "My content" unless { var(txn.myip) -m found }
`
const frontend_httpresponsereturncontenttypetex = `
frontend test
  http-response return content-type "text/plain" string "My content" if { var(txn.myip) -m found }
`
const frontend_httpresponsereturncontenttypetex_ = `
frontend test
  http-response return content-type 'text/plain' string 'My content' if { var(txn.myip) -m found }
`
const frontend_httpresponsereturncontenttypetex__ = `
frontend test
  http-response return content-type "text/plain" lf-string "Hello, you are: %[src]" if { var(txn.myip) -m found }
`
const frontend_httpresponsereturncontenttypetex___ = `
frontend test
  http-response return content-type "text/plain" file /my/fancy/response/file if { var(txn.myip) -m found }
`
const frontend_httpresponsereturncontenttypetex____ = `
frontend test
  http-response return content-type "text/plain" lf-file /my/fancy/lof/format/response/file if { var(txn.myip) -m found }
`
const frontend_httpresponsereturncontenttypetex_____ = `
frontend test
  http-response return content-type "text/plain" string "My content" hdr X-value value if { var(txn.myip) -m found }
`
const frontend_httpresponsereturncontenttypetex______ = `
frontend test
  http-response return content-type "text/plain" string "My content" hdr X-value x-value hdr Y-value y-value if { var(txn.myip) -m found }
`
const frontend_httpresponsereturncontenttypetex_______ = `
frontend test
  http-response return content-type "text/plain" lf-string "Hello, you are: %[src]"
`
const frontend_httpafterresponseallow = `
frontend test
  http-after-response allow
`
const frontend_httpafterresponseallowifacl = `
frontend test
  http-after-response allow if acl
`
const frontend_httpafterresponsesetheaderStrict = `
frontend test
  http-after-response set-header Strict-Transport-Security \"max-age=31536000\"
`
const frontend_httpafterresponseaddheaderXHeade = `
frontend test
  http-after-response add-header X-Header \"foo=bar\"
`
const frontend_httpafterresponseaddheaderXHeade_ = `
frontend test
  http-after-response add-header X-Header \"foo=bar\" if acl
`
const frontend_httpafterresponseaddheaderXHeade__ = `
frontend test
  http-after-response add-header X-Header \"foo=bar\" unless acl
`
const frontend_httpafterresponseallowunlessacl = `
frontend test
  http-after-response allow unless acl
`
const frontend_httpafterresponsedelheaderXValue = `
frontend test
  http-after-response del-header X-Value
`
const frontend_httpafterresponsedelheaderXValue_ = `
frontend test
  http-after-response del-header X-Value -m GET
`
const frontend_httpafterresponsedelheaderXValue__ = `
frontend test
  http-after-response del-header X-Value -m GET if acl
`
const frontend_httpafterresponsedelheaderXValue___ = `
frontend test
  http-after-response del-header X-Value -m GET unless acl
`
const frontend_httpafterresponsereplaceheaderSe = `
frontend test
  http-after-response replace-header Set-Cookie (C=[^;]*);(.*) \\1;ip=%bi;\\2
`
const frontend_httpafterresponsereplaceheaderSe_ = `
frontend test
  http-after-response replace-header Set-Cookie (C=[^;]*);(.*) \\1;ip=%bi;\\2 if acl
`
const frontend_httpafterresponsereplacevalueCac = `
frontend test
  http-after-response replace-value Cache-control ^public$ private
`
const frontend_httpafterresponsereplacevalueCac_ = `
frontend test
  http-after-response replace-value Cache-control ^public$ private if acl
`
const frontend_httpafterresponsesetstatus431 = `
frontend test
  http-after-response set-status 431
`
const frontend_httpafterresponsesetstatus503rea = `
frontend test
  http-after-response set-status 503 reason \"SlowDown\"
`
const frontend_httpafterresponsesetstatus500rea = `
frontend test
  http-after-response set-status 500 reason \"ServiceUnavailable\" if acl
`
const frontend_httpafterresponsesetstatus500rea_ = `
frontend test
  http-after-response set-status 500 reason \"ServiceUnavailable\" unless acl
`
const frontend_httpafterresponsesetvarsesslastr = `
frontend test
  http-after-response set-var(sess.last_redir) res.hdr(location)
`
const frontend_httpafterresponsesetvarsesslastr_ = `
frontend test
  http-after-response set-var(sess.last_redir) res.hdr(location) if acl
`
const frontend_httpafterresponsesetvarsesslastr__ = `
frontend test
  http-after-response set-var(sess.last_redir) res.hdr(location) unless acl
`
const frontend_httpafterresponsestrictmodeon = `
frontend test
  http-after-response strict-mode on
`
const frontend_httpafterresponsestrictmodeoff = `
frontend test
  http-after-response strict-mode off
`
const frontend_httpafterresponseunsetvarsesslas = `
frontend test
  http-after-response unset-var(sess.last_redir)
`
const frontend_httpafterresponseunsetvarsesslas_ = `
frontend test
  http-after-response unset-var(sess.last_redir) if acl
`
const frontend_httpafterresponseunsetvarsesslas__ = `
frontend test
  http-after-response unset-var(sess.last_redir) unless acl
`
const frontend_httpafterresponsesetmapmaplstsrc = `
frontend test
  http-after-response set-map(map.lst) %[src] %[res.hdr(X-Value)] if value
`
const frontend_httpafterresponsesetmapmaplstsrc_ = `
frontend test
  http-after-response set-map(map.lst) %[src] %[res.hdr(X-Value)]
`
const frontend_httpafterresponsedelaclmaplstsrc = `
frontend test
  http-after-response del-acl(map.lst) [src]
`
const frontend_httpafterresponsedelmapmaplstsrc = `
frontend test
  http-after-response del-map(map.lst) %[src] if ! value
`
const frontend_httpafterresponsedelmapmaplstsrc_ = `
frontend test
  http-after-response del-map(map.lst) %[src]
`
const frontend_httpafterresponsescaddgpc121 = `
frontend test
  http-after-response sc-add-gpc(1,2) 1
`
const frontend_httpafterresponsescaddgpc121ifis = `
frontend test
  http-after-response sc-add-gpc(1,2) 1 if is-error
`
const frontend_httpafterresponsescincgpc12 = `
frontend test
  http-after-response sc-inc-gpc(1,2)
`
const frontend_httpafterresponsescincgpc12ifise = `
frontend test
  http-after-response sc-inc-gpc(1,2) if is-error
`
const frontend_httpafterresponsescincgpc01 = `
frontend test
  http-after-response sc-inc-gpc0(1)
`
const frontend_httpafterresponsescincgpc01ifFAL = `
frontend test
  http-after-response sc-inc-gpc0(1) if FALSE
`
const frontend_httpafterresponsescincgpc11 = `
frontend test
  http-after-response sc-inc-gpc1(1)
`
const frontend_httpafterresponsescincgpc11ifFAL = `
frontend test
  http-after-response sc-inc-gpc1(1) if FALSE
`
const frontend_httpafterresponsescsetgpt1210 = `
frontend test
  http-after-response sc-set-gpt(1,2) 10
`
const frontend_httpafterresponsescsetgpt01hdrHo = `
frontend test
  http-after-response sc-set-gpt0(1) hdr(Host),lower
`
const frontend_httpafterresponsescsetgpt0110 = `
frontend test
  http-after-response sc-set-gpt0(1) 10
`
const frontend_httpafterresponsescsetgpt01hdrHo_ = `
frontend test
  http-after-response sc-set-gpt0(1) hdr(Host),lower if FALSE
`
const frontend_httperrorstatus400 = `
frontend test
  http-error status 400
`
const frontend_httperrorstatus400defaulterrorfi = `
frontend test
  http-error status 400 default-errorfiles
`
const frontend_httperrorstatus400errorfilemyfan = `
frontend test
  http-error status 400 errorfile /my/fancy/errorfile
`
const frontend_httperrorstatus400errorfilesmyer = `
frontend test
  http-error status 400 errorfiles myerror
`
const frontend_httperrorstatus200contenttypetex = `
frontend test
  http-error status 200 content-type "text/plain" string "My content"
`
const frontend_httperrorstatus400contenttypetex = `
frontend test
  http-error status 400 content-type "text/plain" lf-string "Hello, you are: %[src]"
`
const frontend_httperrorstatus400contenttypetex_ = `
frontend test
  http-error status 400 content-type "text/plain" file /my/fancy/response/file
`
const frontend_httperrorstatus400contenttypetex__ = `
frontend test
  http-error status 400 content-type "text/plain" lf-file /my/fancy/lof/format/response/file
`
const frontend_httperrorstatus400contenttypetex___ = `
frontend test
  http-error status 400 content-type "text/plain" string "My content" hdr X-value value
`
const frontend_httperrorstatus400contenttypetex____ = `
frontend test
  http-error status 400 content-type "text/plain" string "My content" hdr X-value x-value hdr Y-value y-value
`
const frontend_tcprequestcontentaccept = `
frontend test
  tcp-request content accept
`
const frontend_tcprequestcontentacceptifHTTP = `
frontend test
  tcp-request content accept if !HTTP
`
const frontend_tcprequestcontentreject = `
frontend test
  tcp-request content reject
`
const frontend_tcprequestcontentrejectifHTTP = `
frontend test
  tcp-request content reject if !HTTP
`
const frontend_tcprequestcontentcapturereqpaylo = `
frontend test
  tcp-request content capture req.payload(0,6) len 6
`
const frontend_tcprequestcontentcapturereqpaylo_ = `
frontend test
  tcp-request content capture req.payload(0,6) len 6 if !HTTP
`
const frontend_tcprequestcontentdoresolvetxnmyi = `
frontend test
  tcp-request content do-resolve(txn.myip,mydns,ipv6) capture.req.hdr(0),lower
`
const frontend_tcprequestcontentdoresolvetxnmyi_ = `
frontend test
  tcp-request content do-resolve(txn.myip,mydns) capture.req.hdr(0),lower
`
const frontend_tcprequestcontentsetpriorityclas = `
frontend test
  tcp-request content set-priority-class int(1)
`
const frontend_tcprequestcontentsetpriorityclas_ = `
frontend test
  tcp-request content set-priority-class int(1) if some_check
`
const frontend_tcprequestcontentsetpriorityoffs = `
frontend test
  tcp-request content set-priority-offset int(10)
`
const frontend_tcprequestcontentsetpriorityoffs_ = `
frontend test
  tcp-request content set-priority-offset int(10) if some_check
`
const frontend_tcprequestcontenttracksc0src = `
frontend test
  tcp-request content track-sc0 src
`
const frontend_tcprequestcontenttracksc0srcifso = `
frontend test
  tcp-request content track-sc0 src if some_check
`
const frontend_tcprequestcontenttracksc1src = `
frontend test
  tcp-request content track-sc1 src
`
const frontend_tcprequestcontenttracksc1srcifso = `
frontend test
  tcp-request content track-sc1 src if some_check
`
const frontend_tcprequestcontenttracksc2src = `
frontend test
  tcp-request content track-sc2 src
`
const frontend_tcprequestcontenttracksc2srcifso = `
frontend test
  tcp-request content track-sc2 src if some_check
`
const frontend_tcprequestcontenttracksc0srctabl = `
frontend test
  tcp-request content track-sc0 src table foo
`
const frontend_tcprequestcontenttracksc0srctabl_ = `
frontend test
  tcp-request content track-sc0 src table foo if some_check
`
const frontend_tcprequestcontenttracksc1srctabl = `
frontend test
  tcp-request content track-sc1 src table foo
`
const frontend_tcprequestcontenttracksc1srctabl_ = `
frontend test
  tcp-request content track-sc1 src table foo if some_check
`
const frontend_tcprequestcontenttracksc2srctabl = `
frontend test
  tcp-request content track-sc2 src table foo
`
const frontend_tcprequestcontenttracksc2srctabl_ = `
frontend test
  tcp-request content track-sc2 src table foo if some_check
`
const frontend_tcprequestcontenttracksc5src = `
frontend test
  tcp-request content track-sc5 src
`
const frontend_tcprequestcontenttracksc5srcifso = `
frontend test
  tcp-request content track-sc5 src if some_check
`
const frontend_tcprequestcontenttracksc5srctabl = `
frontend test
  tcp-request content track-sc5 src table foo
`
const frontend_tcprequestcontenttracksc5srctabl_ = `
frontend test
  tcp-request content track-sc5 src table foo if some_check
`
const frontend_tcprequestcontentscincgpc12 = `
frontend test
  tcp-request content sc-inc-gpc(1,2)
`
const frontend_tcprequestcontentscincgpc12ifise = `
frontend test
  tcp-request content sc-inc-gpc(1,2) if is-error
`
const frontend_tcprequestcontentscincgpc02 = `
frontend test
  tcp-request content sc-inc-gpc0(2)
`
const frontend_tcprequestcontentscincgpc02ifise = `
frontend test
  tcp-request content sc-inc-gpc0(2) if is-error
`
const frontend_tcprequestcontentscincgpc12_ = `
frontend test
  tcp-request content sc-inc-gpc1(2)
`
const frontend_tcprequestcontentscincgpc12ifise_ = `
frontend test
  tcp-request content sc-inc-gpc1(2) if is-error
`
const frontend_tcprequestcontentscsetgptx91337i = `
frontend test
  tcp-request content sc-set-gpt(x,9) 1337 if exceeds_limit
`
const frontend_tcprequestcontentscsetgpt001337 = `
frontend test
  tcp-request content sc-set-gpt0(0) 1337
`
const frontend_tcprequestcontentscsetgpt001337i = `
frontend test
  tcp-request content sc-set-gpt0(0) 1337 if exceeds_limit
`
const frontend_tcprequestcontentscaddgpc121 = `
frontend test
  tcp-request content sc-add-gpc(1,2) 1
`
const frontend_tcprequestcontentscaddgpc121ifis = `
frontend test
  tcp-request content sc-add-gpc(1,2) 1 if is-error
`
const frontend_tcprequestcontentsetdstipv410001 = `
frontend test
  tcp-request content set-dst ipv4(10.0.0.1)
`
const frontend_tcprequestcontentsetvarsesssrcsr = `
frontend test
  tcp-request content set-var(sess.src) src
`
const frontend_tcprequestcontentsetvarsessdnssl = `
frontend test
  tcp-request content set-var(sess.dn) ssl_c_s_dn
`
const frontend_tcprequestcontentsetvarfmtsesssr = `
frontend test
  tcp-request content set-var-fmt(sess.src) src
`
const frontend_tcprequestcontentsetvarfmtsessdn = `
frontend test
  tcp-request content set-var-fmt(sess.dn) ssl_c_s_dn
`
const frontend_tcprequestcontentunsetvarsesssrc = `
frontend test
  tcp-request content unset-var(sess.src)
`
const frontend_tcprequestcontentunsetvarsessdn = `
frontend test
  tcp-request content unset-var(sess.dn)
`
const frontend_tcprequestcontentsilentdrop = `
frontend test
  tcp-request content silent-drop
`
const frontend_tcprequestcontentsilentdropifHTT = `
frontend test
  tcp-request content silent-drop if !HTTP
`
const frontend_tcprequestcontentsilentdroprsttt = `
frontend test
  tcp-request content silent-drop rst-ttl 1
`
const frontend_tcprequestcontentsilentdroprsttt_ = `
frontend test
  tcp-request content silent-drop rst-ttl 1 if { src,table_http_req_rate(ratelimits.agg),sub(txn.rate_limit) ge 1000 }
`
const frontend_tcprequestcontentsendspoegroupen = `
frontend test
  tcp-request content send-spoe-group engine group
`
const frontend_tcprequestcontentuseserviceluade = `
frontend test
  tcp-request content use-service lua.deny
`
const frontend_tcprequestcontentuseserviceluade_ = `
frontend test
  tcp-request content use-service lua.deny if !HTTP
`
const frontend_tcprequestcontentluafoo = `
frontend test
  tcp-request content lua.foo
`
const frontend_tcprequestcontentluafooparamifHT = `
frontend test
  tcp-request content lua.foo param if !HTTP
`
const frontend_tcprequestcontentluafooparampara = `
frontend test
  tcp-request content lua.foo param param1
`
const frontend_tcprequestconnectionaccept = `
frontend test
  tcp-request connection accept
`
const frontend_tcprequestconnectionacceptifHTTP = `
frontend test
  tcp-request connection accept if !HTTP
`
const frontend_tcprequestconnectionreject = `
frontend test
  tcp-request connection reject
`
const frontend_tcprequestconnectionrejectifHTTP = `
frontend test
  tcp-request connection reject if !HTTP
`
const frontend_tcprequestconnectionexpectproxyl = `
frontend test
  tcp-request connection expect-proxy layer4 if { src -f proxies.lst }
`
const frontend_tcprequestconnectionexpectnetsca = `
frontend test
  tcp-request connection expect-netscaler-cip layer4
`
const frontend_tcprequestconnectionexpectnetsca_ = `
frontend test
  tcp-request connection expect-netscaler-cip layer4 if TRUE
`
const frontend_tcprequestconnectioncapturereqpa = `
frontend test
  tcp-request connection capture req.payload(0,6) len 6
`
const frontend_tcprequestconnectiontracksc0src = `
frontend test
  tcp-request connection track-sc0 src
`
const frontend_tcprequestconnectiontracksc0srci = `
frontend test
  tcp-request connection track-sc0 src if some_check
`
const frontend_tcprequestconnectiontracksc1src = `
frontend test
  tcp-request connection track-sc1 src
`
const frontend_tcprequestconnectiontracksc1srci = `
frontend test
  tcp-request connection track-sc1 src if some_check
`
const frontend_tcprequestconnectiontracksc2src = `
frontend test
  tcp-request connection track-sc2 src
`
const frontend_tcprequestconnectiontracksc2srci = `
frontend test
  tcp-request connection track-sc2 src if some_check
`
const frontend_tcprequestconnectiontracksc0srct = `
frontend test
  tcp-request connection track-sc0 src table foo
`
const frontend_tcprequestconnectiontracksc0srct_ = `
frontend test
  tcp-request connection track-sc0 src table foo if some_check
`
const frontend_tcprequestconnectiontracksc1srct = `
frontend test
  tcp-request connection track-sc1 src table foo
`
const frontend_tcprequestconnectiontracksc1srct_ = `
frontend test
  tcp-request connection track-sc1 src table foo if some_check
`
const frontend_tcprequestconnectiontracksc2srct = `
frontend test
  tcp-request connection track-sc2 src table foo
`
const frontend_tcprequestconnectiontracksc2srct_ = `
frontend test
  tcp-request connection track-sc2 src table foo if some_check
`
const frontend_tcprequestconnectiontracksc5src = `
frontend test
  tcp-request connection track-sc5 src
`
const frontend_tcprequestconnectiontracksc5srci = `
frontend test
  tcp-request connection track-sc5 src if some_check
`
const frontend_tcprequestconnectiontracksc5srct = `
frontend test
  tcp-request connection track-sc5 src table foo
`
const frontend_tcprequestconnectiontracksc5srct_ = `
frontend test
  tcp-request connection track-sc5 src table foo if some_check
`
const frontend_tcprequestconnectionscaddgpc121 = `
frontend test
  tcp-request connection sc-add-gpc(1,2) 1
`
const frontend_tcprequestconnectionscaddgpc121i = `
frontend test
  tcp-request connection sc-add-gpc(1,2) 1 if is-error
`
const frontend_tcprequestconnectionscincgpc12 = `
frontend test
  tcp-request connection sc-inc-gpc(1,2)
`
const frontend_tcprequestconnectionscincgpc12if = `
frontend test
  tcp-request connection sc-inc-gpc(1,2) if is-error
`
const frontend_tcprequestconnectionscincgpc02 = `
frontend test
  tcp-request connection sc-inc-gpc0(2)
`
const frontend_tcprequestconnectionscincgpc02if = `
frontend test
  tcp-request connection sc-inc-gpc0(2) if is-error
`
const frontend_tcprequestconnectionscincgpc12_ = `
frontend test
  tcp-request connection sc-inc-gpc1(2)
`
const frontend_tcprequestconnectionscincgpc12if_ = `
frontend test
  tcp-request connection sc-inc-gpc1(2) if is-error
`
const frontend_tcprequestconnectionscsetgptscx4 = `
frontend test
  tcp-request connection sc-set-gpt(scx,44) 1337 if exceeds_limit
`
const frontend_tcprequestconnectionscsetgpt0013 = `
frontend test
  tcp-request connection sc-set-gpt0(0) 1337
`
const frontend_tcprequestconnectionscsetgpt0013_ = `
frontend test
  tcp-request connection sc-set-gpt0(0) 1337 if exceeds_limit
`
const frontend_tcprequestconnectionsetsrcsrcipm = `
frontend test
  tcp-request connection set-src src,ipmask(24)
`
const frontend_tcprequestconnectionsetsrcsrcipm_ = `
frontend test
  tcp-request connection set-src src,ipmask(24) if some_check
`
const frontend_tcprequestconnectionsetsrchdrxfo = `
frontend test
  tcp-request connection set-src hdr(x-forwarded-for)
`
const frontend_tcprequestconnectionsetsrchdrxfo_ = `
frontend test
  tcp-request connection set-src hdr(x-forwarded-for) if some_check
`
const frontend_tcprequestconnectionsilentdrop = `
frontend test
  tcp-request connection silent-drop
`
const frontend_tcprequestconnectionsilentdropif = `
frontend test
  tcp-request connection silent-drop if !HTTP
`
const frontend_tcprequestconnectionsilentdroprs = `
frontend test
  tcp-request connection silent-drop rst-ttl 1
`
const frontend_tcprequestconnectionsilentdroprs_ = `
frontend test
  tcp-request connection silent-drop rst-ttl 1 if { src,table_http_req_rate(ratelimits.agg),sub(txn.rate_limit) ge 1000 }
`
const frontend_tcprequestconnectionluafoo = `
frontend test
  tcp-request connection lua.foo
`
const frontend_tcprequestconnectionluafooparami = `
frontend test
  tcp-request connection lua.foo param if !HTTP
`
const frontend_tcprequestconnectionluafooparamp = `
frontend test
  tcp-request connection lua.foo param param1
`
const frontend_tcprequestsessionaccept = `
frontend test
  tcp-request session accept
`
const frontend_tcprequestsessionacceptifHTTP = `
frontend test
  tcp-request session accept if !HTTP
`
const frontend_tcprequestsessionreject = `
frontend test
  tcp-request session reject
`
const frontend_tcprequestsessionrejectifHTTP = `
frontend test
  tcp-request session reject if !HTTP
`
const frontend_tcprequestsessiontracksc0src = `
frontend test
  tcp-request session track-sc0 src
`
const frontend_tcprequestsessiontracksc0srcifso = `
frontend test
  tcp-request session track-sc0 src if some_check
`
const frontend_tcprequestsessiontracksc1src = `
frontend test
  tcp-request session track-sc1 src
`
const frontend_tcprequestsessiontracksc1srcifso = `
frontend test
  tcp-request session track-sc1 src if some_check
`
const frontend_tcprequestsessiontracksc2src = `
frontend test
  tcp-request session track-sc2 src
`
const frontend_tcprequestsessiontracksc2srcifso = `
frontend test
  tcp-request session track-sc2 src if some_check
`
const frontend_tcprequestsessiontracksc0srctabl = `
frontend test
  tcp-request session track-sc0 src table foo
`
const frontend_tcprequestsessiontracksc0srctabl_ = `
frontend test
  tcp-request session track-sc0 src table foo if some_check
`
const frontend_tcprequestsessiontracksc1srctabl = `
frontend test
  tcp-request session track-sc1 src table foo
`
const frontend_tcprequestsessiontracksc1srctabl_ = `
frontend test
  tcp-request session track-sc1 src table foo if some_check
`
const frontend_tcprequestsessiontracksc2srctabl = `
frontend test
  tcp-request session track-sc2 src table foo
`
const frontend_tcprequestsessiontracksc2srctabl_ = `
frontend test
  tcp-request session track-sc2 src table foo if some_check
`
const frontend_tcprequestsessiontracksc5src = `
frontend test
  tcp-request session track-sc5 src
`
const frontend_tcprequestsessiontracksc5srcifso = `
frontend test
  tcp-request session track-sc5 src if some_check
`
const frontend_tcprequestsessiontracksc5srctabl = `
frontend test
  tcp-request session track-sc5 src table foo
`
const frontend_tcprequestsessiontracksc5srctabl_ = `
frontend test
  tcp-request session track-sc5 src table foo if some_check
`
const frontend_tcprequestsessionscaddgpc121 = `
frontend test
  tcp-request session sc-add-gpc(1,2) 1
`
const frontend_tcprequestsessionscaddgpc121ifis = `
frontend test
  tcp-request session sc-add-gpc(1,2) 1 if is-error
`
const frontend_tcprequestsessionscincgpc12 = `
frontend test
  tcp-request session sc-inc-gpc(1,2)
`
const frontend_tcprequestsessionscincgpc12ifise = `
frontend test
  tcp-request session sc-inc-gpc(1,2) if is-error
`
const frontend_tcprequestsessionscincgpc02 = `
frontend test
  tcp-request session sc-inc-gpc0(2)
`
const frontend_tcprequestsessionscincgpc02ifise = `
frontend test
  tcp-request session sc-inc-gpc0(2) if is-error
`
const frontend_tcprequestsessionscincgpc12_ = `
frontend test
  tcp-request session sc-inc-gpc1(2)
`
const frontend_tcprequestsessionscincgpc12ifise_ = `
frontend test
  tcp-request session sc-inc-gpc1(2) if is-error
`
const frontend_tcprequestsessionscsetgptsc51133 = `
frontend test
  tcp-request session sc-set-gpt(sc5,1) 1337 if exceeds_limit
`
const frontend_tcprequestsessionscsetgpt001337 = `
frontend test
  tcp-request session sc-set-gpt0(0) 1337
`
const frontend_tcprequestsessionscsetgpt001337i = `
frontend test
  tcp-request session sc-set-gpt0(0) 1337 if exceeds_limit
`
const frontend_tcprequestsessionsetvarsesssrcsr = `
frontend test
  tcp-request session set-var(sess.src) src
`
const frontend_tcprequestsessionsetvarsessdnssl = `
frontend test
  tcp-request session set-var(sess.dn) ssl_c_s_dn
`
const frontend_tcprequestsessionsetvarfmtsesssr = `
frontend test
  tcp-request session set-var-fmt(sess.src) src
`
const frontend_tcprequestsessionsetvarfmtsessdn = `
frontend test
  tcp-request session set-var-fmt(sess.dn) ssl_c_s_dn
`
const frontend_tcprequestsessionunsetvarsesssrc = `
frontend test
  tcp-request session unset-var(sess.src)
`
const frontend_tcprequestsessionunsetvarsessdn = `
frontend test
  tcp-request session unset-var(sess.dn)
`
const frontend_tcprequestsessionsilentdrop = `
frontend test
  tcp-request session silent-drop
`
const frontend_tcprequestsessionsilentdropifHTT = `
frontend test
  tcp-request session silent-drop if !HTTP
`
const frontend_tcprequestsessionsilentdroprsttt = `
frontend test
  tcp-request session silent-drop rst-ttl 1
`
const frontend_tcprequestsessionsilentdroprsttt_ = `
frontend test
  tcp-request session silent-drop rst-ttl 1 if { src,table_http_req_rate(ratelimits.agg),sub(txn.rate_limit) ge 1000 }
`
const frontend_tcprequestsessionattachsrvsrv1 = `
frontend test
  tcp-request session attach-srv srv1
`
const frontend_tcprequestsessionattachsrvsrv1na = `
frontend test
  tcp-request session attach-srv srv1 name example.com
`
const frontend_tcprequestsessionattachsrvsrv1na_ = `
frontend test
  tcp-request session attach-srv srv1 name example.com if exceeds_limit
`
const frontend_tcprequestcontentsetbandwidthlim = `
frontend test
  tcp-request content set-bandwidth-limit my-limit
`
const frontend_tcprequestcontentsetbandwidthlim_ = `
frontend test
  tcp-request content set-bandwidth-limit my-limit limit 1m period 10s
`
const frontend_tcprequestcontentsetbandwidthlim__ = `
frontend test
  tcp-request content set-bandwidth-limit my-limit period 10s
`
const frontend_tcprequestcontentsetbandwidthlim___ = `
frontend test
  tcp-request content set-bandwidth-limit my-limit limit 1m
`
const frontend_tcprequestcontentsetloglevelsile = `
frontend test
  tcp-request content set-log-level silent
`
const frontend_tcprequestcontentsetloglevelsile_ = `
frontend test
  tcp-request content set-log-level silent if FALSE
`
const frontend_tcprequestcontentsetmark20 = `
frontend test
  tcp-request content set-mark 20
`
const frontend_tcprequestcontentsetmark0x1AbifF = `
frontend test
  tcp-request content set-mark 0x1Ab if FALSE
`
const frontend_tcprequestconnectionsetmark20 = `
frontend test
  tcp-request connection set-mark 20
`
const frontend_tcprequestconnectionsetmark0x1Ab = `
frontend test
  tcp-request connection set-mark 0x1Ab if FALSE
`
const frontend_tcprequestconnectionsetsrcporthd = `
frontend test
  tcp-request connection set-src-port hdr(port)
`
const frontend_tcprequestconnectionsetsrcporthd_ = `
frontend test
  tcp-request connection set-src-port hdr(port) if FALSE
`
const frontend_tcprequestcontentsetsrcporthdrpo = `
frontend test
  tcp-request content set-src-port hdr(port)
`
const frontend_tcprequestcontentsetsrcporthdrpo_ = `
frontend test
  tcp-request content set-src-port hdr(port) if FALSE
`
const frontend_tcprequestcontentsettos0ifFALSE = `
frontend test
  tcp-request content set-tos 0 if FALSE
`
const frontend_tcprequestcontentsettos0 = `
frontend test
  tcp-request content set-tos 0
`
const frontend_tcprequestconnectionsettos0ifFAL = `
frontend test
  tcp-request connection set-tos 0 if FALSE
`
const frontend_tcprequestconnectionsettos0 = `
frontend test
  tcp-request connection set-tos 0
`
const frontend_tcprequestconnectionsetvarfmttxn = `
frontend test
  tcp-request connection set-var-fmt(txn.ip_port) %%[dst]:%%[dst_port]
`
const frontend_tcprequestcontentsetnice0ifFALSE = `
frontend test
  tcp-request content set-nice 0 if FALSE
`
const frontend_tcprequestcontentsetnice0 = `
frontend test
  tcp-request content set-nice 0
`
const frontend_tcprequestcontentswitchmodehttp = `
frontend test
  tcp-request content switch-mode http
`
const frontend_tcprequestcontentswitchmodehttpi = `
frontend test
  tcp-request content switch-mode http if FALSE
`
const frontend_tcprequestcontentswitchmodehttpp = `
frontend test
  tcp-request content switch-mode http proto my-proto
`
const frontend_tcpresponsecontentluafoo = `
frontend test
  tcp-response content lua.foo
`
const frontend_tcpresponsecontentluafooparamifH = `
frontend test
  tcp-response content lua.foo param if !HTTP
`
const frontend_tcpresponsecontentluafooparampar = `
frontend test
  tcp-response content lua.foo param param1
`
const frontend_tcpresponsecontentsetdstdest = `
frontend test
  tcp-response content set-dst dest
`
const frontend_tcpresponsecontentunsetvarsessmy = `
frontend test
  tcp-response content unset-var(sess.my_var)
`
const frontend_tcpresponsecontentsetbandwidthli = `
frontend test
  tcp-response content set-bandwidth-limit my-limit
`
const frontend_tcpresponsecontentsetbandwidthli_ = `
frontend test
  tcp-response content set-bandwidth-limit my-limit limit 1m period 10s
`
const frontend_tcpresponsecontentsetbandwidthli__ = `
frontend test
  tcp-response content set-bandwidth-limit my-limit period 10s
`
const frontend_tcpresponsecontentsetbandwidthli___ = `
frontend test
  tcp-response content set-bandwidth-limit my-limit limit 1m
`
const frontend_tcpresponsecontentsetloglevelsil = `
frontend test
  tcp-response content set-log-level silent
`
const frontend_tcpresponsecontentsetloglevelsil_ = `
frontend test
  tcp-response content set-log-level silent if FALSE
`
const frontend_tcpresponsecontentsetmark20 = `
frontend test
  tcp-response content set-mark 20
`
const frontend_tcpresponsecontentsetmark0x1Abif = `
frontend test
  tcp-response content set-mark 0x1Ab if FALSE
`
const frontend_tcpresponsecontentsettos0ifFALSE = `
frontend test
  tcp-response content set-tos 0 if FALSE
`
const frontend_tcpresponsecontentsettos0 = `
frontend test
  tcp-response content set-tos 0
`
const frontend_tcpresponsecontentsetnice0ifFALS = `
frontend test
  tcp-response content set-nice 0 if FALSE
`
const frontend_tcpresponsecontentsetnice0 = `
frontend test
  tcp-response content set-nice 0
`
const frontend_tcpresponsecontentclose = `
frontend test
  tcp-response content close
`
const frontend_tcpresponsecontentcloseifHTTP = `
frontend test
  tcp-response content close if !HTTP
`
const frontend_tcpresponsecontentscincgpc12 = `
frontend test
  tcp-response content sc-inc-gpc(1,2)
`
const frontend_tcpresponsecontentscincgpc12ifis = `
frontend test
  tcp-response content sc-inc-gpc(1,2) if is-error
`
const frontend_tcpresponsecontentscincgpc02 = `
frontend test
  tcp-response content sc-inc-gpc0(2)
`
const frontend_tcpresponsecontentscincgpc02ifis = `
frontend test
  tcp-response content sc-inc-gpc0(2) if is-error
`
const frontend_tcpresponsecontentscincgpc12_ = `
frontend test
  tcp-response content sc-inc-gpc1(2)
`
const frontend_tcpresponsecontentscincgpc12ifis_ = `
frontend test
  tcp-response content sc-inc-gpc1(2) if is-error
`
const frontend_redirectprefixhttpwwwbarcomcode3 = `
frontend test
  redirect prefix http://www.bar.com code 301 if { hdr(host) -i foo.com }
`
const frontend_statsauthadmin1AdMiN123 = `
frontend test
  stats auth admin1:AdMiN123
`
const frontend_statsenable = `
frontend test
  stats enable
`
const frontend_statshideversion = `
frontend test
  stats hide-version
`
const frontend_statsshowlegends = `
frontend test
  stats show-legends
`
const frontend_statsshowmodules = `
frontend test
  stats show-modules
`
const frontend_statsmaxconn10 = `
frontend test
  stats maxconn 10
`
const frontend_statsrealmHAProxyStatistics = `
frontend test
  stats realm HAProxy\\ Statistics
`
const frontend_statsrefresh10s = `
frontend test
  stats refresh 10s
`
const frontend_statsscope = `
frontend test
  stats scope .
`
const frontend_statsshowdescMasternodeforEurope = `
frontend test
  stats show-desc Master node for Europe, Asia, Africa
`
const frontend_statsshownode = `
frontend test
  stats show-node
`
const frontend_statsshownodeEurope1 = `
frontend test
  stats show-node Europe-1
`
const frontend_statsuriadminstats = `
frontend test
  stats uri /admin?stats
`
const frontend_statsbindprocessall = `
frontend test
  stats bind-process all
`
const frontend_statsbindprocessodd = `
frontend test
  stats bind-process odd
`
const frontend_statsbindprocesseven = `
frontend test
  stats bind-process even
`
const frontend_statsbindprocess1234 = `
frontend test
  stats bind-process 1 2 3 4
`
const frontend_statsbindprocess14 = `
frontend test
  stats bind-process 1-4
`
const frontend_statsadminifLOCALHOST = `
frontend test
  stats admin if LOCALHOST
`
