// Code generated by go generate; DO NOT EDIT.
/*
Copyright 2019 HAProxy Technologies

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package integration_test

const backend_aclurlstatspathbegstats = `
backend test
  acl url_stats path_beg /stats
`
const backend_aclurlstaticpathbegistaticimages = `
backend test
  acl url_static path_beg -i /static /images /javascript /stylesheets
`
const backend_aclurlstaticpathendijpggifpngcss = `
backend test
  acl url_static path_end -i .jpg .gif .png .css .js
`
const backend_aclbeappoknbsrvbeappgt0 = `
backend test
  acl be_app_ok nbsrv(be_app) gt 0
`
const backend_aclbestaticoknbsrvbestaticgt0 = `
backend test
  acl be_static_ok nbsrv(be_static) gt 0
`
const backend_aclkeyreqhdrXAddACLKeymfound = `
backend test
  acl key req.hdr(X-Add-ACL-Key) -m found
`
const backend_acladdpathaddacl = `
backend test
  acl add path /addacl
`
const backend_acldelpathdelacl = `
backend test
  acl del path /delacl
`
const backend_aclmyhosthdrHostfmyhostlst = `
backend test
  acl myhost hdr(Host) -f myhost.lst
`
const backend_aclcleardstport80 = `
backend test
  acl clear dst_port 80
`
const backend_aclsecuredstport8080 = `
backend test
  acl secure dst_port 8080
`
const backend_aclloginpageurlbeglogin = `
backend test
  acl login_page url_beg /login
`
const backend_acllogouturlbeglogout = `
backend test
  acl logout url_beg /logout
`
const backend_acluidgivenurlregloginuserid = `
backend test
  acl uid_given url_reg /login?userid=[^&]+
`
const backend_aclcookiesethdrsubcookieSEEN1 = `
backend test
  acl cookie_set hdr_sub(cookie) SEEN=1
`
const backend_balanceroundrobin = `
backend test
  balance roundrobin
`
const backend_balanceuri = `
backend test
  balance uri
`
const backend_balanceuriwhole = `
backend test
  balance uri whole
`
const backend_balanceurilen12 = `
backend test
  balance uri len 12
`
const backend_balanceuridepth8 = `
backend test
  balance uri depth 8
`
const backend_balanceuridepth8whole = `
backend test
  balance uri depth 8 whole
`
const backend_balanceuridepth8len12whole = `
backend test
  balance uri depth 8 len 12 whole
`
const backend_balanceurlparam = `
backend test
  balance url_param
`
const backend_balanceurlparamsessionid = `
backend test
  balance url_param session_id
`
const backend_balanceurlparamcheckpost10 = `
backend test
  balance url_param check_post 10
`
const backend_balanceurlparamcheckpost10maxwai = `
backend test
  balance url_param check_post 10 max_wait 20
`
const backend_balanceurlparamsessionidcheckpos = `
backend test
  balance url_param session_id check_post 10 max_wait 20
`
const backend_balancehdrhdrName = `
backend test
  balance hdr(hdrName)
`
const backend_balancehdrhdrNameusedomainonly = `
backend test
  balance hdr(hdrName) use_domain_only
`
const backend_balancerandom = `
backend test
  balance random
`
const backend_balancerandom15 = `
backend test
  balance random(15)
`
const backend_balancerdpcookie = `
backend test
  balance rdp-cookie
`
const backend_balancerdpcookiesomething = `
backend test
  balance rdp-cookie(something)
`
const backend_balancehashreqcookieclientid = `
backend test
  balance hash req.cookie(clientid)
`
const backend_balancehashreqhdripxforwardedfor = `
backend test
  balance hash req.hdr_ip(x-forwarded-for,-1),ipmask(24)
`
const backend_balancehashreqhdripxforwardedfor_ = `
backend test
  balance hash req.hdr_ip(x-forwarded-for ,-1),ipmask(24)
`
const backend_persistrdpcookie = `
backend test
  persist rdp-cookie
`
const backend_persistrdpcookiecookies = `
backend test
  persist rdp-cookie(cookies)
`
const backend_cookietest = `
backend test
  cookie test
`
const backend_cookiemyCookiedomaindom1indirect = `
backend test
  cookie myCookie domain dom1 indirect postonly
`
const backend_cookiemyCookiedomaindom1domaindo = `
backend test
  cookie myCookie domain dom1 domain dom2 indirect postonly
`
const backend_cookiemyCookieindirectmaxidle10m = `
backend test
  cookie myCookie indirect maxidle 10 maxlife 5 postonly
`
const backend_cookiemyCookieindirectmaxidle10 = `
backend test
  cookie myCookie indirect maxidle 10
`
const backend_cookiemyCookieindirectmaxlife10 = `
backend test
  cookie myCookie indirect maxlife 10
`
const backend_cookiemyCookiedomaindom1domaindo_ = `
backend test
  cookie myCookie domain dom1 domain dom2 httponly indirect maxidle 10 maxlife 5 nocache postonly preserve rewrite secure
`
const backend_cookiemyCookieattrSameSiteStrict = `
backend test
  cookie myCookie attr \"SameSite=Strict\" attr \"mykey=myvalue\" insert
`
const backend_defaultserveraddr127001 = `
backend test
  default-server addr 127.0.0.1
`
const backend_defaultserveraddr1 = `
backend test
  default-server addr ::1
`
const backend_defaultserveragentcheck = `
backend test
  default-server agent-check
`
const backend_defaultserveragentsendname = `
backend test
  default-server agent-send name
`
const backend_defaultserveragentinter1000ms = `
backend test
  default-server agent-inter 1000ms
`
const backend_defaultserveragentaddr127001 = `
backend test
  default-server agent-addr 127.0.0.1
`
const backend_defaultserveragentaddrsitecom = `
backend test
  default-server agent-addr site.com
`
const backend_defaultserveragentport1 = `
backend test
  default-server agent-port 1
`
const backend_defaultserveragentport65535 = `
backend test
  default-server agent-port 65535
`
const backend_defaultserverallow0rtt = `
backend test
  default-server allow-0rtt
`
const backend_defaultserveralpnh2 = `
backend test
  default-server alpn h2
`
const backend_defaultserveralpnhttp11 = `
backend test
  default-server alpn http/1.1
`
const backend_defaultserveralpnh2http11 = `
backend test
  default-server alpn h2,http/1.1
`
const backend_defaultserverbackup = `
backend test
  default-server backup
`
const backend_defaultservercafilecertcrt = `
backend test
  default-server ca-file cert.crt
`
const backend_defaultservercheck = `
backend test
  default-server check
`
const backend_defaultserverchecksendproxy = `
backend test
  default-server check-send-proxy
`
const backend_defaultservercheckalpnhttp10 = `
backend test
  default-server check-alpn http/1.0
`
const backend_defaultservercheckalpnhttp11http = `
backend test
  default-server check-alpn http/1.1,http/1.0
`
const backend_defaultservercheckprotoh2 = `
backend test
  default-server check-proto h2
`
const backend_defaultservercheckssl = `
backend test
  default-server check-ssl
`
const backend_defaultservercheckviasocks4 = `
backend test
  default-server check-via-socks4
`
const backend_defaultserverciphersECDHERSAAES1 = `
backend test
  default-server ciphers ECDHE-RSA-AES128-GCM-SHA256
`
const backend_defaultserverciphersECDHEECDSACH = `
backend test
  default-server ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
`
const backend_defaultserverciphersuitesECDHEEC = `
backend test
  default-server ciphersuites ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
`
const backend_defaultservercookievalue = `
backend test
  default-server cookie value
`
const backend_defaultservercrlfilefilepem = `
backend test
  default-server crl-file file.pem
`
const backend_defaultservercrtcertpem = `
backend test
  default-server crt cert.pem
`
const backend_defaultserverdisabled = `
backend test
  default-server disabled
`
const backend_defaultserverenabled = `
backend test
  default-server enabled
`
const backend_defaultservererrorlimit50 = `
backend test
  default-server error-limit 50
`
const backend_defaultserverfall30 = `
backend test
  default-server fall 30
`
const backend_defaultserverfall1rise2inter3spo = `
backend test
  default-server fall 1 rise 2 inter 3s port 4444
`
const backend_defaultserverforcesslv3 = `
backend test
  default-server force-sslv3
`
const backend_defaultserverforcetlsv10 = `
backend test
  default-server force-tlsv10
`
const backend_defaultserverforcetlsv11 = `
backend test
  default-server force-tlsv11
`
const backend_defaultserverforcetlsv12 = `
backend test
  default-server force-tlsv12
`
const backend_defaultserverforcetlsv13 = `
backend test
  default-server force-tlsv13
`
const backend_defaultserverinitaddrlastlibcnon = `
backend test
  default-server init-addr last,libc,none
`
const backend_defaultserverinitaddrlastlibcnon_ = `
backend test
  default-server init-addr last,libc,none,127.0.0.1
`
const backend_defaultserverinter1500ms = `
backend test
  default-server inter 1500ms
`
const backend_defaultserverinter1000weight13 = `
backend test
  default-server inter 1000 weight 13
`
const backend_defaultserverfastinter2500ms = `
backend test
  default-server fastinter 2500ms
`
const backend_defaultserverfastinterunknown = `
backend test
  default-server fastinter unknown
`
const backend_defaultserverdowninter3500ms = `
backend test
  default-server downinter 3500ms
`
const backend_defaultserverlogprotolegacy = `
backend test
  default-server log-proto legacy
`
const backend_defaultserverlogprotooctetcount = `
backend test
  default-server log-proto octet-count
`
const backend_defaultservermaxconn1 = `
backend test
  default-server maxconn 1
`
const backend_defaultservermaxconn50 = `
backend test
  default-server maxconn 50
`
const backend_defaultservermaxqueue0 = `
backend test
  default-server maxqueue 0
`
const backend_defaultservermaxqueue1000 = `
backend test
  default-server maxqueue 1000
`
const backend_defaultservermaxreuse1 = `
backend test
  default-server max-reuse -1
`
const backend_defaultservermaxreuse0 = `
backend test
  default-server max-reuse 0
`
const backend_defaultservermaxreuse1_ = `
backend test
  default-server max-reuse 1
`
const backend_defaultserverminconn1 = `
backend test
  default-server minconn 1
`
const backend_defaultserverminconn50 = `
backend test
  default-server minconn 50
`
const backend_defaultservernamespacetest = `
backend test
  default-server namespace test
`
const backend_defaultservernoagentcheck = `
backend test
  default-server no-agent-check
`
const backend_defaultservernobackup = `
backend test
  default-server no-backup
`
const backend_defaultservernocheck = `
backend test
  default-server no-check
`
const backend_defaultservernocheckssl = `
backend test
  default-server no-check-ssl
`
const backend_defaultservernosendproxyv2 = `
backend test
  default-server no-send-proxy-v2
`
const backend_defaultservernosendproxyv2ssl = `
backend test
  default-server no-send-proxy-v2-ssl
`
const backend_defaultservernosendproxyv2sslcn = `
backend test
  default-server no-send-proxy-v2-ssl-cn
`
const backend_defaultservernossl = `
backend test
  default-server no-ssl
`
const backend_defaultservernosslreuse = `
backend test
  default-server no-ssl-reuse
`
const backend_defaultservernosslv3 = `
backend test
  default-server no-sslv3
`
const backend_defaultservernotlstickets = `
backend test
  default-server no-tls-tickets
`
const backend_defaultservernotlsv10 = `
backend test
  default-server no-tlsv10
`
const backend_defaultservernotlsv11 = `
backend test
  default-server no-tlsv11
`
const backend_defaultservernotlsv12 = `
backend test
  default-server no-tlsv12
`
const backend_defaultservernotlsv13 = `
backend test
  default-server no-tlsv13
`
const backend_defaultservernoverifyhost = `
backend test
  default-server no-verifyhost
`
const backend_defaultservernotfo = `
backend test
  default-server no-tfo
`
const backend_defaultservernonstick = `
backend test
  default-server non-stick
`
const backend_defaultservernpnhttp11http10 = `
backend test
  default-server npn http/1.1,http/1.0
`
const backend_defaultserverobservelayer4 = `
backend test
  default-server observe layer4
`
const backend_defaultserverobservelayer7 = `
backend test
  default-server observe layer7
`
const backend_defaultserveronerrorfastinter = `
backend test
  default-server on-error fastinter
`
const backend_defaultserveronerrorfailcheck = `
backend test
  default-server on-error fail-check
`
const backend_defaultserveronerrorsuddendeath = `
backend test
  default-server on-error sudden-death
`
const backend_defaultserveronerrormarkdown = `
backend test
  default-server on-error mark-down
`
const backend_defaultserveronmarkeddownshutdow = `
backend test
  default-server on-marked-down shutdown-sessions
`
const backend_defaultserveronmarkedupshutdownb = `
backend test
  default-server on-marked-up shutdown-backup-session
`
const backend_defaultserverpoolmaxconn1 = `
backend test
  default-server pool-max-conn -1
`
const backend_defaultserverpoolmaxconn0 = `
backend test
  default-server pool-max-conn 0
`
const backend_defaultserverpoolmaxconn100 = `
backend test
  default-server pool-max-conn 100
`
const backend_defaultserverpoolpurgedelay0 = `
backend test
  default-server pool-purge-delay 0
`
const backend_defaultserverpoolpurgedelay5 = `
backend test
  default-server pool-purge-delay 5
`
const backend_defaultserverpoolpurgedelay500 = `
backend test
  default-server pool-purge-delay 500
`
const backend_defaultserverport27015 = `
backend test
  default-server port 27015
`
const backend_defaultserverport27016 = `
backend test
  default-server port 27016
`
const backend_defaultserverprotoh2 = `
backend test
  default-server proto h2
`
const backend_defaultserverredirhttpimage1mydo = `
backend test
  default-server redir http://image1.mydomain.com
`
const backend_defaultserverredirhttpsimage1myd = `
backend test
  default-server redir https://image1.mydomain.com
`
const backend_defaultserverrise2 = `
backend test
  default-server rise 2
`
const backend_defaultserverrise200 = `
backend test
  default-server rise 200
`
const backend_defaultserverresolveoptsallowdup = `
backend test
  default-server resolve-opts allow-dup-ip
`
const backend_defaultserverresolveoptsignorewe = `
backend test
  default-server resolve-opts ignore-weight
`
const backend_defaultserverresolveoptsallowdup_ = `
backend test
  default-server resolve-opts allow-dup-ip,ignore-weight
`
const backend_defaultserverresolveoptspreventd = `
backend test
  default-server resolve-opts prevent-dup-ip,ignore-weight
`
const backend_defaultserverresolvepreferipv4 = `
backend test
  default-server resolve-prefer ipv4
`
const backend_defaultserverresolvepreferipv6 = `
backend test
  default-server resolve-prefer ipv6
`
const backend_defaultserverresolvenet100008 = `
backend test
  default-server resolve-net 10.0.0.0/8
`
const backend_defaultserverresolvenet100008100 = `
backend test
  default-server resolve-net 10.0.0.0/8,10.0.0.0/16
`
const backend_defaultserverresolversmydns = `
backend test
  default-server resolvers mydns
`
const backend_defaultserversendproxy = `
backend test
  default-server send-proxy
`
const backend_defaultserversendproxyv2 = `
backend test
  default-server send-proxy-v2
`
const backend_defaultserverproxyv2optionsssl = `
backend test
  default-server proxy-v2-options ssl
`
const backend_defaultserverproxyv2optionssslce = `
backend test
  default-server proxy-v2-options ssl,cert-cn
`
const backend_defaultserverproxyv2optionssslce_ = `
backend test
  default-server proxy-v2-options ssl,cert-cn,ssl-cipher,cert-sig,cert-key,authority,crc32c,unique-id
`
const backend_defaultserversendproxyv2ssl = `
backend test
  default-server send-proxy-v2-ssl
`
const backend_defaultserversendproxyv2sslcn = `
backend test
  default-server send-proxy-v2-ssl-cn
`
const backend_defaultserverslowstart2000ms = `
backend test
  default-server slowstart 2000ms
`
const backend_defaultserversniTODO = `
backend test
  default-server sni TODO
`
const backend_defaultserversourceTODO = `
backend test
  default-server source TODO
`
const backend_defaultserverssl = `
backend test
  default-server ssl
`
const backend_defaultserversslmaxverSSLv3 = `
backend test
  default-server ssl-max-ver SSLv3
`
const backend_defaultserversslmaxverTLSv10 = `
backend test
  default-server ssl-max-ver TLSv1.0
`
const backend_defaultserversslmaxverTLSv11 = `
backend test
  default-server ssl-max-ver TLSv1.1
`
const backend_defaultserversslmaxverTLSv12 = `
backend test
  default-server ssl-max-ver TLSv1.2
`
const backend_defaultserversslmaxverTLSv13 = `
backend test
  default-server ssl-max-ver TLSv1.3
`
const backend_defaultserversslminverSSLv3 = `
backend test
  default-server ssl-min-ver SSLv3
`
const backend_defaultserversslminverTLSv10 = `
backend test
  default-server ssl-min-ver TLSv1.0
`
const backend_defaultserversslminverTLSv11 = `
backend test
  default-server ssl-min-ver TLSv1.1
`
const backend_defaultserversslminverTLSv12 = `
backend test
  default-server ssl-min-ver TLSv1.2
`
const backend_defaultserversslminverTLSv13 = `
backend test
  default-server ssl-min-ver TLSv1.3
`
const backend_defaultserversslreuse = `
backend test
  default-server ssl-reuse
`
const backend_defaultserverstick = `
backend test
  default-server stick
`
const backend_defaultserversocks412700181 = `
backend test
  default-server socks4 127.0.0.1:81
`
const backend_defaultservertcput20ms = `
backend test
  default-server tcp-ut 20ms
`
const backend_defaultservertfo = `
backend test
  default-server tfo
`
const backend_defaultservertrackTODO = `
backend test
  default-server track TODO
`
const backend_defaultservertlstickets = `
backend test
  default-server tls-tickets
`
const backend_defaultserververifynone = `
backend test
  default-server verify none
`
const backend_defaultserververifyrequired = `
backend test
  default-server verify required
`
const backend_defaultserververifyhostsitecom = `
backend test
  default-server verifyhost site.com
`
const backend_defaultserverweight1 = `
backend test
  default-server weight 1
`
const backend_defaultserverweight128 = `
backend test
  default-server weight 128
`
const backend_defaultserverweight256 = `
backend test
  default-server weight 256
`
const backend_defaultserverpoollowconn384 = `
backend test
  default-server pool-low-conn 384
`
const backend_defaultserverwsh1 = `
backend test
  default-server ws h1
`
const backend_defaultserverwsh2 = `
backend test
  default-server ws h2
`
const backend_defaultserverwsauto = `
backend test
  default-server ws auto
`
const backend_defaultserverlogbufsize10 = `
backend test
  default-server log-bufsize 10
`
const backend_emailalertfromadminexamplecom = `
backend test
  email-alert from admin@example.com
`
const backend_emailalerttoazxy = `
backend test
  email-alert to a@z,x@y
`
const backend_emailalertlevelwarning = `
backend test
  email-alert level warning
`
const backend_emailalertmailerslocalmailers = `
backend test
  email-alert mailers local-mailers
`
const backend_emailalertmyhostnamesrv01example = `
backend test
  email-alert myhostname srv01.example.com
`
const backend_emailalerttosupportexamplecom = `
backend test
  email-alert to support@example.com
`
const backend_emailalerttoabcd = `
backend test
  email-alert to "a@b, c@d"
`
const backend_errorfile400etchaproxyerrorfiles = `
backend test
  errorfile 400 /etc/haproxy/errorfiles/400badreq.http
`
const backend_errorfile408devnullworkaroundChr = `
backend test
  errorfile 408 /dev/null # work around Chrome pre-connect bug
`
const backend_errorfile403etchaproxyerrorfiles = `
backend test
  errorfile 403 /etc/haproxy/errorfiles/403forbid.http
`
const backend_errorfile503etchaproxyerrorfiles = `
backend test
  errorfile 503 /etc/haproxy/errorfiles/503sorry.http
`
const backend_errorloc302400httpwwwmyawesomesi = `
backend test
  errorloc302 400 http://www.myawesomesite.com/error_page
`
const backend_errorloc302404httpwwwmyawesomesi = `
backend test
  errorloc302 404 http://www.myawesomesite.com/not_found
`
const backend_errorloc302501errorpage = `
backend test
  errorloc302 501 /error_page
`
const backend_errorloc303400httpwwwmyawesomesi = `
backend test
  errorloc303 400 http://www.myawesomesite.com/error_page
`
const backend_errorloc303404httpwwwmyawesomesi = `
backend test
  errorloc303 404 http://www.myawesomesite.com/not_found
`
const backend_errorloc303501errorpage = `
backend test
  errorloc303 501 /error_page
`
const backend_errorfileserrorssection400 = `
backend test
  errorfiles errors_section 400
`
const backend_errorfileserrorssection400401500 = `
backend test
  errorfiles errors_section 400 401 500
`
const backend_errorfileserrorssection = `
backend test
  errorfiles errors_section
`
const backend_hashtypemapbased = `
backend test
  hash-type map-based
`
const backend_hashtypemapbasedavalanche = `
backend test
  hash-type map-based avalanche
`
const backend_hashtypeconsistent = `
backend test
  hash-type consistent
`
const backend_hashtypeconsistentavalanche = `
backend test
  hash-type consistent avalanche
`
const backend_hashtypeavalanche = `
backend test
  hash-type avalanche
`
const backend_hashtypemapbasedsdbm = `
backend test
  hash-type map-based sdbm
`
const backend_hashtypemapbaseddjb2 = `
backend test
  hash-type map-based djb2
`
const backend_hashtypemapbasedwt6 = `
backend test
  hash-type map-based wt6
`
const backend_hashtypemapbasedcrc32 = `
backend test
  hash-type map-based crc32
`
const backend_hashtypeconsistentsdbm = `
backend test
  hash-type consistent sdbm
`
const backend_hashtypeconsistentdjb2 = `
backend test
  hash-type consistent djb2
`
const backend_hashtypeconsistentwt6 = `
backend test
  hash-type consistent wt6
`
const backend_hashtypeconsistentcrc32 = `
backend test
  hash-type consistent crc32
`
const backend_hashtypemapbasedsdbmavalanche = `
backend test
  hash-type map-based sdbm avalanche
`
const backend_hashtypemapbaseddjb2avalanche = `
backend test
  hash-type map-based djb2 avalanche
`
const backend_hashtypemapbasedwt6avalanche = `
backend test
  hash-type map-based wt6 avalanche
`
const backend_hashtypemapbasedcrc32avalanche = `
backend test
  hash-type map-based crc32 avalanche
`
const backend_hashtypeconsistentsdbmavalanche = `
backend test
  hash-type consistent sdbm avalanche
`
const backend_hashtypeconsistentdjb2avalanche = `
backend test
  hash-type consistent djb2 avalanche
`
const backend_hashtypeconsistentwt6avalanche = `
backend test
  hash-type consistent wt6 avalanche
`
const backend_hashtypeconsistentcrc32avalanche = `
backend test
  hash-type consistent crc32 avalanche
`
const backend_hashtypeconsistentnone = `
backend test
  hash-type consistent none
`
const backend_httpreusenever = `
backend test
  http-reuse never
`
const backend_httpreusesafe = `
backend test
  http-reuse safe
`
const backend_httpreuseaggressive = `
backend test
  http-reuse aggressive
`
const backend_httpreusealways = `
backend test
  http-reuse always
`
const backend_logglobal = `
backend test
  log global
`
const backend_nolog = `
backend test
  no log
`
const backend_logstdoutformatshortdaemonsendlo = `
backend test
  log stdout format short daemon # send log to systemd
`
const backend_logstdoutformatrawdaemonsendever = `
backend test
  log stdout format raw daemon # send everything to stdout
`
const backend_logstderrformatrawdaemonnoticese = `
backend test
  log stderr format raw daemon notice # send important events to stderr
`
const backend_log127001514local0noticeonlysend = `
backend test
  log 127.0.0.1:514 local0 notice # only send important events
`
const backend_log127001514local0noticenoticesa = `
backend test
  log 127.0.0.1:514 local0 notice notice # same but limit output level
`
const backend_log1270011515len8192formatrfc542 = `
backend test
  log 127.0.0.1:1515 len 8192 format rfc5424 local2 info
`
const backend_log1270011515sample12local0 = `
backend test
  log 127.0.0.1:1515 sample 1:2 local0
`
const backend_log1270011515len8192formatrfc542_ = `
backend test
  log 127.0.0.1:1515 len 8192 format rfc5424 sample 1,2-5:6 local2 info
`
const backend_log1270011515formatrfc5424sample = `
backend test
  log 127.0.0.1:1515 format rfc5424 sample 1,2-5:6 local2 info
`
const backend_log1270011515formatrfc5424sample_ = `
backend test
  log 127.0.0.1:1515 format rfc5424 sample 1-5:6 local2
`
const backend_log1270011515sample16local2 = `
backend test
  log 127.0.0.1:1515 sample 1:6 local2
`
const backend_optionforwardfor = `
backend test
  option forwardfor
`
const backend_optionforwardforexceptA = `
backend test
  option forwardfor except A
`
const backend_optionforwardforexceptAheaderB = `
backend test
  option forwardfor except A header B
`
const backend_optionforwardforexceptAheaderBif = `
backend test
  option forwardfor except A header B if-none
`
const backend_optionforwardforcomment = `
backend test
  option forwardfor # comment
`
const backend_optionforwardforexceptAcomment = `
backend test
  option forwardfor except A # comment
`
const backend_optionhttpchkOPTIONSHTTP11rnHost = `
backend test
  option httpchk OPTIONS * HTTP/1.1\\r\\nHost:\\ www
`
const backend_optionhttpchkuri = `
backend test
  option httpchk <uri>
`
const backend_optionhttpchkmethoduri = `
backend test
  option httpchk <method> <uri>
`
const backend_optionhttpchkmethoduriversion = `
backend test
  option httpchk <method> <uri> <version>
`
const backend_optionmysqlcheck = `
backend test
  option mysql-check
`
const backend_optionmysqlcheckuserjohn = `
backend test
  option mysql-check user john
`
const backend_optionmysqlcheckuserjohnpost41 = `
backend test
  option mysql-check user john post-41
`
const backend_optionmysqlcheckuserjohnpre41 = `
backend test
  option mysql-check user john pre-41
`
const backend_optionmysqlcheckcomment = `
backend test
  option mysql-check # comment
`
const backend_optionpgsqlcheckuserjohn = `
backend test
  option pgsql-check user john
`
const backend_optionpgsqlcheckuserjohncomment = `
backend test
  option pgsql-check user john # comment
`
const backend_optionredispatch = `
backend test
  option redispatch
`
const backend_nooptionredispatch = `
backend test
  no option redispatch
`
const backend_optionredispatch1 = `
backend test
  option redispatch 1
`
const backend_optionredispatchcomment = `
backend test
  option redispatch # comment
`
const backend_optionredispatch1comment = `
backend test
  option redispatch -1 # comment
`
const backend_optionsmtpchk = `
backend test
  option smtpchk
`
const backend_nooptionsmtpchk = `
backend test
  no option smtpchk
`
const backend_optionsmtpchkHELOmydomainorg = `
backend test
  option smtpchk HELO mydomain.org
`
const backend_optionsmtpchkEHLOmydomainorg = `
backend test
  option smtpchk EHLO mydomain.org
`
const backend_optionsmtpchkcomment = `
backend test
  option smtpchk # comment
`
const backend_optionsmtpchkHELOmydomainorgcomm = `
backend test
  option smtpchk HELO mydomain.org # comment
`
const backend_externalcheckpathusrbinbin = `
backend test
  external-check path /usr/bin:/bin
`
const backend_externalcheckcommandbintrue = `
backend test
  external-check command /bin/true
`
const backend_servername1270018080 = `
backend test
  server name 127.0.0.1:8080
`
const backend_servername127001 = `
backend test
  server name 127.0.0.1
`
const backend_serveraddr127001 = `
backend test
  server addr 127.0.0.1
`
const backend_serveraddr1 = `
backend test
  server addr ::1
`
const backend_servername127001agentcheck = `
backend test
  server name 127.0.0.1 agent-check
`
const backend_servername127001agentsendname = `
backend test
  server name 127.0.0.1 agent-send name
`
const backend_servername127001agentinter1000ms = `
backend test
  server name 127.0.0.1 agent-inter 1000ms
`
const backend_servername127001agentaddr127001 = `
backend test
  server name 127.0.0.1 agent-addr 127.0.0.1
`
const backend_servername127001agentaddrsitecom = `
backend test
  server name 127.0.0.1 agent-addr site.com
`
const backend_servername127001agentport1 = `
backend test
  server name 127.0.0.1 agent-port 1
`
const backend_servername127001agentport65535 = `
backend test
  server name 127.0.0.1 agent-port 65535
`
const backend_servername127001allow0rtt = `
backend test
  server name 127.0.0.1 allow-0rtt
`
const backend_servername127001alpnh2 = `
backend test
  server name 127.0.0.1 alpn h2
`
const backend_servername127001alpnhttp11 = `
backend test
  server name 127.0.0.1 alpn http/1.1
`
const backend_servername127001alpnh2http11 = `
backend test
  server name 127.0.0.1 alpn h2,http/1.1
`
const backend_servername127001backup = `
backend test
  server name 127.0.0.1 backup
`
const backend_servername127001cafilecertcrt = `
backend test
  server name 127.0.0.1 ca-file cert.crt
`
const backend_servername127001check = `
backend test
  server name 127.0.0.1 check
`
const backend_servername127001checksendproxy = `
backend test
  server name 127.0.0.1 check-send-proxy
`
const backend_servername127001checkalpnhttp10 = `
backend test
  server name 127.0.0.1 check-alpn http/1.0
`
const backend_servername127001checkalpnhttp11h = `
backend test
  server name 127.0.0.1 check-alpn http/1.1,http/1.0
`
const backend_servername127001checkprotoh2 = `
backend test
  server name 127.0.0.1 check-proto h2
`
const backend_servername127001checkssl = `
backend test
  server name 127.0.0.1 check-ssl
`
const backend_servername127001checkviasocks4 = `
backend test
  server name 127.0.0.1 check-via-socks4
`
const backend_servername127001ciphersECDHERSAA = `
backend test
  server name 127.0.0.1 ciphers ECDHE-RSA-AES128-GCM-SHA256
`
const backend_servername127001ciphersECDHEECDS = `
backend test
  server name 127.0.0.1 ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
`
const backend_servername127001ciphersuitesECDH = `
backend test
  server name 127.0.0.1 ciphersuites ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
`
const backend_servername127001cookievalue = `
backend test
  server name 127.0.0.1 cookie value
`
const backend_servername127001crlfilefilepem = `
backend test
  server name 127.0.0.1 crl-file file.pem
`
const backend_servername127001crtcertpem = `
backend test
  server name 127.0.0.1 crt cert.pem
`
const backend_servername127001disabled = `
backend test
  server name 127.0.0.1 disabled
`
const backend_servername127001enabled = `
backend test
  server name 127.0.0.1 enabled
`
const backend_servername127001errorlimit50 = `
backend test
  server name 127.0.0.1 error-limit 50
`
const backend_servername127001fall30 = `
backend test
  server name 127.0.0.1 fall 30
`
const backend_servername127001forcesslv3 = `
backend test
  server name 127.0.0.1 force-sslv3
`
const backend_servername127001forcetlsv10 = `
backend test
  server name 127.0.0.1 force-tlsv10
`
const backend_servername127001forcetlsv11 = `
backend test
  server name 127.0.0.1 force-tlsv11
`
const backend_servername127001forcetlsv12 = `
backend test
  server name 127.0.0.1 force-tlsv12
`
const backend_servername127001forcetlsv13 = `
backend test
  server name 127.0.0.1 force-tlsv13
`
const backend_servername127001initaddrlastlibc = `
backend test
  server name 127.0.0.1 init-addr last,libc,none
`
const backend_servername127001initaddrlastlibc_ = `
backend test
  server name 127.0.0.1 init-addr last,libc,none,127.0.0.1
`
const backend_servername127001inter1500ms = `
backend test
  server name 127.0.0.1 inter 1500ms
`
const backend_servername127001fastinter2500ms = `
backend test
  server name 127.0.0.1 fastinter 2500ms
`
const backend_servername127001fastinterunknown = `
backend test
  server name 127.0.0.1 fastinter unknown
`
const backend_servername127001downinter3500ms = `
backend test
  server name 127.0.0.1 downinter 3500ms
`
const backend_servername127001logprotolegacy = `
backend test
  server name 127.0.0.1 log-proto legacy
`
const backend_servername127001logprotooctetcou = `
backend test
  server name 127.0.0.1 log-proto octet-count
`
const backend_servername127001maxconn1 = `
backend test
  server name 127.0.0.1 maxconn 1
`
const backend_servername127001maxconn50 = `
backend test
  server name 127.0.0.1 maxconn 50
`
const backend_servername127001maxqueue0 = `
backend test
  server name 127.0.0.1 maxqueue 0
`
const backend_servername127001maxqueue1000 = `
backend test
  server name 127.0.0.1 maxqueue 1000
`
const backend_servername127001maxreuse1 = `
backend test
  server name 127.0.0.1 max-reuse -1
`
const backend_servername127001maxreuse0 = `
backend test
  server name 127.0.0.1 max-reuse 0
`
const backend_servername127001maxreuse1_ = `
backend test
  server name 127.0.0.1 max-reuse 1
`
const backend_servername127001minconn1 = `
backend test
  server name 127.0.0.1 minconn 1
`
const backend_servername127001minconn50 = `
backend test
  server name 127.0.0.1 minconn 50
`
const backend_servername127001namespacetest = `
backend test
  server name 127.0.0.1 namespace test
`
const backend_servername127001noagentcheck = `
backend test
  server name 127.0.0.1 no-agent-check
`
const backend_servername127001nobackup = `
backend test
  server name 127.0.0.1 no-backup
`
const backend_servername127001nocheck = `
backend test
  server name 127.0.0.1 no-check
`
const backend_servername127001nocheckssl = `
backend test
  server name 127.0.0.1 no-check-ssl
`
const backend_servername127001nosendproxyv2 = `
backend test
  server name 127.0.0.1 no-send-proxy-v2
`
const backend_servername127001nosendproxyv2ssl = `
backend test
  server name 127.0.0.1 no-send-proxy-v2-ssl
`
const backend_servername127001nosendproxyv2ssl_ = `
backend test
  server name 127.0.0.1 no-send-proxy-v2-ssl-cn
`
const backend_servername127001nossl = `
backend test
  server name 127.0.0.1 no-ssl
`
const backend_servername127001nosslreuse = `
backend test
  server name 127.0.0.1 no-ssl-reuse
`
const backend_servername127001nosslv3 = `
backend test
  server name 127.0.0.1 no-sslv3
`
const backend_servername127001notlstickets = `
backend test
  server name 127.0.0.1 no-tls-tickets
`
const backend_servername127001notlsv10 = `
backend test
  server name 127.0.0.1 no-tlsv10
`
const backend_servername127001notlsv11 = `
backend test
  server name 127.0.0.1 no-tlsv11
`
const backend_servername127001notlsv12 = `
backend test
  server name 127.0.0.1 no-tlsv12
`
const backend_servername127001notlsv13 = `
backend test
  server name 127.0.0.1 no-tlsv13
`
const backend_servername127001noverifyhost = `
backend test
  server name 127.0.0.1 no-verifyhost
`
const backend_servername127001notfo = `
backend test
  server name 127.0.0.1 no-tfo
`
const backend_servername127001nonstick = `
backend test
  server name 127.0.0.1 non-stick
`
const backend_servername127001npnhttp11http10 = `
backend test
  server name 127.0.0.1 npn http/1.1,http/1.0
`
const backend_servername127001observelayer4 = `
backend test
  server name 127.0.0.1 observe layer4
`
const backend_servername127001observelayer7 = `
backend test
  server name 127.0.0.1 observe layer7
`
const backend_servername127001onerrorfastinter = `
backend test
  server name 127.0.0.1 on-error fastinter
`
const backend_servername127001onerrorfailcheck = `
backend test
  server name 127.0.0.1 on-error fail-check
`
const backend_servername127001onerrorsuddendea = `
backend test
  server name 127.0.0.1 on-error sudden-death
`
const backend_servername127001onerrormarkdown = `
backend test
  server name 127.0.0.1 on-error mark-down
`
const backend_servername127001onmarkeddownshut = `
backend test
  server name 127.0.0.1 on-marked-down shutdown-sessions
`
const backend_servername127001onmarkedupshutdo = `
backend test
  server name 127.0.0.1 on-marked-up shutdown-backup-session
`
const backend_servername127001poolmaxconn1 = `
backend test
  server name 127.0.0.1 pool-max-conn -1
`
const backend_servername127001poolmaxconn0 = `
backend test
  server name 127.0.0.1 pool-max-conn 0
`
const backend_servername127001poolmaxconn100 = `
backend test
  server name 127.0.0.1 pool-max-conn 100
`
const backend_servername127001poolpurgedelay0 = `
backend test
  server name 127.0.0.1 pool-purge-delay 0
`
const backend_servername127001poolpurgedelay5 = `
backend test
  server name 127.0.0.1 pool-purge-delay 5
`
const backend_servername127001poolpurgedelay50 = `
backend test
  server name 127.0.0.1 pool-purge-delay 500
`
const backend_servername127001port27015 = `
backend test
  server name 127.0.0.1 port 27015
`
const backend_servername127001port27016 = `
backend test
  server name 127.0.0.1 port 27016
`
const backend_servername127001protoh2 = `
backend test
  server name 127.0.0.1 proto h2
`
const backend_servername127001redirhttpimage1m = `
backend test
  server name 127.0.0.1 redir http://image1.mydomain.com
`
const backend_servername127001redirhttpsimage1 = `
backend test
  server name 127.0.0.1 redir https://image1.mydomain.com
`
const backend_servername127001rise2 = `
backend test
  server name 127.0.0.1 rise 2
`
const backend_servername127001rise200 = `
backend test
  server name 127.0.0.1 rise 200
`
const backend_servername127001resolveoptsallow = `
backend test
  server name 127.0.0.1 resolve-opts allow-dup-ip
`
const backend_servername127001resolveoptsignor = `
backend test
  server name 127.0.0.1 resolve-opts ignore-weight
`
const backend_servername127001resolveoptsallow_ = `
backend test
  server name 127.0.0.1 resolve-opts allow-dup-ip,ignore-weight
`
const backend_servername127001resolveoptspreve = `
backend test
  server name 127.0.0.1 resolve-opts prevent-dup-ip,ignore-weight
`
const backend_servername127001resolvepreferipv = `
backend test
  server name 127.0.0.1 resolve-prefer ipv4
`
const backend_servername127001resolvepreferipv_ = `
backend test
  server name 127.0.0.1 resolve-prefer ipv6
`
const backend_servername127001resolvenet100008 = `
backend test
  server name 127.0.0.1 resolve-net 10.0.0.0/8
`
const backend_servername127001resolvenet100008_ = `
backend test
  server name 127.0.0.1 resolve-net 10.0.0.0/8,10.0.0.0/16
`
const backend_servername127001resolversmydns = `
backend test
  server name 127.0.0.1 resolvers mydns
`
const backend_servername127001sendproxy = `
backend test
  server name 127.0.0.1 send-proxy
`
const backend_servername127001sendproxyv2 = `
backend test
  server name 127.0.0.1 send-proxy-v2
`
const backend_servername127001proxyv2optionsss = `
backend test
  server name 127.0.0.1 proxy-v2-options ssl
`
const backend_servername127001proxyv2optionsss_ = `
backend test
  server name 127.0.0.1 proxy-v2-options ssl,cert-cn
`
const backend_servername127001proxyv2optionsss__ = `
backend test
  server name 127.0.0.1 proxy-v2-options ssl,cert-cn,ssl-cipher,cert-sig,cert-key,authority,crc32c,unique-id
`
const backend_servername127001sendproxyv2ssl = `
backend test
  server name 127.0.0.1 send-proxy-v2-ssl
`
const backend_servername127001sendproxyv2sslcn = `
backend test
  server name 127.0.0.1 send-proxy-v2-ssl-cn
`
const backend_servername127001slowstart2000ms = `
backend test
  server name 127.0.0.1 slowstart 2000ms
`
const backend_servername127001sniTODO = `
backend test
  server name 127.0.0.1 sni TODO
`
const backend_servername127001sourceTODO = `
backend test
  server name 127.0.0.1 source TODO
`
const backend_servername127001ssl = `
backend test
  server name 127.0.0.1 ssl
`
const backend_servername127001sslmaxverSSLv3 = `
backend test
  server name 127.0.0.1 ssl-max-ver SSLv3
`
const backend_servername127001sslmaxverTLSv10 = `
backend test
  server name 127.0.0.1 ssl-max-ver TLSv1.0
`
const backend_servername127001sslmaxverTLSv11 = `
backend test
  server name 127.0.0.1 ssl-max-ver TLSv1.1
`
const backend_servername127001sslmaxverTLSv12 = `
backend test
  server name 127.0.0.1 ssl-max-ver TLSv1.2
`
const backend_servername127001sslmaxverTLSv13 = `
backend test
  server name 127.0.0.1 ssl-max-ver TLSv1.3
`
const backend_servername127001sslminverSSLv3 = `
backend test
  server name 127.0.0.1 ssl-min-ver SSLv3
`
const backend_servername127001sslminverTLSv10 = `
backend test
  server name 127.0.0.1 ssl-min-ver TLSv1.0
`
const backend_servername127001sslminverTLSv11 = `
backend test
  server name 127.0.0.1 ssl-min-ver TLSv1.1
`
const backend_servername127001sslminverTLSv12 = `
backend test
  server name 127.0.0.1 ssl-min-ver TLSv1.2
`
const backend_servername127001sslminverTLSv13 = `
backend test
  server name 127.0.0.1 ssl-min-ver TLSv1.3
`
const backend_servername127001setproxyv2tlvfmt = `
backend test
  server name 127.0.0.1 set-proxy-v2-tlv-fmt(0x20) %[fc_pp_tlv(0x20)]
`
const backend_servername127001sslreuse = `
backend test
  server name 127.0.0.1 ssl-reuse
`
const backend_servername127001stick = `
backend test
  server name 127.0.0.1 stick
`
const backend_servername127001socks412700181 = `
backend test
  server name 127.0.0.1 socks4 127.0.0.1:81
`
const backend_servername127001tcput20ms = `
backend test
  server name 127.0.0.1 tcp-ut 20ms
`
const backend_servername127001tfo = `
backend test
  server name 127.0.0.1 tfo
`
const backend_servername127001trackTODO = `
backend test
  server name 127.0.0.1 track TODO
`
const backend_servername127001tlstickets = `
backend test
  server name 127.0.0.1 tls-tickets
`
const backend_servername127001verifynone = `
backend test
  server name 127.0.0.1 verify none
`
const backend_servername127001verifyrequired = `
backend test
  server name 127.0.0.1 verify required
`
const backend_servername127001verifyhostsiteco = `
backend test
  server name 127.0.0.1 verifyhost site.com
`
const backend_servername127001weight1 = `
backend test
  server name 127.0.0.1 weight 1
`
const backend_servername127001weight128 = `
backend test
  server name 127.0.0.1 weight 128
`
const backend_servername127001weight256 = `
backend test
  server name 127.0.0.1 weight 256
`
const backend_servername127001poollowconn384 = `
backend test
  server name 127.0.0.1 pool-low-conn 384
`
const backend_servername127001wsh1 = `
backend test
  server name 127.0.0.1 ws h1
`
const backend_servername127001wsh2 = `
backend test
  server name 127.0.0.1 ws h2
`
const backend_servername127001wsauto = `
backend test
  server name 127.0.0.1 ws auto
`
const backend_servername127001logbufsize10 = `
backend test
  server name 127.0.0.1 log-bufsize 10
`
const backend_sticktabletypeipsize1mexpire5mst = `
backend test
  stick-table type ip size 1m expire 5m store gpc0,conn_rate(30s)
`
const backend_sticktabletypeipsize1mexpire5mst_ = `
backend test
  stick-table type ip size 1m expire 5m store gpc0,conn_rate(30s) # comment
`
const backend_sticktabletypestringlen1000size1 = `
backend test
  stick-table type string len 1000 size 1m expire 5m store gpc0,conn_rate(30s)
`
const backend_sticktabletypestringlen1000size1_ = `
backend test
  stick-table type string len 1000 size 1m expire 5m nopurge peers aaaaa store gpc0,conn_rate(30s)
`
const backend_sticktabletypeintegersize1msrvke = `
backend test
  stick-table type integer size 1m srvkey addr write-to t2
`
const backend_stickonsrctablepopiflocalhost = `
backend test
  stick on src table pop if !localhost
`
const backend_stickmatchsrctablepopiflocalhost = `
backend test
  stick match src table pop if !localhost
`
const backend_stickstorerequestsrctablepopiflo = `
backend test
  stick store-request src table pop if !localhost
`
const backend_usefcgiappapplication = `
backend test
  use-fcgi-app application
`
const backend_useserverwwwifreqsslsniiwwwexamp = `
backend test
  use-server www if { req_ssl_sni -i www.example.com }
`
const backend_useserverwwwifreqsslsniiwwwexamp_ = `
backend test
  use-server www if { req_ssl_sni -i www.example.com } # comment
`
const backend_loadserverstatefromfileglobal = `
backend test
  load-server-state-from-file global
`
const backend_loadserverstatefromfilelocal = `
backend test
  load-server-state-from-file local
`
const backend_loadserverstatefromfilenone = `
backend test
  load-server-state-from-file none
`
const backend_servertemplatesrv13googlecom80ch = `
backend test
  server-template srv 1-3 google.com:80 check
`
const backend_servertemplatesrv3googlecom80che = `
backend test
  server-template srv 3 google.com:80 check
`
const backend_servertemplatesrv3googlecom80 = `
backend test
  server-template srv 3 google.com:80
`
const backend_servertemplatesrv3googlecom = `
backend test
  server-template srv 3 google.com
`
const backend_forcepersistifaclname = `
backend test
  force-persist if acl-name
`
const backend_forcepersistunlessaclname = `
backend test
  force-persist unless acl-name
`
const backend_ignorepersistifaclname = `
backend test
  ignore-persist if acl-name
`
const backend_ignorepersistunlessaclname = `
backend test
  ignore-persist unless acl-name
`
const backend_httpsendnameheader = `
backend test
  http-send-name-header
`
const backend_httpsendnameheaderXMyAwesomeHead = `
backend test
  http-send-name-header X-My-Awesome-Header
`
const backend_optionhttprestrictreqhdrnamespre = `
backend test
  option http-restrict-req-hdr-names preserve
`
const backend_optionhttprestrictreqhdrnamesdel = `
backend test
  option http-restrict-req-hdr-names delete
`
const backend_optionhttprestrictreqhdrnamesrej = `
backend test
  option http-restrict-req-hdr-names reject
`
const backend_source1921681200 = `
backend test
  source 192.168.1.200
`
const backend_source1921681200usesrcclientip = `
backend test
  source 192.168.1.200 usesrc clientip
`
const backend_source192168120080usesrcclientip = `
backend test
  source 192.168.1.200:80 usesrc clientip
`
const backend_source1921681200usesrcclient = `
backend test
  source 192.168.1.200 usesrc client
`
const backend_source192168120080usesrcclient = `
backend test
  source 192.168.1.200:80 usesrc client
`
const backend_source0000usesrcclientip = `
backend test
  source 0.0.0.0 usesrc clientip
`
const backend_source0000usesrchdripxforwardedf = `
backend test
  source 0.0.0.0 usesrc hdr_ip(x-forwarded-for,-1)
`
const backend_source1921681200interfacename = `
backend test
  source 192.168.1.200 interface name
`
const backend_source1921681200usesrc1921681201 = `
backend test
  source 192.168.1.200 usesrc 192.168.1.201
`
const backend_source1921681200usesrchdriphdr = `
backend test
  source 192.168.1.200 usesrc hdr_ip(hdr)
`
const backend_source1921681200usesrchdriphdroc = `
backend test
  source 192.168.1.200 usesrc hdr_ip(hdr,occ)
`
const backend_optionoriginalto = `
backend test
  option originalto
`
const backend_optionoriginaltoexcept127001 = `
backend test
  option originalto except 127.0.0.1
`
const backend_optionoriginaltoheaderXClientDst = `
backend test
  option originalto header X-Client-Dst
`
const backend_optionoriginaltoexcept127001head = `
backend test
  option originalto except 127.0.0.1 header X-Client-Dst
`
const backend_optionoriginaltocomment = `
backend test
  option originalto # comment
`
const backend_optionoriginaltoexcept127001comm = `
backend test
  option originalto except 127.0.0.1 # comment
`
const backend_httprequestsetmapmaplstsrcreqhdr = `
backend test
  http-request set-map(map.lst) %[src] %[req.hdr(X-Value)] if value
`
const backend_httprequestsetmapmaplstsrcreqhdr_ = `
backend test
  http-request set-map(map.lst) %[src] %[req.hdr(X-Value)]
`
const backend_httprequestaddaclmaplstsrc = `
backend test
  http-request add-acl(map.lst) [src]
`
const backend_httprequestaddheaderXvaluevalue = `
backend test
  http-request add-header X-value value
`
const backend_httprequestcacheusecachename = `
backend test
  http-request cache-use cache-name
`
const backend_httprequestcacheusecachenameifFA = `
backend test
  http-request cache-use cache-name if FALSE
`
const backend_httprequestdelaclmaplstsrc = `
backend test
  http-request del-acl(map.lst) [src]
`
const backend_httprequestallow = `
backend test
  http-request allow
`
const backend_httprequestauth = `
backend test
  http-request auth
`
const backend_httprequestdelheaderXvalue = `
backend test
  http-request del-header X-value
`
const backend_httprequestdelheaderXvalueifTRUE = `
backend test
  http-request del-header X-value if TRUE
`
const backend_httprequestdelheaderXvaluemstrif = `
backend test
  http-request del-header X-value -m str if TRUE
`
const backend_httprequestdelmapmaplstsrcifvalu = `
backend test
  http-request del-map(map.lst) %[src] if ! value
`
const backend_httprequestdelmapmaplstsrc = `
backend test
  http-request del-map(map.lst) %[src]
`
const backend_httprequestdeny = `
backend test
  http-request deny
`
const backend_httprequestdenydenystatus400 = `
backend test
  http-request deny deny_status 400
`
const backend_httprequestdenyifTRUE = `
backend test
  http-request deny if TRUE
`
const backend_httprequestdenydenystatus400ifTR = `
backend test
  http-request deny deny_status 400 if TRUE
`
const backend_httprequestdenydenystatus400cont = `
backend test
  http-request deny deny_status 400 content-type application/json if TRUE
`
const backend_httprequestdenydenystatus400cont_ = `
backend test
  http-request deny deny_status 400 content-type application/json
`
const backend_httprequestdenydenystatus400cont__ = `
backend test
  http-request deny deny_status 400 content-type application/json default-errorfiles
`
const backend_httprequestdenydenystatus400cont___ = `
backend test
  http-request deny deny_status 400 content-type application/json errorfile errors
`
const backend_httprequestdenydenystatus400cont____ = `
backend test
  http-request deny deny_status 400 content-type application/json string error if TRUE
`
const backend_httprequestdenydenystatus400cont_____ = `
backend test
  http-request deny deny_status 400 content-type application/json lf-string error hdr host google.com if TRUE
`
const backend_httprequestdenydenystatus400cont______ = `
backend test
  http-request deny deny_status 400 content-type application/json file /var/errors.file
`
const backend_httprequestdenydenystatus400cont_______ = `
backend test
  http-request deny deny_status 400 content-type application/json lf-file /var/errors.file
`
const backend_httprequestdenydenystatus400cont________ = `
backend test
  http-request deny deny_status 400 content-type application/json string error hdr host google.com if TRUE
`
const backend_httprequestdenydenystatus400cont_________ = `
backend test
  http-request deny deny_status 400 content-type application/json string error hdr host google.com hdr x-value bla if TRUE
`
const backend_httprequestdenydenystatus400cont__________ = `
backend test
  http-request deny deny_status 400 content-type application/json string error hdr host google.com hdr x-value bla
`
const backend_httprequestdisablel7retry = `
backend test
  http-request disable-l7-retry
`
const backend_httprequestdisablel7retryifFALSE = `
backend test
  http-request disable-l7-retry if FALSE
`
const backend_httprequestearlyhinthintsrc = `
backend test
  http-request early-hint hint %[src]
`
const backend_httprequestearlyhinthintsrcifFAL = `
backend test
  http-request early-hint hint %[src] if FALSE
`
const backend_httprequestearlyhintifFALSE = `
backend test
  http-request early-hint if FALSE
`
const backend_httprequestluafoo = `
backend test
  http-request lua.foo
`
const backend_httprequestluafooifFALSE = `
backend test
  http-request lua.foo if FALSE
`
const backend_httprequestluafooparam = `
backend test
  http-request lua.foo param
`
const backend_httprequestluafooparamparam2 = `
backend test
  http-request lua.foo param param2
`
const backend_httprequestnormalizeurifragmente = `
backend test
  http-request normalize-uri fragment-encode
`
const backend_httprequestnormalizeurifragmente_ = `
backend test
  http-request normalize-uri fragment-encode if TRUE
`
const backend_httprequestnormalizeurifragments = `
backend test
  http-request normalize-uri fragment-strip
`
const backend_httprequestnormalizeurifragments_ = `
backend test
  http-request normalize-uri fragment-strip if TRUE
`
const backend_httprequestnormalizeuripathmerge = `
backend test
  http-request normalize-uri path-merge-slashes
`
const backend_httprequestnormalizeuripathmerge_ = `
backend test
  http-request normalize-uri path-merge-slashes if TRUE
`
const backend_httprequestnormalizeuripathstrip = `
backend test
  http-request normalize-uri path-strip-dot
`
const backend_httprequestnormalizeuripathstrip_ = `
backend test
  http-request normalize-uri path-strip-dot if TRUE
`
const backend_httprequestnormalizeuripathstrip__ = `
backend test
  http-request normalize-uri path-strip-dotdot
`
const backend_httprequestnormalizeuripathstrip___ = `
backend test
  http-request normalize-uri path-strip-dotdot full
`
const backend_httprequestnormalizeuripathstrip____ = `
backend test
  http-request normalize-uri path-strip-dotdot if TRUE
`
const backend_httprequestnormalizeuripathstrip_____ = `
backend test
  http-request normalize-uri path-strip-dotdot full if TRUE
`
const backend_httprequestnormalizeuripercentde = `
backend test
  http-request normalize-uri percent-decode-unreserved
`
const backend_httprequestnormalizeuripercentde_ = `
backend test
  http-request normalize-uri percent-decode-unreserved if TRUE
`
const backend_httprequestnormalizeuripercentde__ = `
backend test
  http-request normalize-uri percent-decode-unreserved strict
`
const backend_httprequestnormalizeuripercentde___ = `
backend test
  http-request normalize-uri percent-decode-unreserved strict if TRUE
`
const backend_httprequestnormalizeuripercentto = `
backend test
  http-request normalize-uri percent-to-uppercase
`
const backend_httprequestnormalizeuripercentto_ = `
backend test
  http-request normalize-uri percent-to-uppercase if TRUE
`
const backend_httprequestnormalizeuripercentto__ = `
backend test
  http-request normalize-uri percent-to-uppercase strict
`
const backend_httprequestnormalizeuripercentto___ = `
backend test
  http-request normalize-uri percent-to-uppercase strict if TRUE
`
const backend_httprequestnormalizeuriquerysort = `
backend test
  http-request normalize-uri query-sort-by-name
`
const backend_httprequestnormalizeuriquerysort_ = `
backend test
  http-request normalize-uri query-sort-by-name if TRUE
`
const backend_httprequestredirectprefixhttpsmy = `
backend test
  http-request redirect prefix https://mysite.com
`
const backend_httprequestreject = `
backend test
  http-request reject
`
const backend_httprequestreplaceheaderUseragen = `
backend test
  http-request replace-header User-agent curl foo
`
const backend_httprequestreplacepathfoo = `
backend test
  http-request replace-path (.*) /foo
`
const backend_httprequestreplacepathfooifTRUE = `
backend test
  http-request replace-path (.*) /foo if TRUE
`
const backend_httprequestreplacepathqfoo = `
backend test
  http-request replace-pathq (.*) /foo
`
const backend_httprequestreplacepathqfooifTRUE = `
backend test
  http-request replace-pathq (.*) /foo if TRUE
`
const backend_httprequestreplaceurihttphttps1 = `
backend test
  http-request replace-uri ^http://(.*) https://1
`
const backend_httprequestreplaceurihttphttps1i = `
backend test
  http-request replace-uri ^http://(.*) https://1 if FALSE
`
const backend_httprequestreplacevalueXForwarde = `
backend test
  http-request replace-value X-Forwarded-For ^192.168.(.*)$ 172.16.1
`
const backend_httprequestscaddgpc121 = `
backend test
  http-request sc-add-gpc(1,2) 1
`
const backend_httprequestscaddgpc121ifiserror = `
backend test
  http-request sc-add-gpc(1,2) 1 if is-error
`
const backend_httprequestscincgpc12 = `
backend test
  http-request sc-inc-gpc(1,2)
`
const backend_httprequestscincgpc12ifFALSE = `
backend test
  http-request sc-inc-gpc(1,2) if FALSE
`
const backend_httprequestscincgpc01 = `
backend test
  http-request sc-inc-gpc0(1)
`
const backend_httprequestscincgpc01ifFALSE = `
backend test
  http-request sc-inc-gpc0(1) if FALSE
`
const backend_httprequestscincgpc11 = `
backend test
  http-request sc-inc-gpc1(1)
`
const backend_httprequestscincgpc11ifFALSE = `
backend test
  http-request sc-inc-gpc1(1) if FALSE
`
const backend_httprequestscsetgpt12hdrHostlowe = `
backend test
  http-request sc-set-gpt(1,2) hdr(Host),lower if FALSE
`
const backend_httprequestscsetgpt01hdrHostlowe = `
backend test
  http-request sc-set-gpt0(1) hdr(Host),lower
`
const backend_httprequestscsetgpt0110 = `
backend test
  http-request sc-set-gpt0(1) 10
`
const backend_httprequestscsetgpt01hdrHostlowe_ = `
backend test
  http-request sc-set-gpt0(1) hdr(Host),lower if FALSE
`
const backend_httprequestsendspoegroupenginegr = `
backend test
  http-request send-spoe-group engine group
`
const backend_httprequestsetheaderXvaluevalue = `
backend test
  http-request set-header X-value value
`
const backend_httprequestsetloglevelsilent = `
backend test
  http-request set-log-level silent
`
const backend_httprequestsetmark20 = `
backend test
  http-request set-mark 20
`
const backend_httprequestsetmark0x1Ab = `
backend test
  http-request set-mark 0x1Ab
`
const backend_httprequestsetnice0 = `
backend test
  http-request set-nice 0
`
const backend_httprequestsetnice0ifFALSE = `
backend test
  http-request set-nice 0 if FALSE
`
const backend_httprequestsetmethodPOST = `
backend test
  http-request set-method POST
`
const backend_httprequestsetmethodPOSTifFALSE = `
backend test
  http-request set-method POST if FALSE
`
const backend_httprequestsetpathhdrhostpath = `
backend test
  http-request set-path /%[hdr(host)]%[path]
`
const backend_httprequestsetpathqhdrhostpath = `
backend test
  http-request set-pathq /%[hdr(host)]%[path]
`
const backend_httprequestsetpriorityclassreqhd = `
backend test
  http-request set-priority-class req.hdr(priority)
`
const backend_httprequestsetpriorityclassreqhd_ = `
backend test
  http-request set-priority-class req.hdr(priority) if FALSE
`
const backend_httprequestsetpriorityoffsetreqh = `
backend test
  http-request set-priority-offset req.hdr(offset)
`
const backend_httprequestsetpriorityoffsetreqh_ = `
backend test
  http-request set-priority-offset req.hdr(offset) if FALSE
`
const backend_httprequestsetqueryqueryregsub3D = `
backend test
  http-request set-query %[query,regsub(%3D,=,g)]
`
const backend_httprequestsetsrchdrsrc = `
backend test
  http-request set-src hdr(src)
`
const backend_httprequestsetsrchdrsrcifFALSE = `
backend test
  http-request set-src hdr(src) if FALSE
`
const backend_httprequestsetsrcporthdrport = `
backend test
  http-request set-src-port hdr(port)
`
const backend_httprequestsetsrcporthdrportifFA = `
backend test
  http-request set-src-port hdr(port) if FALSE
`
const backend_httprequestsettimeoutserver20 = `
backend test
  http-request set-timeout server 20
`
const backend_httprequestsettimeouttunnel20 = `
backend test
  http-request set-timeout tunnel 20
`
const backend_httprequestsettimeouttunnel20sif = `
backend test
  http-request set-timeout tunnel 20s if TRUE
`
const backend_httprequestsettimeoutserver20sif = `
backend test
  http-request set-timeout server 20s if TRUE
`
const backend_httprequestsettimeoutclient20 = `
backend test
  http-request set-timeout client 20
`
const backend_httprequestsettimeoutclient20sif = `
backend test
  http-request set-timeout client 20s if TRUE
`
const backend_httprequestsettos0ifFALSE = `
backend test
  http-request set-tos 0 if FALSE
`
const backend_httprequestsettos0 = `
backend test
  http-request set-tos 0
`
const backend_httprequestseturihdrhostpath = `
backend test
  http-request set-uri /%[hdr(host)]%[path]
`
const backend_httprequestsetvarreqmyvarreqfhdr = `
backend test
  http-request set-var(req.my_var) req.fhdr(user-agent),lower
`
const backend_httprequestsetvarfmtreqmyvarreqf = `
backend test
  http-request set-var-fmt(req.my_var) req.fhdr(user-agent),lower
`
const backend_httprequestsilentdrop = `
backend test
  http-request silent-drop
`
const backend_httprequestsilentdropifFALSE = `
backend test
  http-request silent-drop if FALSE
`
const backend_httprequestsilentdroprstttl1 = `
backend test
  http-request silent-drop rst-ttl 1
`
const backend_httprequestsilentdroprstttl1ifsr = `
backend test
  http-request silent-drop rst-ttl 1 if { src,table_http_req_rate(ratelimits.agg),sub(txn.rate_limit) ge 1000 }
`
const backend_httprequeststrictmodeon = `
backend test
  http-request strict-mode on
`
const backend_httprequeststrictmodeonifFALSE = `
backend test
  http-request strict-mode on if FALSE
`
const backend_httprequesttarpit = `
backend test
  http-request tarpit
`
const backend_httprequesttarpitdenystatus400 = `
backend test
  http-request tarpit deny_status 400
`
const backend_httprequesttarpitifTRUE = `
backend test
  http-request tarpit if TRUE
`
const backend_httprequesttarpitdenystatus400if = `
backend test
  http-request tarpit deny_status 400 if TRUE
`
const backend_httprequesttarpitdenystatus400co = `
backend test
  http-request tarpit deny_status 400 content-type application/json if TRUE
`
const backend_httprequesttarpitdenystatus400co_ = `
backend test
  http-request tarpit deny_status 400 content-type application/json
`
const backend_httprequesttarpitdenystatus400co__ = `
backend test
  http-request tarpit deny_status 400 content-type application/json default-errorfiles
`
const backend_httprequesttarpitdenystatus400co___ = `
backend test
  http-request tarpit deny_status 400 content-type application/json errorfile errors
`
const backend_httprequesttarpitdenystatus400co____ = `
backend test
  http-request tarpit deny_status 400 content-type application/json string error if TRUE
`
const backend_httprequesttarpitdenystatus400co_____ = `
backend test
  http-request tarpit deny_status 400 content-type application/json lf-string error hdr host google.com if TRUE
`
const backend_httprequesttarpitdenystatus400co______ = `
backend test
  http-request tarpit deny_status 400 content-type application/json file /var/errors.file
`
const backend_httprequesttarpitdenystatus400co_______ = `
backend test
  http-request tarpit deny_status 400 content-type application/json lf-file /var/errors.file
`
const backend_httprequesttarpitdenystatus400co________ = `
backend test
  http-request tarpit deny_status 400 content-type application/json string error hdr host google.com if TRUE
`
const backend_httprequesttarpitdenystatus400co_________ = `
backend test
  http-request tarpit deny_status 400 content-type application/json string error hdr host google.com hdr x-value bla if TRUE
`
const backend_httprequesttarpitdenystatus400co__________ = `
backend test
  http-request tarpit deny_status 400 content-type application/json string error hdr host google.com hdr x-value bla
`
const backend_httprequesttracksc0src = `
backend test
  http-request track-sc0 src
`
const backend_httprequesttracksc1src = `
backend test
  http-request track-sc1 src
`
const backend_httprequesttracksc2src = `
backend test
  http-request track-sc2 src
`
const backend_httprequesttracksc5src = `
backend test
  http-request track-sc5 src
`
const backend_httprequesttracksc5srctableatabl = `
backend test
  http-request track-sc5 src table a_table
`
const backend_httprequesttracksc5srctableatabl_ = `
backend test
  http-request track-sc5 src table a_table if some_cond
`
const backend_httprequesttracksc5srcifsomecond = `
backend test
  http-request track-sc5 src if some_cond
`
const backend_httprequestunsetvarreqmyvar = `
backend test
  http-request unset-var(req.my_var)
`
const backend_httprequestunsetvarreqmyvarifFAL = `
backend test
  http-request unset-var(req.my_var) if FALSE
`
const backend_httprequestwaitforbodytime20s = `
backend test
  http-request wait-for-body time 20s
`
const backend_httprequestwaitforbodytime20sifT = `
backend test
  http-request wait-for-body time 20s if TRUE
`
const backend_httprequestwaitforbodytime20satl = `
backend test
  http-request wait-for-body time 20s at-least 100k
`
const backend_httprequestwaitforbodytime20satl_ = `
backend test
  http-request wait-for-body time 20s at-least 100k if TRUE
`
const backend_httprequestwaitforhandshake = `
backend test
  http-request wait-for-handshake
`
const backend_httprequestwaitforhandshakeifFAL = `
backend test
  http-request wait-for-handshake if FALSE
`
const backend_httprequestdoresolvetxnmyipmydns = `
backend test
  http-request do-resolve(txn.myip,mydns) hdr(Host),lower
`
const backend_httprequestdoresolvetxnmyipmydns_ = `
backend test
  http-request do-resolve(txn.myip,mydns) hdr(Host),lower if { var(txn.myip) -m found }
`
const backend_httprequestdoresolvetxnmyipmydns__ = `
backend test
  http-request do-resolve(txn.myip,mydns) hdr(Host),lower unless { var(txn.myip) -m found }
`
const backend_httprequestdoresolvetxnmyipmydns___ = `
backend test
  http-request do-resolve(txn.myip,mydns,ipv4) hdr(Host),lower
`
const backend_httprequestdoresolvetxnmyipmydns____ = `
backend test
  http-request do-resolve(txn.myip,mydns,ipv6) hdr(Host),lower
`
const backend_httprequestsetdstvartxnmyip = `
backend test
  http-request set-dst var(txn.myip)
`
const backend_httprequestsetdstvartxnmyipifvar = `
backend test
  http-request set-dst var(txn.myip) if { var(txn.myip) -m found }
`
const backend_httprequestsetdstvartxnmyipunles = `
backend test
  http-request set-dst var(txn.myip) unless { var(txn.myip) -m found }
`
const backend_httprequestsetdstporthdrxport = `
backend test
  http-request set-dst-port hdr(x-port)
`
const backend_httprequestsetdstporthdrxportifv = `
backend test
  http-request set-dst-port hdr(x-port) if { var(txn.myip) -m found }
`
const backend_httprequestsetdstporthdrxportunl = `
backend test
  http-request set-dst-port hdr(x-port) unless { var(txn.myip) -m found }
`
const backend_httprequestsetdstportint4000 = `
backend test
  http-request set-dst-port int(4000)
`
const backend_httprequestreturnstatus400defaul = `
backend test
  http-request return status 400 default-errorfiles if { var(txn.myip) -m found }
`
const backend_httprequestreturnstatus400errorf = `
backend test
  http-request return status 400 errorfile /my/fancy/errorfile if { var(txn.myip) -m found }
`
const backend_httprequestreturnstatus400errorf_ = `
backend test
  http-request return status 400 errorfiles myerror if { var(txn.myip) -m found }
`
const backend_httprequestredirectlocationfileh = `
backend test
  http-request redirect location /file.html if { var(txn.routecookie) -m found } !{ var(txn.pod),nbsrv -m found }:1]
`
const backend_httprequestsetbandwidthlimitmyli = `
backend test
  http-request set-bandwidth-limit my-limit
`
const backend_httprequestsetbandwidthlimitmyli_ = `
backend test
  http-request set-bandwidth-limit my-limit limit 1m period 10s
`
const backend_httprequestsetbandwidthlimitmyli__ = `
backend test
  http-request set-bandwidth-limit my-limit period 10s
`
const backend_httprequestsetbandwidthlimitmyli___ = `
backend test
  http-request set-bandwidth-limit my-limit limit 1m
`
const backend_httprequestaddheaderAuthorizatio = `
backend test
  http-request add-header Authorization Basic\ eC1oYXByb3h5LXJlY3J1aXRzOlBlb3BsZSB3aG8gZGVjb2RlIG1lc3NhZ2VzIG9mdGVuIGxvdmUgd29ya2luZyBhdCBIQVByb3h5LiBEbyBub3QgYmUgc2h5LCBjb250YWN0IHVz
`
const backend_httprequestaddheaderAuthorisatio = `
backend test
  http-request add-header Authorisation "Basic eC1oYXByb3h5LXJlY3J1aXRzOlBlb3BsZSB3aG8gZGVjb2RlIG1lc3NhZ2VzIG9mdGVuIGxvdmUgd29ya2luZyBhdCBIQVByb3h5LiBEbyBub3QgYmUgc2h5LCBjb250YWN0IHVz"
`
const backend_httprequestreturnstatus200conten = `
backend test
  http-request return status 200 content-type "text/plain" string "My content" if { var(txn.myip) -m found }
`
const backend_httprequestreturnstatus200conten_ = `
backend test
  http-request return status 200 content-type "text/plain" string "My content" unless { var(txn.myip) -m found }
`
const backend_httprequestreturncontenttypetext = `
backend test
  http-request return content-type "text/plain" string "My content" if { var(txn.myip) -m found }
`
const backend_httprequestreturncontenttypetext_ = `
backend test
  http-request return content-type 'text/plain' string 'My content' if { var(txn.myip) -m found }
`
const backend_httprequestreturncontenttypetext__ = `
backend test
  http-request return content-type "text/plain" lf-string "Hello, you are: %[src]" if { var(txn.myip) -m found }
`
const backend_httprequestreturncontenttypetext___ = `
backend test
  http-request return content-type "text/plain" file /my/fancy/response/file if { var(txn.myip) -m found }
`
const backend_httprequestreturncontenttypetext____ = `
backend test
  http-request return content-type "text/plain" lf-file /my/fancy/lof/format/response/file if { var(txn.myip) -m found }
`
const backend_httprequestreturncontenttypetext_____ = `
backend test
  http-request return content-type "text/plain" string "My content" hdr X-value value if { var(txn.myip) -m found }
`
const backend_httprequestreturncontenttypetext______ = `
backend test
  http-request return content-type "text/plain" string "My content" hdr X-value x-value hdr Y-value y-value if { var(txn.myip) -m found }
`
const backend_httprequestreturncontenttypetext_______ = `
backend test
  http-request return content-type "text/plain" lf-string "Hello, you are: %[src]"
`
const backend_httprequestredirectlocationfileh_ = `
backend test
  http-request redirect location /file.html if { var(txn.routecookie) "ROUTEMP" }:1
`
const backend_httpresponsesetmapmaplstsrcreshd = `
backend test
  http-response set-map(map.lst) %[src] %[res.hdr(X-Value)] if value
`
const backend_httpresponsesetmapmaplstsrcreshd_ = `
backend test
  http-response set-map(map.lst) %[src] %[res.hdr(X-Value)]
`
const backend_httpresponseaddaclmaplstsrc = `
backend test
  http-response add-acl(map.lst) [src]
`
const backend_httpresponseaddheaderXvaluevalue = `
backend test
  http-response add-header X-value value
`
const backend_httpresponsedelaclmaplstsrc = `
backend test
  http-response del-acl(map.lst) [src]
`
const backend_httpresponseallow = `
backend test
  http-response allow
`
const backend_httpresponsecachestorecachename = `
backend test
  http-response cache-store cache-name
`
const backend_httpresponsecachestorecachenamei = `
backend test
  http-response cache-store cache-name if FALSE
`
const backend_httpresponsedelheaderXvalue = `
backend test
  http-response del-header X-value
`
const backend_httpresponsedelmapmaplstsrcifval = `
backend test
  http-response del-map(map.lst) %[src] if ! value
`
const backend_httpresponsedelmapmaplstsrc = `
backend test
  http-response del-map(map.lst) %[src]
`
const backend_httpresponsedeny = `
backend test
  http-response deny
`
const backend_httpresponsedenydenystatus400 = `
backend test
  http-response deny deny_status 400
`
const backend_httpresponsedenyifTRUE = `
backend test
  http-response deny if TRUE
`
const backend_httpresponsedenydenystatus400ifT = `
backend test
  http-response deny deny_status 400 if TRUE
`
const backend_httpresponsedenydenystatus400con = `
backend test
  http-response deny deny_status 400 content-type application/json if TRUE
`
const backend_httpresponsedenydenystatus400con_ = `
backend test
  http-response deny deny_status 400 content-type application/json
`
const backend_httpresponsedenydenystatus400con__ = `
backend test
  http-response deny deny_status 400 content-type application/json default-errorfiles
`
const backend_httpresponsedenydenystatus400con___ = `
backend test
  http-response deny deny_status 400 content-type application/json errorfile errors
`
const backend_httpresponsedenydenystatus400con____ = `
backend test
  http-response deny deny_status 400 content-type application/json string error if TRUE
`
const backend_httpresponsedenydenystatus400con_____ = `
backend test
  http-response deny deny_status 400 content-type application/json lf-string error hdr host google.com if TRUE
`
const backend_httpresponsedenydenystatus400con______ = `
backend test
  http-response deny deny_status 400 content-type application/json file /var/errors.file
`
const backend_httpresponsedenydenystatus400con_______ = `
backend test
  http-response deny deny_status 400 content-type application/json lf-file /var/errors.file
`
const backend_httpresponsedenydenystatus400con________ = `
backend test
  http-response deny deny_status 400 content-type application/json string error hdr host google.com if TRUE
`
const backend_httpresponsedenydenystatus400con_________ = `
backend test
  http-response deny deny_status 400 content-type application/json string error hdr host google.com hdr x-value bla if TRUE
`
const backend_httpresponsedenydenystatus400con__________ = `
backend test
  http-response deny deny_status 400 content-type application/json string error hdr host google.com hdr x-value bla
`
const backend_httpresponseluafoo = `
backend test
  http-response lua.foo
`
const backend_httpresponseluafooifFALSE = `
backend test
  http-response lua.foo if FALSE
`
const backend_httpresponseluafooparam = `
backend test
  http-response lua.foo param
`
const backend_httpresponseluafooparamparam2 = `
backend test
  http-response lua.foo param param2
`
const backend_httpresponseredirectprefixhttpsm = `
backend test
  http-response redirect prefix https://mysite.com
`
const backend_httpresponsereplaceheaderUserage = `
backend test
  http-response replace-header User-agent curl foo
`
const backend_httpresponsereplacevalueXForward = `
backend test
  http-response replace-value X-Forwarded-For ^192.168.(.*)$ 172.16.1
`
const backend_httpresponsereturnstatus400defau = `
backend test
  http-response return status 400 default-errorfiles if { var(txn.myip) -m found }
`
const backend_httpresponsereturnstatus400error = `
backend test
  http-response return status 400 errorfile /my/fancy/errorfile if { var(txn.myip) -m found }
`
const backend_httpresponsereturnstatus400error_ = `
backend test
  http-response return status 400 errorfiles myerror if { var(txn.myip) -m found }
`
const backend_httpresponsescaddgpc121 = `
backend test
  http-response sc-add-gpc(1,2) 1
`
const backend_httpresponsescaddgpc121ifiserror = `
backend test
  http-response sc-add-gpc(1,2) 1 if is-error
`
const backend_httpresponsescincgpc12 = `
backend test
  http-response sc-inc-gpc(1,2)
`
const backend_httpresponsescincgpc12ifFALSE = `
backend test
  http-response sc-inc-gpc(1,2) if FALSE
`
const backend_httpresponsescincgpc01 = `
backend test
  http-response sc-inc-gpc0(1)
`
const backend_httpresponsescincgpc01ifFALSE = `
backend test
  http-response sc-inc-gpc0(1) if FALSE
`
const backend_httpresponsescincgpc11 = `
backend test
  http-response sc-inc-gpc1(1)
`
const backend_httpresponsescincgpc11ifFALSE = `
backend test
  http-response sc-inc-gpc1(1) if FALSE
`
const backend_httpresponsescsetgpt12hdrHostlow = `
backend test
  http-response sc-set-gpt(1,2) hdr(Host),lower if FALSE
`
const backend_httpresponsescsetgpt01hdrHostlow = `
backend test
  http-response sc-set-gpt0(1) hdr(Host),lower
`
const backend_httpresponsescsetgpt0110 = `
backend test
  http-response sc-set-gpt0(1) 10
`
const backend_httpresponsescsetgpt01hdrHostlow_ = `
backend test
  http-response sc-set-gpt0(1) hdr(Host),lower if FALSE
`
const backend_httpresponsesendspoegroupengineg = `
backend test
  http-response send-spoe-group engine group
`
const backend_httpresponsesetheaderXvaluevalue = `
backend test
  http-response set-header X-value value
`
const backend_httpresponsesetloglevelsilent = `
backend test
  http-response set-log-level silent
`
const backend_httpresponsesetmark20 = `
backend test
  http-response set-mark 20
`
const backend_httpresponsesetmark0x1Ab = `
backend test
  http-response set-mark 0x1Ab
`
const backend_httpresponsesetnice0 = `
backend test
  http-response set-nice 0
`
const backend_httpresponsesetnice0ifFALSE = `
backend test
  http-response set-nice 0 if FALSE
`
const backend_httpresponsesetstatus503 = `
backend test
  http-response set-status 503
`
const backend_httpresponsesettimeoutserver20 = `
backend test
  http-response set-timeout server 20
`
const backend_httpresponsesettimeouttunnel20 = `
backend test
  http-response set-timeout tunnel 20
`
const backend_httpresponsesettimeouttunnel20si = `
backend test
  http-response set-timeout tunnel 20s if TRUE
`
const backend_httpresponsesettimeoutserver20si = `
backend test
  http-response set-timeout server 20s if TRUE
`
const backend_httpresponsesettimeoutclient20 = `
backend test
  http-response set-timeout client 20
`
const backend_httpresponsesettimeoutclient20si = `
backend test
  http-response set-timeout client 20s if TRUE
`
const backend_httpresponsesettos0ifFALSE = `
backend test
  http-response set-tos 0 if FALSE
`
const backend_httpresponsesettos0 = `
backend test
  http-response set-tos 0
`
const backend_httpresponsesetvarreqmyvarresfhd = `
backend test
  http-response set-var(req.my_var) res.fhdr(user-agent),lower
`
const backend_httpresponsesetvarfmtreqmyvarres = `
backend test
  http-response set-var-fmt(req.my_var) res.fhdr(user-agent),lower
`
const backend_httpresponsesilentdrop = `
backend test
  http-response silent-drop
`
const backend_httpresponsesilentdropifFALSE = `
backend test
  http-response silent-drop if FALSE
`
const backend_httpresponsesilentdroprstttl1 = `
backend test
  http-response silent-drop rst-ttl 1
`
const backend_httpresponsesilentdroprstttl1ifs = `
backend test
  http-response silent-drop rst-ttl 1 if { src,table_http_req_rate(ratelimits.agg),sub(txn.rate_limit) ge 1000 }
`
const backend_httpresponseunsetvarreqmyvar = `
backend test
  http-response unset-var(req.my_var)
`
const backend_httpresponseunsetvarreqmyvarifFA = `
backend test
  http-response unset-var(req.my_var) if FALSE
`
const backend_httpresponsetracksc0srcifFALSE = `
backend test
  http-response track-sc0 src if FALSE
`
const backend_httpresponsetracksc0srctabletrif = `
backend test
  http-response track-sc0 src table tr if FALSE
`
const backend_httpresponsetracksc0src = `
backend test
  http-response track-sc0 src
`
const backend_httpresponsetracksc1srcifFALSE = `
backend test
  http-response track-sc1 src if FALSE
`
const backend_httpresponsetracksc1srctabletrif = `
backend test
  http-response track-sc1 src table tr if FALSE
`
const backend_httpresponsetracksc1src = `
backend test
  http-response track-sc1 src
`
const backend_httpresponsetracksc2srcifFALSE = `
backend test
  http-response track-sc2 src if FALSE
`
const backend_httpresponsetracksc2srctabletrif = `
backend test
  http-response track-sc2 src table tr if FALSE
`
const backend_httpresponsetracksc2src = `
backend test
  http-response track-sc2 src
`
const backend_httpresponsetracksc5src = `
backend test
  http-response track-sc5 src
`
const backend_httpresponsetracksc5srctableatab = `
backend test
  http-response track-sc5 src table a_table
`
const backend_httpresponsetracksc5srctableatab_ = `
backend test
  http-response track-sc5 src table a_table if some_cond
`
const backend_httpresponsetracksc5srcifsomecon = `
backend test
  http-response track-sc5 src if some_cond
`
const backend_httpresponsestrictmodeon = `
backend test
  http-response strict-mode on
`
const backend_httpresponsestrictmodeonifFALSE = `
backend test
  http-response strict-mode on if FALSE
`
const backend_httpresponsewaitforbodytime20s = `
backend test
  http-response wait-for-body time 20s
`
const backend_httpresponsewaitforbodytime20sif = `
backend test
  http-response wait-for-body time 20s if TRUE
`
const backend_httpresponsewaitforbodytime20sat = `
backend test
  http-response wait-for-body time 20s at-least 100k
`
const backend_httpresponsewaitforbodytime20sat_ = `
backend test
  http-response wait-for-body time 20s at-least 100k if TRUE
`
const backend_httpresponsesetbandwidthlimitmyl = `
backend test
  http-response set-bandwidth-limit my-limit
`
const backend_httpresponsesetbandwidthlimitmyl_ = `
backend test
  http-response set-bandwidth-limit my-limit limit 1m period 10s
`
const backend_httpresponsesetbandwidthlimitmyl__ = `
backend test
  http-response set-bandwidth-limit my-limit period 10s
`
const backend_httpresponsesetbandwidthlimitmyl___ = `
backend test
  http-response set-bandwidth-limit my-limit limit 1m
`
const backend_httpresponsereturnstatus200conte = `
backend test
  http-response return status 200 content-type "text/plain" string "My content" if { var(txn.myip) -m found }
`
const backend_httpresponsereturnstatus200conte_ = `
backend test
  http-response return status 200 content-type "text/plain" string "My content" unless { var(txn.myip) -m found }
`
const backend_httpresponsereturncontenttypetex = `
backend test
  http-response return content-type "text/plain" string "My content" if { var(txn.myip) -m found }
`
const backend_httpresponsereturncontenttypetex_ = `
backend test
  http-response return content-type 'text/plain' string 'My content' if { var(txn.myip) -m found }
`
const backend_httpresponsereturncontenttypetex__ = `
backend test
  http-response return content-type "text/plain" lf-string "Hello, you are: %[src]" if { var(txn.myip) -m found }
`
const backend_httpresponsereturncontenttypetex___ = `
backend test
  http-response return content-type "text/plain" file /my/fancy/response/file if { var(txn.myip) -m found }
`
const backend_httpresponsereturncontenttypetex____ = `
backend test
  http-response return content-type "text/plain" lf-file /my/fancy/lof/format/response/file if { var(txn.myip) -m found }
`
const backend_httpresponsereturncontenttypetex_____ = `
backend test
  http-response return content-type "text/plain" string "My content" hdr X-value value if { var(txn.myip) -m found }
`
const backend_httpresponsereturncontenttypetex______ = `
backend test
  http-response return content-type "text/plain" string "My content" hdr X-value x-value hdr Y-value y-value if { var(txn.myip) -m found }
`
const backend_httpresponsereturncontenttypetex_______ = `
backend test
  http-response return content-type "text/plain" lf-string "Hello, you are: %[src]"
`
const backend_httpafterresponseallow = `
backend test
  http-after-response allow
`
const backend_httpafterresponseallowifacl = `
backend test
  http-after-response allow if acl
`
const backend_httpafterresponsesetheaderStrict = `
backend test
  http-after-response set-header Strict-Transport-Security \"max-age=31536000\"
`
const backend_httpafterresponseaddheaderXHeade = `
backend test
  http-after-response add-header X-Header \"foo=bar\"
`
const backend_httpafterresponseaddheaderXHeade_ = `
backend test
  http-after-response add-header X-Header \"foo=bar\" if acl
`
const backend_httpafterresponseaddheaderXHeade__ = `
backend test
  http-after-response add-header X-Header \"foo=bar\" unless acl
`
const backend_httpafterresponseallowunlessacl = `
backend test
  http-after-response allow unless acl
`
const backend_httpafterresponsedelheaderXValue = `
backend test
  http-after-response del-header X-Value
`
const backend_httpafterresponsedelheaderXValue_ = `
backend test
  http-after-response del-header X-Value -m GET
`
const backend_httpafterresponsedelheaderXValue__ = `
backend test
  http-after-response del-header X-Value -m GET if acl
`
const backend_httpafterresponsedelheaderXValue___ = `
backend test
  http-after-response del-header X-Value -m GET unless acl
`
const backend_httpafterresponsereplaceheaderSe = `
backend test
  http-after-response replace-header Set-Cookie (C=[^;]*);(.*) \\1;ip=%bi;\\2
`
const backend_httpafterresponsereplaceheaderSe_ = `
backend test
  http-after-response replace-header Set-Cookie (C=[^;]*);(.*) \\1;ip=%bi;\\2 if acl
`
const backend_httpafterresponsereplacevalueCac = `
backend test
  http-after-response replace-value Cache-control ^public$ private
`
const backend_httpafterresponsereplacevalueCac_ = `
backend test
  http-after-response replace-value Cache-control ^public$ private if acl
`
const backend_httpafterresponsesetstatus431 = `
backend test
  http-after-response set-status 431
`
const backend_httpafterresponsesetstatus503rea = `
backend test
  http-after-response set-status 503 reason \"SlowDown\"
`
const backend_httpafterresponsesetstatus500rea = `
backend test
  http-after-response set-status 500 reason \"ServiceUnavailable\" if acl
`
const backend_httpafterresponsesetstatus500rea_ = `
backend test
  http-after-response set-status 500 reason \"ServiceUnavailable\" unless acl
`
const backend_httpafterresponsesetvarsesslastr = `
backend test
  http-after-response set-var(sess.last_redir) res.hdr(location)
`
const backend_httpafterresponsesetvarsesslastr_ = `
backend test
  http-after-response set-var(sess.last_redir) res.hdr(location) if acl
`
const backend_httpafterresponsesetvarsesslastr__ = `
backend test
  http-after-response set-var(sess.last_redir) res.hdr(location) unless acl
`
const backend_httpafterresponsestrictmodeon = `
backend test
  http-after-response strict-mode on
`
const backend_httpafterresponsestrictmodeoff = `
backend test
  http-after-response strict-mode off
`
const backend_httpafterresponseunsetvarsesslas = `
backend test
  http-after-response unset-var(sess.last_redir)
`
const backend_httpafterresponseunsetvarsesslas_ = `
backend test
  http-after-response unset-var(sess.last_redir) if acl
`
const backend_httpafterresponseunsetvarsesslas__ = `
backend test
  http-after-response unset-var(sess.last_redir) unless acl
`
const backend_httpafterresponsesetmapmaplstsrc = `
backend test
  http-after-response set-map(map.lst) %[src] %[res.hdr(X-Value)] if value
`
const backend_httpafterresponsesetmapmaplstsrc_ = `
backend test
  http-after-response set-map(map.lst) %[src] %[res.hdr(X-Value)]
`
const backend_httpafterresponsedelaclmaplstsrc = `
backend test
  http-after-response del-acl(map.lst) [src]
`
const backend_httpafterresponsedelmapmaplstsrc = `
backend test
  http-after-response del-map(map.lst) %[src] if ! value
`
const backend_httpafterresponsedelmapmaplstsrc_ = `
backend test
  http-after-response del-map(map.lst) %[src]
`
const backend_httpafterresponsescaddgpc121 = `
backend test
  http-after-response sc-add-gpc(1,2) 1
`
const backend_httpafterresponsescaddgpc121ifis = `
backend test
  http-after-response sc-add-gpc(1,2) 1 if is-error
`
const backend_httpafterresponsescincgpc12 = `
backend test
  http-after-response sc-inc-gpc(1,2)
`
const backend_httpafterresponsescincgpc12ifise = `
backend test
  http-after-response sc-inc-gpc(1,2) if is-error
`
const backend_httpafterresponsescincgpc01 = `
backend test
  http-after-response sc-inc-gpc0(1)
`
const backend_httpafterresponsescincgpc01ifFAL = `
backend test
  http-after-response sc-inc-gpc0(1) if FALSE
`
const backend_httpafterresponsescincgpc11 = `
backend test
  http-after-response sc-inc-gpc1(1)
`
const backend_httpafterresponsescincgpc11ifFAL = `
backend test
  http-after-response sc-inc-gpc1(1) if FALSE
`
const backend_httpafterresponsescsetgpt1210 = `
backend test
  http-after-response sc-set-gpt(1,2) 10
`
const backend_httpafterresponsescsetgpt01hdrHo = `
backend test
  http-after-response sc-set-gpt0(1) hdr(Host),lower
`
const backend_httpafterresponsescsetgpt0110 = `
backend test
  http-after-response sc-set-gpt0(1) 10
`
const backend_httpafterresponsescsetgpt01hdrHo_ = `
backend test
  http-after-response sc-set-gpt0(1) hdr(Host),lower if FALSE
`
const backend_httperrorstatus400 = `
backend test
  http-error status 400
`
const backend_httperrorstatus400defaulterrorfi = `
backend test
  http-error status 400 default-errorfiles
`
const backend_httperrorstatus400errorfilemyfan = `
backend test
  http-error status 400 errorfile /my/fancy/errorfile
`
const backend_httperrorstatus400errorfilesmyer = `
backend test
  http-error status 400 errorfiles myerror
`
const backend_httperrorstatus200contenttypetex = `
backend test
  http-error status 200 content-type "text/plain" string "My content"
`
const backend_httperrorstatus400contenttypetex = `
backend test
  http-error status 400 content-type "text/plain" lf-string "Hello, you are: %[src]"
`
const backend_httperrorstatus400contenttypetex_ = `
backend test
  http-error status 400 content-type "text/plain" file /my/fancy/response/file
`
const backend_httperrorstatus400contenttypetex__ = `
backend test
  http-error status 400 content-type "text/plain" lf-file /my/fancy/lof/format/response/file
`
const backend_httperrorstatus400contenttypetex___ = `
backend test
  http-error status 400 content-type "text/plain" string "My content" hdr X-value value
`
const backend_httperrorstatus400contenttypetex____ = `
backend test
  http-error status 400 content-type "text/plain" string "My content" hdr X-value x-value hdr Y-value y-value
`
const backend_httpcheckcommenttestcomment = `
backend test
  http-check comment testcomment
`
const backend_httpcheckconnect = `
backend test
  http-check connect
`
const backend_httpcheckconnectdefault = `
backend test
  http-check connect default
`
const backend_httpcheckconnectport8080 = `
backend test
  http-check connect port 8080
`
const backend_httpcheckconnectaddr8888 = `
backend test
  http-check connect addr 8.8.8.8
`
const backend_httpcheckconnectsendproxy = `
backend test
  http-check connect send-proxy
`
const backend_httpcheckconnectviasocks4 = `
backend test
  http-check connect via-socks4
`
const backend_httpcheckconnectssl = `
backend test
  http-check connect ssl
`
const backend_httpcheckconnectsnihaproxy1wteu = `
backend test
  http-check connect sni haproxy.1wt.eu
`
const backend_httpcheckconnectalpnh2http11 = `
backend test
  http-check connect alpn h2,http/1.1
`
const backend_httpcheckconnectprotoh2 = `
backend test
  http-check connect proto h2
`
const backend_httpcheckconnectlinger = `
backend test
  http-check connect linger
`
const backend_httpcheckconnectcommenttestcomme = `
backend test
  http-check connect comment testcomment
`
const backend_httpcheckconnectport443addr8888s = `
backend test
  http-check connect port 443 addr 8.8.8.8 send-proxy via-socks4 ssl sni haproxy.1wt.eu alpn h2,http/1.1 linger proto h2 comment testcomment
`
const backend_httpcheckdisableon404 = `
backend test
  http-check disable-on-404
`
const backend_httpcheckexpectstatus200 = `
backend test
  http-check expect status 200
`
const backend_httpcheckexpectminrecv50status20 = `
backend test
  http-check expect min-recv 50 status 200
`
const backend_httpcheckexpectcommenttestcommen = `
backend test
  http-check expect comment testcomment status 200
`
const backend_httpcheckexpectokstatusL7OKstatu = `
backend test
  http-check expect ok-status L7OK status 200
`
const backend_httpcheckexpecterrorstatusL7RSPs = `
backend test
  http-check expect error-status L7RSP status 200
`
const backend_httpcheckexpecttoutstatusL7TOUTs = `
backend test
  http-check expect tout-status L7TOUT status 200
`
const backend_httpcheckexpectonsuccessmylogfor = `
backend test
  http-check expect on-success \"my-log-format\" status 200
`
const backend_httpcheckexpectonerrormylogforma = `
backend test
  http-check expect on-error \"my-log-format\" status 200
`
const backend_httpcheckexpectstatuscode500stat = `
backend test
  http-check expect status-code \"500\" status 200
`
const backend_httpcheckexpectstringSQLError = `
backend test
  http-check expect ! string SQL\\ Error
`
const backend_httpcheckexpectrstatus5 = `
backend test
  http-check expect ! rstatus ^5
`
const backend_httpcheckexpectrstringtag09afhtm = `
backend test
  http-check expect rstring <!--tag:[0-9a-f]*--></html>
`
const backend_httpchecksendmethGET = `
backend test
  http-check send meth GET
`
const backend_httpchecksendurihealth = `
backend test
  http-check send uri /health
`
const backend_httpchecksendverHTTP11 = `
backend test
  http-check send ver \"HTTP/1.1\"
`
const backend_httpchecksendcommenttestcomment = `
backend test
  http-check send comment testcomment
`
const backend_httpchecksendmethGETurihealthver = `
backend test
  http-check send meth GET uri /health ver \"HTTP/1.1\" hdr Host example.com hdr Accept-Encoding gzip body '{\"key\":\"value\"}'
`
const backend_httpchecksendurilfmylogformatbod = `
backend test
  http-check send uri-lf my-log-format body-lf 'my-log-format'
`
const backend_httpchecksendstate = `
backend test
  http-check send-state
`
const backend_httpchecksetvarcheckportint1234 = `
backend test
  http-check set-var(check.port) int(1234)
`
const backend_httpchecksetvarfmtcheckportint12 = `
backend test
  http-check set-var-fmt(check.port) int(1234)
`
const backend_httpcheckunsetvartxnfrom = `
backend test
  http-check unset-var(txn.from)
`
const backend_tcpcheckcommenttestcomment = `
backend test
  tcp-check comment testcomment
`
const backend_tcpcheckconnect = `
backend test
  tcp-check connect
`
const backend_tcpcheckconnectport443ssl = `
backend test
  tcp-check connect port 443 ssl
`
const backend_tcpcheckconnectport110linger = `
backend test
  tcp-check connect port 110 linger
`
const backend_tcpcheckconnectport143 = `
backend test
  tcp-check connect port 143
`
const backend_tcpcheckexpectstringPONG = `
backend test
  tcp-check expect string +PONG
`
const backend_tcpcheckexpectstringrolemaster = `
backend test
  tcp-check expect string role:master
`
const backend_tcpcheckexpectstringOK = `
backend test
  tcp-check expect string +OK
`
const backend_tcpchecksendlftestfmt = `
backend test
  tcp-check send-lf testfmt
`
const backend_tcpchecksendlftestfmtcommenttest = `
backend test
  tcp-check send-lf testfmt comment testcomment
`
const backend_tcpchecksendbinarytesthexstring = `
backend test
  tcp-check send-binary testhexstring
`
const backend_tcpchecksendbinarytesthexstringc = `
backend test
  tcp-check send-binary testhexstring comment testcomment
`
const backend_tcpchecksendbinarylftesthexfmt = `
backend test
  tcp-check send-binary-lf testhexfmt
`
const backend_tcpchecksendbinarylftesthexfmtco = `
backend test
  tcp-check send-binary-lf testhexfmt comment testcomment
`
const backend_tcpchecksetvarcheckportint1234 = `
backend test
  tcp-check set-var(check.port) int(1234)
`
const backend_tcpcheckexpectstringOKPOP3ready = `
backend test
  tcp-check expect string +OK\ POP3\ ready
`
const backend_tcpcheckexpectstringOKIMAP4ready = `
backend test
  tcp-check expect string *\ OK\ IMAP4\ ready
`
const backend_tcpchecksendPINGrn = `
backend test
  tcp-check send PING\r\n
`
const backend_tcpchecksendPINGrncommenttestcom = `
backend test
  tcp-check send PING\r\n comment testcomment
`
const backend_tcpchecksendQUITrn = `
backend test
  tcp-check send QUIT\r\n
`
const backend_tcpchecksendQUITrncommenttestcom = `
backend test
  tcp-check send QUIT\r\n comment testcomment
`
const backend_tcpchecksendinforeplicationrn = `
backend test
  tcp-check send info\ replication\r\n
`
const backend_tcpchecksetvarfmtchecknameH = `
backend test
  tcp-check set-var-fmt(check.name) "%H"
`
const backend_tcpchecksetvarfmttxnfromaddrsrcs = `
backend test
  tcp-check set-var-fmt(txn.from) "addr=%[src]:%[src_port]"
`
const backend_tcpcheckunsetvartxnfrom = `
backend test
  tcp-check unset-var(txn.from)
`
const backend_tcprequestcontentaccept = `
backend test
  tcp-request content accept
`
const backend_tcprequestcontentacceptifHTTP = `
backend test
  tcp-request content accept if !HTTP
`
const backend_tcprequestcontentreject = `
backend test
  tcp-request content reject
`
const backend_tcprequestcontentrejectifHTTP = `
backend test
  tcp-request content reject if !HTTP
`
const backend_tcprequestcontentcapturereqpaylo = `
backend test
  tcp-request content capture req.payload(0,6) len 6
`
const backend_tcprequestcontentcapturereqpaylo_ = `
backend test
  tcp-request content capture req.payload(0,6) len 6 if !HTTP
`
const backend_tcprequestcontentdoresolvetxnmyi = `
backend test
  tcp-request content do-resolve(txn.myip,mydns,ipv6) capture.req.hdr(0),lower
`
const backend_tcprequestcontentdoresolvetxnmyi_ = `
backend test
  tcp-request content do-resolve(txn.myip,mydns) capture.req.hdr(0),lower
`
const backend_tcprequestcontentsetpriorityclas = `
backend test
  tcp-request content set-priority-class int(1)
`
const backend_tcprequestcontentsetpriorityclas_ = `
backend test
  tcp-request content set-priority-class int(1) if some_check
`
const backend_tcprequestcontentsetpriorityoffs = `
backend test
  tcp-request content set-priority-offset int(10)
`
const backend_tcprequestcontentsetpriorityoffs_ = `
backend test
  tcp-request content set-priority-offset int(10) if some_check
`
const backend_tcprequestcontenttracksc0src = `
backend test
  tcp-request content track-sc0 src
`
const backend_tcprequestcontenttracksc0srcifso = `
backend test
  tcp-request content track-sc0 src if some_check
`
const backend_tcprequestcontenttracksc1src = `
backend test
  tcp-request content track-sc1 src
`
const backend_tcprequestcontenttracksc1srcifso = `
backend test
  tcp-request content track-sc1 src if some_check
`
const backend_tcprequestcontenttracksc2src = `
backend test
  tcp-request content track-sc2 src
`
const backend_tcprequestcontenttracksc2srcifso = `
backend test
  tcp-request content track-sc2 src if some_check
`
const backend_tcprequestcontenttracksc0srctabl = `
backend test
  tcp-request content track-sc0 src table foo
`
const backend_tcprequestcontenttracksc0srctabl_ = `
backend test
  tcp-request content track-sc0 src table foo if some_check
`
const backend_tcprequestcontenttracksc1srctabl = `
backend test
  tcp-request content track-sc1 src table foo
`
const backend_tcprequestcontenttracksc1srctabl_ = `
backend test
  tcp-request content track-sc1 src table foo if some_check
`
const backend_tcprequestcontenttracksc2srctabl = `
backend test
  tcp-request content track-sc2 src table foo
`
const backend_tcprequestcontenttracksc2srctabl_ = `
backend test
  tcp-request content track-sc2 src table foo if some_check
`
const backend_tcprequestcontenttracksc5src = `
backend test
  tcp-request content track-sc5 src
`
const backend_tcprequestcontenttracksc5srcifso = `
backend test
  tcp-request content track-sc5 src if some_check
`
const backend_tcprequestcontenttracksc5srctabl = `
backend test
  tcp-request content track-sc5 src table foo
`
const backend_tcprequestcontenttracksc5srctabl_ = `
backend test
  tcp-request content track-sc5 src table foo if some_check
`
const backend_tcprequestcontentscincgpc12 = `
backend test
  tcp-request content sc-inc-gpc(1,2)
`
const backend_tcprequestcontentscincgpc12ifise = `
backend test
  tcp-request content sc-inc-gpc(1,2) if is-error
`
const backend_tcprequestcontentscincgpc02 = `
backend test
  tcp-request content sc-inc-gpc0(2)
`
const backend_tcprequestcontentscincgpc02ifise = `
backend test
  tcp-request content sc-inc-gpc0(2) if is-error
`
const backend_tcprequestcontentscincgpc12_ = `
backend test
  tcp-request content sc-inc-gpc1(2)
`
const backend_tcprequestcontentscincgpc12ifise_ = `
backend test
  tcp-request content sc-inc-gpc1(2) if is-error
`
const backend_tcprequestcontentscsetgptx91337i = `
backend test
  tcp-request content sc-set-gpt(x,9) 1337 if exceeds_limit
`
const backend_tcprequestcontentscsetgpt001337 = `
backend test
  tcp-request content sc-set-gpt0(0) 1337
`
const backend_tcprequestcontentscsetgpt001337i = `
backend test
  tcp-request content sc-set-gpt0(0) 1337 if exceeds_limit
`
const backend_tcprequestcontentscaddgpc121 = `
backend test
  tcp-request content sc-add-gpc(1,2) 1
`
const backend_tcprequestcontentscaddgpc121ifis = `
backend test
  tcp-request content sc-add-gpc(1,2) 1 if is-error
`
const backend_tcprequestcontentsetdstipv410001 = `
backend test
  tcp-request content set-dst ipv4(10.0.0.1)
`
const backend_tcprequestcontentsetvarsesssrcsr = `
backend test
  tcp-request content set-var(sess.src) src
`
const backend_tcprequestcontentsetvarsessdnssl = `
backend test
  tcp-request content set-var(sess.dn) ssl_c_s_dn
`
const backend_tcprequestcontentsetvarfmtsesssr = `
backend test
  tcp-request content set-var-fmt(sess.src) src
`
const backend_tcprequestcontentsetvarfmtsessdn = `
backend test
  tcp-request content set-var-fmt(sess.dn) ssl_c_s_dn
`
const backend_tcprequestcontentunsetvarsesssrc = `
backend test
  tcp-request content unset-var(sess.src)
`
const backend_tcprequestcontentunsetvarsessdn = `
backend test
  tcp-request content unset-var(sess.dn)
`
const backend_tcprequestcontentsilentdrop = `
backend test
  tcp-request content silent-drop
`
const backend_tcprequestcontentsilentdropifHTT = `
backend test
  tcp-request content silent-drop if !HTTP
`
const backend_tcprequestcontentsilentdroprsttt = `
backend test
  tcp-request content silent-drop rst-ttl 1
`
const backend_tcprequestcontentsilentdroprsttt_ = `
backend test
  tcp-request content silent-drop rst-ttl 1 if { src,table_http_req_rate(ratelimits.agg),sub(txn.rate_limit) ge 1000 }
`
const backend_tcprequestcontentsendspoegroupen = `
backend test
  tcp-request content send-spoe-group engine group
`
const backend_tcprequestcontentuseserviceluade = `
backend test
  tcp-request content use-service lua.deny
`
const backend_tcprequestcontentuseserviceluade_ = `
backend test
  tcp-request content use-service lua.deny if !HTTP
`
const backend_tcprequestcontentluafoo = `
backend test
  tcp-request content lua.foo
`
const backend_tcprequestcontentluafooparamifHT = `
backend test
  tcp-request content lua.foo param if !HTTP
`
const backend_tcprequestcontentluafooparampara = `
backend test
  tcp-request content lua.foo param param1
`
const backend_tcprequestconnectionaccept = `
backend test
  tcp-request connection accept
`
const backend_tcprequestconnectionacceptifHTTP = `
backend test
  tcp-request connection accept if !HTTP
`
const backend_tcprequestconnectionreject = `
backend test
  tcp-request connection reject
`
const backend_tcprequestconnectionrejectifHTTP = `
backend test
  tcp-request connection reject if !HTTP
`
const backend_tcprequestconnectionexpectproxyl = `
backend test
  tcp-request connection expect-proxy layer4 if { src -f proxies.lst }
`
const backend_tcprequestconnectionexpectnetsca = `
backend test
  tcp-request connection expect-netscaler-cip layer4
`
const backend_tcprequestconnectionexpectnetsca_ = `
backend test
  tcp-request connection expect-netscaler-cip layer4 if TRUE
`
const backend_tcprequestconnectioncapturereqpa = `
backend test
  tcp-request connection capture req.payload(0,6) len 6
`
const backend_tcprequestconnectiontracksc0src = `
backend test
  tcp-request connection track-sc0 src
`
const backend_tcprequestconnectiontracksc0srci = `
backend test
  tcp-request connection track-sc0 src if some_check
`
const backend_tcprequestconnectiontracksc1src = `
backend test
  tcp-request connection track-sc1 src
`
const backend_tcprequestconnectiontracksc1srci = `
backend test
  tcp-request connection track-sc1 src if some_check
`
const backend_tcprequestconnectiontracksc2src = `
backend test
  tcp-request connection track-sc2 src
`
const backend_tcprequestconnectiontracksc2srci = `
backend test
  tcp-request connection track-sc2 src if some_check
`
const backend_tcprequestconnectiontracksc0srct = `
backend test
  tcp-request connection track-sc0 src table foo
`
const backend_tcprequestconnectiontracksc0srct_ = `
backend test
  tcp-request connection track-sc0 src table foo if some_check
`
const backend_tcprequestconnectiontracksc1srct = `
backend test
  tcp-request connection track-sc1 src table foo
`
const backend_tcprequestconnectiontracksc1srct_ = `
backend test
  tcp-request connection track-sc1 src table foo if some_check
`
const backend_tcprequestconnectiontracksc2srct = `
backend test
  tcp-request connection track-sc2 src table foo
`
const backend_tcprequestconnectiontracksc2srct_ = `
backend test
  tcp-request connection track-sc2 src table foo if some_check
`
const backend_tcprequestconnectiontracksc5src = `
backend test
  tcp-request connection track-sc5 src
`
const backend_tcprequestconnectiontracksc5srci = `
backend test
  tcp-request connection track-sc5 src if some_check
`
const backend_tcprequestconnectiontracksc5srct = `
backend test
  tcp-request connection track-sc5 src table foo
`
const backend_tcprequestconnectiontracksc5srct_ = `
backend test
  tcp-request connection track-sc5 src table foo if some_check
`
const backend_tcprequestconnectionscaddgpc121 = `
backend test
  tcp-request connection sc-add-gpc(1,2) 1
`
const backend_tcprequestconnectionscaddgpc121i = `
backend test
  tcp-request connection sc-add-gpc(1,2) 1 if is-error
`
const backend_tcprequestconnectionscincgpc12 = `
backend test
  tcp-request connection sc-inc-gpc(1,2)
`
const backend_tcprequestconnectionscincgpc12if = `
backend test
  tcp-request connection sc-inc-gpc(1,2) if is-error
`
const backend_tcprequestconnectionscincgpc02 = `
backend test
  tcp-request connection sc-inc-gpc0(2)
`
const backend_tcprequestconnectionscincgpc02if = `
backend test
  tcp-request connection sc-inc-gpc0(2) if is-error
`
const backend_tcprequestconnectionscincgpc12_ = `
backend test
  tcp-request connection sc-inc-gpc1(2)
`
const backend_tcprequestconnectionscincgpc12if_ = `
backend test
  tcp-request connection sc-inc-gpc1(2) if is-error
`
const backend_tcprequestconnectionscsetgptscx4 = `
backend test
  tcp-request connection sc-set-gpt(scx,44) 1337 if exceeds_limit
`
const backend_tcprequestconnectionscsetgpt0013 = `
backend test
  tcp-request connection sc-set-gpt0(0) 1337
`
const backend_tcprequestconnectionscsetgpt0013_ = `
backend test
  tcp-request connection sc-set-gpt0(0) 1337 if exceeds_limit
`
const backend_tcprequestconnectionsetsrcsrcipm = `
backend test
  tcp-request connection set-src src,ipmask(24)
`
const backend_tcprequestconnectionsetsrcsrcipm_ = `
backend test
  tcp-request connection set-src src,ipmask(24) if some_check
`
const backend_tcprequestconnectionsetsrchdrxfo = `
backend test
  tcp-request connection set-src hdr(x-forwarded-for)
`
const backend_tcprequestconnectionsetsrchdrxfo_ = `
backend test
  tcp-request connection set-src hdr(x-forwarded-for) if some_check
`
const backend_tcprequestconnectionsilentdrop = `
backend test
  tcp-request connection silent-drop
`
const backend_tcprequestconnectionsilentdropif = `
backend test
  tcp-request connection silent-drop if !HTTP
`
const backend_tcprequestconnectionsilentdroprs = `
backend test
  tcp-request connection silent-drop rst-ttl 1
`
const backend_tcprequestconnectionsilentdroprs_ = `
backend test
  tcp-request connection silent-drop rst-ttl 1 if { src,table_http_req_rate(ratelimits.agg),sub(txn.rate_limit) ge 1000 }
`
const backend_tcprequestconnectionluafoo = `
backend test
  tcp-request connection lua.foo
`
const backend_tcprequestconnectionluafooparami = `
backend test
  tcp-request connection lua.foo param if !HTTP
`
const backend_tcprequestconnectionluafooparamp = `
backend test
  tcp-request connection lua.foo param param1
`
const backend_tcprequestsessionaccept = `
backend test
  tcp-request session accept
`
const backend_tcprequestsessionacceptifHTTP = `
backend test
  tcp-request session accept if !HTTP
`
const backend_tcprequestsessionreject = `
backend test
  tcp-request session reject
`
const backend_tcprequestsessionrejectifHTTP = `
backend test
  tcp-request session reject if !HTTP
`
const backend_tcprequestsessiontracksc0src = `
backend test
  tcp-request session track-sc0 src
`
const backend_tcprequestsessiontracksc0srcifso = `
backend test
  tcp-request session track-sc0 src if some_check
`
const backend_tcprequestsessiontracksc1src = `
backend test
  tcp-request session track-sc1 src
`
const backend_tcprequestsessiontracksc1srcifso = `
backend test
  tcp-request session track-sc1 src if some_check
`
const backend_tcprequestsessiontracksc2src = `
backend test
  tcp-request session track-sc2 src
`
const backend_tcprequestsessiontracksc2srcifso = `
backend test
  tcp-request session track-sc2 src if some_check
`
const backend_tcprequestsessiontracksc0srctabl = `
backend test
  tcp-request session track-sc0 src table foo
`
const backend_tcprequestsessiontracksc0srctabl_ = `
backend test
  tcp-request session track-sc0 src table foo if some_check
`
const backend_tcprequestsessiontracksc1srctabl = `
backend test
  tcp-request session track-sc1 src table foo
`
const backend_tcprequestsessiontracksc1srctabl_ = `
backend test
  tcp-request session track-sc1 src table foo if some_check
`
const backend_tcprequestsessiontracksc2srctabl = `
backend test
  tcp-request session track-sc2 src table foo
`
const backend_tcprequestsessiontracksc2srctabl_ = `
backend test
  tcp-request session track-sc2 src table foo if some_check
`
const backend_tcprequestsessiontracksc5src = `
backend test
  tcp-request session track-sc5 src
`
const backend_tcprequestsessiontracksc5srcifso = `
backend test
  tcp-request session track-sc5 src if some_check
`
const backend_tcprequestsessiontracksc5srctabl = `
backend test
  tcp-request session track-sc5 src table foo
`
const backend_tcprequestsessiontracksc5srctabl_ = `
backend test
  tcp-request session track-sc5 src table foo if some_check
`
const backend_tcprequestsessionscaddgpc121 = `
backend test
  tcp-request session sc-add-gpc(1,2) 1
`
const backend_tcprequestsessionscaddgpc121ifis = `
backend test
  tcp-request session sc-add-gpc(1,2) 1 if is-error
`
const backend_tcprequestsessionscincgpc12 = `
backend test
  tcp-request session sc-inc-gpc(1,2)
`
const backend_tcprequestsessionscincgpc12ifise = `
backend test
  tcp-request session sc-inc-gpc(1,2) if is-error
`
const backend_tcprequestsessionscincgpc02 = `
backend test
  tcp-request session sc-inc-gpc0(2)
`
const backend_tcprequestsessionscincgpc02ifise = `
backend test
  tcp-request session sc-inc-gpc0(2) if is-error
`
const backend_tcprequestsessionscincgpc12_ = `
backend test
  tcp-request session sc-inc-gpc1(2)
`
const backend_tcprequestsessionscincgpc12ifise_ = `
backend test
  tcp-request session sc-inc-gpc1(2) if is-error
`
const backend_tcprequestsessionscsetgptsc51133 = `
backend test
  tcp-request session sc-set-gpt(sc5,1) 1337 if exceeds_limit
`
const backend_tcprequestsessionscsetgpt001337 = `
backend test
  tcp-request session sc-set-gpt0(0) 1337
`
const backend_tcprequestsessionscsetgpt001337i = `
backend test
  tcp-request session sc-set-gpt0(0) 1337 if exceeds_limit
`
const backend_tcprequestsessionsetvarsesssrcsr = `
backend test
  tcp-request session set-var(sess.src) src
`
const backend_tcprequestsessionsetvarsessdnssl = `
backend test
  tcp-request session set-var(sess.dn) ssl_c_s_dn
`
const backend_tcprequestsessionsetvarfmtsesssr = `
backend test
  tcp-request session set-var-fmt(sess.src) src
`
const backend_tcprequestsessionsetvarfmtsessdn = `
backend test
  tcp-request session set-var-fmt(sess.dn) ssl_c_s_dn
`
const backend_tcprequestsessionunsetvarsesssrc = `
backend test
  tcp-request session unset-var(sess.src)
`
const backend_tcprequestsessionunsetvarsessdn = `
backend test
  tcp-request session unset-var(sess.dn)
`
const backend_tcprequestsessionsilentdrop = `
backend test
  tcp-request session silent-drop
`
const backend_tcprequestsessionsilentdropifHTT = `
backend test
  tcp-request session silent-drop if !HTTP
`
const backend_tcprequestsessionsilentdroprsttt = `
backend test
  tcp-request session silent-drop rst-ttl 1
`
const backend_tcprequestsessionsilentdroprsttt_ = `
backend test
  tcp-request session silent-drop rst-ttl 1 if { src,table_http_req_rate(ratelimits.agg),sub(txn.rate_limit) ge 1000 }
`
const backend_tcprequestsessionattachsrvsrv1 = `
backend test
  tcp-request session attach-srv srv1
`
const backend_tcprequestsessionattachsrvsrv1na = `
backend test
  tcp-request session attach-srv srv1 name example.com
`
const backend_tcprequestsessionattachsrvsrv1na_ = `
backend test
  tcp-request session attach-srv srv1 name example.com if exceeds_limit
`
const backend_tcprequestcontentsetbandwidthlim = `
backend test
  tcp-request content set-bandwidth-limit my-limit
`
const backend_tcprequestcontentsetbandwidthlim_ = `
backend test
  tcp-request content set-bandwidth-limit my-limit limit 1m period 10s
`
const backend_tcprequestcontentsetbandwidthlim__ = `
backend test
  tcp-request content set-bandwidth-limit my-limit period 10s
`
const backend_tcprequestcontentsetbandwidthlim___ = `
backend test
  tcp-request content set-bandwidth-limit my-limit limit 1m
`
const backend_tcprequestcontentsetloglevelsile = `
backend test
  tcp-request content set-log-level silent
`
const backend_tcprequestcontentsetloglevelsile_ = `
backend test
  tcp-request content set-log-level silent if FALSE
`
const backend_tcprequestcontentsetmark20 = `
backend test
  tcp-request content set-mark 20
`
const backend_tcprequestcontentsetmark0x1AbifF = `
backend test
  tcp-request content set-mark 0x1Ab if FALSE
`
const backend_tcprequestconnectionsetmark20 = `
backend test
  tcp-request connection set-mark 20
`
const backend_tcprequestconnectionsetmark0x1Ab = `
backend test
  tcp-request connection set-mark 0x1Ab if FALSE
`
const backend_tcprequestconnectionsetsrcporthd = `
backend test
  tcp-request connection set-src-port hdr(port)
`
const backend_tcprequestconnectionsetsrcporthd_ = `
backend test
  tcp-request connection set-src-port hdr(port) if FALSE
`
const backend_tcprequestcontentsetsrcporthdrpo = `
backend test
  tcp-request content set-src-port hdr(port)
`
const backend_tcprequestcontentsetsrcporthdrpo_ = `
backend test
  tcp-request content set-src-port hdr(port) if FALSE
`
const backend_tcprequestcontentsettos0ifFALSE = `
backend test
  tcp-request content set-tos 0 if FALSE
`
const backend_tcprequestcontentsettos0 = `
backend test
  tcp-request content set-tos 0
`
const backend_tcprequestconnectionsettos0ifFAL = `
backend test
  tcp-request connection set-tos 0 if FALSE
`
const backend_tcprequestconnectionsettos0 = `
backend test
  tcp-request connection set-tos 0
`
const backend_tcprequestconnectionsetvarfmttxn = `
backend test
  tcp-request connection set-var-fmt(txn.ip_port) %%[dst]:%%[dst_port]
`
const backend_tcprequestcontentsetnice0ifFALSE = `
backend test
  tcp-request content set-nice 0 if FALSE
`
const backend_tcprequestcontentsetnice0 = `
backend test
  tcp-request content set-nice 0
`
const backend_tcprequestcontentswitchmodehttp = `
backend test
  tcp-request content switch-mode http
`
const backend_tcprequestcontentswitchmodehttpi = `
backend test
  tcp-request content switch-mode http if FALSE
`
const backend_tcprequestcontentswitchmodehttpp = `
backend test
  tcp-request content switch-mode http proto my-proto
`
const backend_tcpresponsecontentluafoo = `
backend test
  tcp-response content lua.foo
`
const backend_tcpresponsecontentluafooparamifH = `
backend test
  tcp-response content lua.foo param if !HTTP
`
const backend_tcpresponsecontentluafooparampar = `
backend test
  tcp-response content lua.foo param param1
`
const backend_tcpresponsecontentsetdstdest = `
backend test
  tcp-response content set-dst dest
`
const backend_tcpresponsecontentunsetvarsessmy = `
backend test
  tcp-response content unset-var(sess.my_var)
`
const backend_tcpresponsecontentsetbandwidthli = `
backend test
  tcp-response content set-bandwidth-limit my-limit
`
const backend_tcpresponsecontentsetbandwidthli_ = `
backend test
  tcp-response content set-bandwidth-limit my-limit limit 1m period 10s
`
const backend_tcpresponsecontentsetbandwidthli__ = `
backend test
  tcp-response content set-bandwidth-limit my-limit period 10s
`
const backend_tcpresponsecontentsetbandwidthli___ = `
backend test
  tcp-response content set-bandwidth-limit my-limit limit 1m
`
const backend_tcpresponsecontentsetloglevelsil = `
backend test
  tcp-response content set-log-level silent
`
const backend_tcpresponsecontentsetloglevelsil_ = `
backend test
  tcp-response content set-log-level silent if FALSE
`
const backend_tcpresponsecontentsetmark20 = `
backend test
  tcp-response content set-mark 20
`
const backend_tcpresponsecontentsetmark0x1Abif = `
backend test
  tcp-response content set-mark 0x1Ab if FALSE
`
const backend_tcpresponsecontentsettos0ifFALSE = `
backend test
  tcp-response content set-tos 0 if FALSE
`
const backend_tcpresponsecontentsettos0 = `
backend test
  tcp-response content set-tos 0
`
const backend_tcpresponsecontentsetnice0ifFALS = `
backend test
  tcp-response content set-nice 0 if FALSE
`
const backend_tcpresponsecontentsetnice0 = `
backend test
  tcp-response content set-nice 0
`
const backend_tcpresponsecontentclose = `
backend test
  tcp-response content close
`
const backend_tcpresponsecontentcloseifHTTP = `
backend test
  tcp-response content close if !HTTP
`
const backend_tcpresponsecontentscincgpc12 = `
backend test
  tcp-response content sc-inc-gpc(1,2)
`
const backend_tcpresponsecontentscincgpc12ifis = `
backend test
  tcp-response content sc-inc-gpc(1,2) if is-error
`
const backend_tcpresponsecontentscincgpc02 = `
backend test
  tcp-response content sc-inc-gpc0(2)
`
const backend_tcpresponsecontentscincgpc02ifis = `
backend test
  tcp-response content sc-inc-gpc0(2) if is-error
`
const backend_tcpresponsecontentscincgpc12_ = `
backend test
  tcp-response content sc-inc-gpc1(2)
`
const backend_tcpresponsecontentscincgpc12ifis_ = `
backend test
  tcp-response content sc-inc-gpc1(2) if is-error
`
const backend_redirectprefixhttpwwwbarcomcode3 = `
backend test
  redirect prefix http://www.bar.com code 301 if { hdr(host) -i foo.com }
`
const backend_statsauthadmin1AdMiN123 = `
backend test
  stats auth admin1:AdMiN123
`
const backend_statsenable = `
backend test
  stats enable
`
const backend_statshideversion = `
backend test
  stats hide-version
`
const backend_statsshowlegends = `
backend test
  stats show-legends
`
const backend_statsshowmodules = `
backend test
  stats show-modules
`
const backend_statsmaxconn10 = `
backend test
  stats maxconn 10
`
const backend_statsrealmHAProxyStatistics = `
backend test
  stats realm HAProxy\\ Statistics
`
const backend_statsrefresh10s = `
backend test
  stats refresh 10s
`
const backend_statsscope = `
backend test
  stats scope .
`
const backend_statsshowdescMasternodeforEurope = `
backend test
  stats show-desc Master node for Europe, Asia, Africa
`
const backend_statsshownode = `
backend test
  stats show-node
`
const backend_statsshownodeEurope1 = `
backend test
  stats show-node Europe-1
`
const backend_statsuriadminstats = `
backend test
  stats uri /admin?stats
`
const backend_statsbindprocessall = `
backend test
  stats bind-process all
`
const backend_statsbindprocessodd = `
backend test
  stats bind-process odd
`
const backend_statsbindprocesseven = `
backend test
  stats bind-process even
`
const backend_statsbindprocess1234 = `
backend test
  stats bind-process 1 2 3 4
`
const backend_statsbindprocess14 = `
backend test
  stats bind-process 1-4
`
const backend_statshttprequestauthrealmHAProxy = `
backend test
  stats http-request auth realm HAProxy\\ Statistics
`
const backend_statshttprequestauthrealmHAProxy_ = `
backend test
  stats http-request auth realm HAProxy\\ Statistics if something
`
const backend_statshttprequestauthifsomething = `
backend test
  stats http-request auth if something
`
const backend_statshttprequestdenyunlesssometh = `
backend test
  stats http-request deny unless something
`
const backend_statshttprequestallow = `
backend test
  stats http-request allow
`
