---
swagger: "2.0"
info:
  title: HAProxy Data Plane API
  description: |
    API for editing and managing haproxy instances. Provides process information, configuration management,
    haproxy stats and logs.
  version: '3.1'
  contact:
    name: HAProxy Support
    url: https://my.haproxy.com/portal/cust/login
    email: support@haproxy.com
externalDocs:
  url: https://docs.haproxy.org/
  description: HAProxy Documentation
definitions:
  program:
    description: HAProxy program configuration
    example:
      command: spoa-mirror --runtime 0 --mirror-url http://test.local
      group: mygroupname
      name: mirror
      start-on-reload: enabled
      user: myusername
    properties:
      command:
        description: The command to be run, with flags and options.
        type: string
      group:
        description: The group to run the command as, if different than the HAProxy group.
        type: string
      name:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
        x-nullable: false
      start-on-reload:
        description: HAProxy stops and recreates child programs at reload.
        enum:
          - enabled
          - disabled
        type: string
      user:
        description: The user to run the command as, if different than the HAProxy user.
        type: string
    required:
      - name
      - command
    title: Program
    type: object
  programs:
    type: array
    items:
      $ref: "#/definitions/program"
  fcgiApp:
    allOf:
      - $ref: '#/definitions/fcgiAppBase'
      - properties:
          acl_list:
            $ref: '#/definitions/acls'
            x-go-name: AclList
        type: object
    description: App with all it's children resources
    type: object
    x-go-name: FCGIApp
  fcgiAppBase:
    description: HAProxy FastCGI application configuration
    properties:
      docroot:
        description: Defines the document root on the remote host. The parameter serves to build the default value of FastCGI parameters SCRIPT_FILENAME and PATH_TRANSLATED. It is a mandatory setting.
        type: string
      get_values:
        description: Enables or disables the retrieval of variables related to connection management.
        enum:
          - enabled
          - disabled
        type: string
      index:
        description: Defines the script name to append after a URI that ends with a slash ("/") to set the default value for the FastCGI parameter SCRIPT_NAME. It is an optional setting.
        type: string
      keep_conn:
        description: Tells the FastCGI application whether or not to keep the connection open after it sends a response. If disabled, the FastCGI application closes the connection after responding to this request.
        enum:
          - enabled
          - disabled
        type: string
      log_stderrs:
        items:
          $ref: '#/definitions/fcgiLogStderr'
          x-go-name: FCGIAppLogStderr
        type: array
        x-omitempty: true
      max_reqs:
        default: 1
        description: Defines the maximum number of concurrent requests this application can accept. If the FastCGI application retrieves the variable FCGI_MAX_REQS during connection establishment, it can override this option. Furthermore, if the application does not do multiplexing, it will ignore this option.
        minimum: 1
        type: integer
      mpxs_conns:
        description: Enables or disables the support of connection multiplexing. If the FastCGI application retrieves the variable FCGI_MPXS_CONNS during connection establishment, it can override this option.
        enum:
          - enabled
          - disabled
        type: string
      name:
        description: Declares a FastCGI application
        pattern: ^[^\s]+$
        type: string
        x-nullable: false
      pass_headers:
        items:
          $ref: '#/definitions/fcgiPassHeader'
          x-go-name: FCGIAppLogPassHeader
        type: array
        x-omitempty: true
      path_info:
        description: |-
          Defines a regular expression to extract the script-name and the path-info from the URI.
          Thus, <regex> must have two captures: the first to capture the script name, and the second to capture the path- info.
          If not defined, it does not perform matching on the URI, and does not fill the FastCGI parameters PATH_INFO and PATH_TRANSLATED.
        type: string
      set_params:
        items:
          $ref: '#/definitions/fcgiSetParam'
        type: array
        x-omitempty: true
    required:
      - name
      - docroot
    title: FCGI application base
    type: object
  fcgiApps:
    type: array
    items:
      $ref: "#/definitions/fcgiApp"
  fcgiSetParam:
    description: |-
      Sets a FastCGI parameter to pass to this application.
      Its value, defined by <format> can take a formatted string, the same as the log directive.
      Optionally, you can follow it with an ACL-based condition, in which case the FastCGI application evaluates it only if the condition is true.
    properties:
      cond:
        enum:
          - if
          - unless
        type: string
        x-display-name: Condition
      cond_test:
        type: string
        x-dependency:
          cond:
            required: true
        x-display-name: Condition Test
      format:
        type: string
      name:
        type: string
    type: object
  fcgiPassHeader:
    description: |-
      Specifies the name of a request header to pass to the FastCGI application.
      Optionally, you can follow it with an ACL-based condition, in which case the FastCGI application evaluates it only if the condition is true.
      Most request headers are already available to the FastCGI application with the prefix "HTTP".
      Thus, you only need this directive to pass headers that are purposefully omitted.
      Currently, the headers "Authorization", "Proxy-Authorization", and hop-by-hop headers are omitted.
      Note that the headers "Content-type" and "Content-length" never pass to the FastCGI application because they are already converted into parameters.
    properties:
      cond:
        enum:
          - if
          - unless
        type: string
        x-display-name: Condition
      cond_test:
        type: string
        x-dependency:
          cond:
            required: true
        x-display-name: Condition Test
      name:
        type: string
    type: object
  fcgiLogStderr:
    description: |-
      Enables logging of STDERR messages that the FastCGI application reports.
      It is an optional setting. By default, HAProxy Enterprise ignores STDERR messages.
    properties:
      address:
        type: string
      facility:
        title: Facility
        type: string
      format:
        title: Format
        type: string
      global:
        title: Global
        type: boolean
      len:
        title: Length
        type: integer
      level:
        title: Level
        type: string
        x-dependency:
          facility:
            required: true
      minlevel:
        title: Minimum level
        type: string
        x-dependency:
          facility:
            required: true
      sample:
        properties:
          ranges:
            title: Range
            type: string
          size:
            title: Size
            type: integer
        required:
          - ranges
          - size
        title: Sample
        type: object
    type: object
  bind_params:
    additionalProperties: false
    properties:
      accept_netscaler_cip:
        type: integer
      accept_proxy:
        type: boolean
      allow_0rtt:
        type: boolean
      alpn:
        pattern: ^[^\s]+$
        type: string
        x-display-name: ALPN Protocols
      backlog:
        type: string
      ca_ignore_err:
        type: string
        x-dependency:
          ssl:
            value: true
      ca_sign_file:
        type: string
        x-dependency:
          ssl:
            value: true
      ca_sign_pass:
        type: string
        x-dependency:
          ssl:
            value: true
        x-display-name: Passphrase
      ca_verify_file:
        type: string
        x-dependency:
          ca_file:
            value: true
      ciphers:
        type: string
        x-dependency:
          ssl:
            value: true
      ciphersuites:
        type: string
        x-dependency:
          ssl:
            value: true
      client_sigalgs:
        type: string
        x-dependency:
          ssl:
            value: true
      crl_file:
        type: string
        x-dependency:
          ssl:
            value: true
      crt_ignore_err:
        type: string
        x-dependency:
          ssl:
            value: true
      crt_list:
        type: string
        x-dependency:
          ssl:
            value: true
      curves:
        type: string
        x-dependency:
          ssl:
            value: true
      default_crt_list:
        items:
          pattern: ^[^\s]+$
          type: string
        type: array
        x-omitempty: true
      defer_accept:
        type: boolean
      ecdhe:
        type: string
        x-dependency:
          ssl:
            value: true
      expose_fd_listeners:
        type: boolean
      force_sslv3:
        description: This field is deprecated in favor of sslv3, and will be removed in a future release
        type: boolean
        x-deprecated: true
      force_tlsv10:
        description: This field is deprecated in favor of tlsv10, and will be removed in a future release
        type: boolean
        x-deprecated: true
      force_tlsv11:
        description: This field is deprecated in favor of tlsv11, and will be removed in a future release
        type: boolean
        x-deprecated: true
      force_tlsv12:
        description: This field is deprecated in favor of tlsv12, and will be removed in a future release
        type: boolean
        x-deprecated: true
      force_tlsv13:
        description: This field is deprecated in favor of tlsv13, and will be removed in a future release
        type: boolean
        x-deprecated: true
      generate_certificates:
        type: boolean
        x-dependency:
          ssl:
            value: true
      gid:
        type: integer
        x-display-name: Group ID
      group:
        type: string
        x-display-name: Group name
      guid_prefix:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
      id:
        type: string
        x-display-name: Socket ID
      interface:
        type: string
      level:
        enum:
          - user
          - operator
          - admin
        example: user
        type: string
      maxconn:
        example: 1234
        type: integer
      mode:
        type: string
      mss:
        type: string
      name:
        pattern: ^[^\s]+$
        type: string
        x-nullable: false
      namespace:
        example: app
        type: string
      nbconn:
        type: integer
        x-display-name: Number of connection
      nice:
        example: 1
        type: integer
      no_alpn:
        type: boolean
        x-dependency:
          ssl:
            value: true
      no_ca_names:
        type: boolean
        x-dependency:
          ssl:
            value: true
      no_sslv3:
        description: This field is deprecated in favor of sslv3, and will be removed in a future release
        type: boolean
        x-dependency:
          ssl:
            value: true
        x-deprecated: true
      no_tls_tickets:
        type: boolean
        x-dependency:
          ssl:
            value: true
      no_tlsv10:
        description: This field is deprecated in favor of tlsv10, and will be removed in a future release
        type: boolean
        x-dependency:
          ssl:
            value: true
        x-deprecated: true
      no_tlsv11:
        description: This field is deprecated in favor of tlsv11, and will be removed in a future release
        type: boolean
        x-dependency:
          ssl:
            value: true
        x-deprecated: true
      no_tlsv12:
        description: This field is deprecated in favor of tlsv12, and will be removed in a future release
        type: boolean
        x-dependency:
          ssl:
            value: true
        x-deprecated: true
      no_tlsv13:
        description: This field is deprecated in favor of tlsv13, and will be removed in a future release
        type: boolean
        x-dependency:
          ssl:
            value: true
        x-deprecated: true
      npn:
        type: string
      prefer_client_ciphers:
        type: boolean
      proto:
        type: string
        x-display-name: Protocol name
      quic-cc-algo:
        enum:
          - cubic
          - newreno
          - bbr
          - nocc
        type: string
      quic-force-retry:
        type: boolean
      quic-socket:
        enum:
          - connection
          - listener
        type: string
      quic_cc_algo_burst_size:
        maximum: 1024
        minimum: 0
        type: integer
        x-dependency:
          quic-cc-algo: null
        x-nullable: true
      quic_cc_algo_max_window:
        maximum: 4194304
        minimum: 10
        type: integer
        x-default-unit: k
        x-dependency:
          quic-cc-algo: null
        x-nullable: true
        x-size: true
      severity_output:
        enum:
          - none
          - number
          - string
        example: none
        type: string
        x-display-name: Format
      sigalgs:
        type: string
        x-dependency:
          ssl:
            value: true
      ssl:
        type: boolean
      ssl_cafile:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          ssl:
            value: true
        x-display-name: SSL CA File
      ssl_certificate:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          ssl:
            value: true
      ssl_max_ver:
        enum:
          - SSLv3
          - TLSv1.0
          - TLSv1.1
          - TLSv1.2
          - TLSv1.3
        type: string
      ssl_min_ver:
        enum:
          - SSLv3
          - TLSv1.0
          - TLSv1.1
          - TLSv1.2
          - TLSv1.3
        type: string
      sslv3:
        enum:
          - enabled
          - disabled
        type: string
        x-dependency:
          ssl:
            value: true
      strict_sni:
        type: boolean
        x-dependency:
          ssl:
            value: true
      tcp_user_timeout:
        type: integer
        x-nullable: true
      tfo:
        type: boolean
      thread:
        type: string
      tls_ticket_keys:
        type: string
      tlsv10:
        enum:
          - enabled
          - disabled
        type: string
        x-dependency:
          ssl:
            value: true
      tlsv11:
        enum:
          - enabled
          - disabled
        type: string
        x-dependency:
          ssl:
            value: true
      tlsv12:
        enum:
          - enabled
          - disabled
        type: string
        x-dependency:
          ssl:
            value: true
      tlsv13:
        enum:
          - enabled
          - disabled
        type: string
        x-dependency:
          ssl:
            value: true
      transparent:
        type: boolean
      uid:
        type: string
      user:
        type: string
      v4v6:
        type: boolean
      v6only:
        type: boolean
      verify:
        enum:
          - none
          - optional
          - required
        example: none
        type: string
        x-dependency:
          ssl:
            value: enabled
    type: object
  server_params:
    properties:
      agent-addr:
        pattern: ^[^\s]+$
        type: string
      agent-check:
        enum:
          - enabled
          - disabled
        type: string
        x-dependency:
          agent-port:
            required: true
      agent-inter:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      agent-port:
        maximum: 65535
        minimum: 1
        type: integer
        x-nullable: true
      agent-send:
        type: string
      allow_0rtt:
        type: boolean
      alpn:
        pattern: ^[^\s]+$
        type: string
        x-display-name: ALPN Protocols
      backup:
        enum:
          - enabled
          - disabled
        type: string
      check:
        enum:
          - enabled
          - disabled
        type: string
      check-send-proxy:
        enum:
          - enabled
          - disabled
        type: string
      check-sni:
        pattern: ^[^\s]+$
        type: string
      check-ssl:
        enum:
          - enabled
          - disabled
        type: string
      check_alpn:
        pattern: ^[^\s]+$
        type: string
        x-display-name: Protocols
      check_proto:
        pattern: ^[^\s]+$
        type: string
        x-display-name: Name
      check_via_socks4:
        enum:
          - enabled
          - disabled
        type: string
      ciphers:
        type: string
        x-dependency:
          ssl:
            value: enabled
      ciphersuites:
        type: string
        x-dependency:
          ssl:
            value: enabled
      client_sigalgs:
        type: string
        x-dependency:
          ssl:
            value: true
      cookie:
        pattern: ^[^\s]+$
        type: string
      crl_file:
        type: string
        x-dependency:
          ssl:
            value: enabled
      curves:
        type: string
        x-dependency:
          ssl:
            value: true
      downinter:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      error_limit:
        type: integer
        x-display-name: Error count
      fall:
        type: integer
        x-display-name: Nr. of consecutive failed checks
        x-nullable: true
      fastinter:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      force_sslv3:
        description: This field is deprecated in favor of sslv3, and will be removed in a future release
        enum:
          - enabled
          - disabled
        type: string
        x-deprecated: true
      force_tlsv10:
        description: This field is deprecated in favor of tlsv10, and will be removed in a future release
        enum:
          - enabled
          - disabled
        type: string
        x-deprecated: true
      force_tlsv11:
        description: This field is deprecated in favor of tlsv11, and will be removed in a future release
        enum:
          - enabled
          - disabled
        type: string
        x-deprecated: true
      force_tlsv12:
        description: This field is deprecated in favor of tlsv12, and will be removed in a future release
        enum:
          - enabled
          - disabled
        type: string
        x-deprecated: true
      force_tlsv13:
        description: This field is deprecated in favor of tlsv13, and will be removed in a future release
        enum:
          - enabled
          - disabled
        type: string
        x-deprecated: true
      guid:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
      hash_key:
        pattern: ^[^\s]+$
        type: string
      health_check_address:
        pattern: ^[^\s]+$
        type: string
      health_check_port:
        maximum: 65535
        minimum: 1
        type: integer
        x-nullable: true
      init-addr:
        pattern: ^[^\s]+$
        type: string
        x-nullable: true
      init-state:
        enum:
          - fully-up
          - up
          - down
          - fully-down
        type: string
      inter:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      log-bufsize:
        type: integer
        x-nullable: true
      log_proto:
        enum:
          - legacy
          - octet-count
        type: string
      maintenance:
        enum:
          - enabled
          - disabled
        type: string
      max_reuse:
        type: integer
        x-nullable: true
      maxconn:
        type: integer
        x-display-name: Max Concurrent Connections
        x-nullable: true
      maxqueue:
        type: integer
        x-display-name: Max Number of Connections
        x-nullable: true
      minconn:
        type: integer
        x-nullable: true
      namespace:
        type: string
      no_sslv3:
        description: This field is deprecated in favor of sslv3, and will be removed in a future release
        enum:
          - enabled
          - disabled
        type: string
        x-deprecated: true
      no_tlsv10:
        description: This field is deprecated in favor of tlsv10, and will be removed in a future release
        enum:
          - enabled
          - disabled
        type: string
        x-deprecated: true
      no_tlsv11:
        description: This field is deprecated in favor of tlsv11, and will be removed in a future release
        enum:
          - enabled
          - disabled
        type: string
        x-deprecated: true
      no_tlsv12:
        description: This field is deprecated in favor of tlsv12, and will be removed in a future release
        enum:
          - enabled
          - disabled
        type: string
        x-deprecated: true
      no_tlsv13:
        description: This field is deprecated in favor of force_tlsv13, and will be removed in a future release
        enum:
          - enabled
          - disabled
        type: string
        x-deprecated: true
      no_verifyhost:
        enum:
          - enabled
          - disabled
        type: string
      npn:
        type: string
        x-dependency:
          ssl:
            value: enabled
      observe:
        enum:
          - layer4
          - layer7
        type: string
        x-dependency:
          ssl:
            value: enabled
      on-error:
        enum:
          - fastinter
          - fail-check
          - sudden-death
          - mark-down
        type: string
      on-marked-down:
        enum:
          - shutdown-sessions
        type: string
      on-marked-up:
        enum:
          - shutdown-backup-sessions
        type: string
      pool_conn_name:
        pattern: ^[^\s]+$
        type: string
      pool_low_conn:
        type: integer
        x-nullable: true
      pool_max_conn:
        type: integer
        x-nullable: true
      pool_purge_delay:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      proto:
        pattern: ^[^\s]+$
        type: string
      proxy-v2-options:
        items:
          enum:
            - authority
            - cert-cn
            - cert-key
            - cert-sig
            - crc32c
            - ssl
            - ssl-cipher
            - unique-id
          type: string
        type: array
        x-omitempty: true
      redir:
        type: string
        x-display-name: Prefix
      resolve-net:
        pattern: ^([A-Za-z0-9.:/]+)(,[A-Za-z0-9.:/]+)*$
        type: string
      resolve-prefer:
        enum:
          - ipv4
          - ipv6
        type: string
      resolve_opts:
        pattern: ^(allow-dup-ip|ignore-weight|prevent-dup-ip)(,(allow-dup-ip|ignore-weight|prevent-dup-ip))*$
        type: string
      resolvers:
        pattern: ^[^\s]+$
        type: string
        x-dynamic-enum:
          operation: getResolvers
          property: name
      rise:
        type: integer
        x-nullable: true
      send-proxy:
        enum:
          - enabled
          - disabled
        type: string
      send-proxy-v2:
        enum:
          - enabled
          - disabled
        type: string
      send_proxy_v2_ssl:
        enum:
          - enabled
          - disabled
        type: string
      send_proxy_v2_ssl_cn:
        enum:
          - enabled
          - disabled
        type: string
      set-proxy-v2-tlv-fmt:
        properties:
          id:
            type: string
          value:
            type: string
        required:
          - id
          - value
        type: object
      shard:
        type: integer
      sigalgs:
        type: string
        x-dependency:
          ssl:
            value: true
      slowstart:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      sni:
        pattern: ^[^\s]+$
        type: string
      socks4:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          check-via-socks4:
            required: true
      source:
        type: string
      ssl:
        enum:
          - enabled
          - disabled
        type: string
      ssl_cafile:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          ssl:
            value: enabled
        x-display-name: SSL CA File
      ssl_certificate:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          ssl:
            value: enabled
      ssl_max_ver:
        enum:
          - SSLv3
          - TLSv1.0
          - TLSv1.1
          - TLSv1.2
          - TLSv1.3
        type: string
      ssl_min_ver:
        enum:
          - SSLv3
          - TLSv1.0
          - TLSv1.1
          - TLSv1.2
          - TLSv1.3
        type: string
      ssl_reuse:
        enum:
          - enabled
          - disabled
        type: string
      sslv3:
        enum:
          - enabled
          - disabled
        type: string
      stick:
        enum:
          - enabled
          - disabled
        type: string
      tcp_ut:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      tfo:
        enum:
          - enabled
          - disabled
        type: string
      tls_tickets:
        enum:
          - enabled
          - disabled
        type: string
        x-dependency:
          ssl:
            value: enabled
      tlsv10:
        enum:
          - enabled
          - disabled
        type: string
      tlsv11:
        enum:
          - enabled
          - disabled
        type: string
      tlsv12:
        enum:
          - enabled
          - disabled
        type: string
      tlsv13:
        enum:
          - enabled
          - disabled
        type: string
      track:
        type: string
      verify:
        enum:
          - none
          - required
        type: string
        x-dependency:
          ssl:
            value: enabled
      verifyhost:
        type: string
        x-dependency:
          ssl:
            value: enabled
          verify:
            value: required
      weight:
        type: integer
        x-nullable: true
      ws:
        enum:
          - auto
          - h1
          - h2
        type: string
        x-display-name: Relaying websocket stream protocol
    type: object
  site:
    additionalProperties: false
    description: |
      Site configuration. Sites are considered as one service and all farms connected to that service.
      Farms are connected to service using use-backend and default_backend directives. Sites let you
      configure simple HAProxy configurations, for more advanced options use /haproxy/configuration
      endpoints.
    example:
      farms:
        - balance:
            algorithm: roundrobin
          mode: http
          name: www_backend
          servers:
            - address: 127.0.1.1
              name: www_server
              port: 4567
            - address: 127.0.1.2
              name: www_server_new
              port: 4567
          use_as: default
      name: test_site
      service:
        http_connection_mode: httpclose
        maxconn: 2000
        mode: http
    properties:
      farms:
        items:
          properties:
            balance:
              $ref: '#/definitions/balance'
            cond:
              enum:
                - if
                - unless
              type: string
              x-dependency:
                use_as:
                  required: true
                  value: conditional
              x-display-name: Condition
            cond_test:
              type: string
              x-dependency:
                use_as:
                  required: true
                  value: conditional
              x-display-name: Condition Test
            forwardfor:
              $ref: '#/definitions/forwardfor'
            mode:
              enum:
                - http
                - tcp
              type: string
            name:
              pattern: ^[A-Za-z0-9-_.:]+$
              type: string
              x-nullable: false
            servers:
              items:
                $ref: '#/definitions/server'
              type: array
              x-omitempty: true
            use_as:
              enum:
                - default
                - conditional
              type: string
              x-nullable: false
          required:
            - name
            - use_as
          type: object
          x-go-name: SiteFarm
        type: array
        x-omitempty: true
      name:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
        x-nullable: false
      service:
        properties:
          http_connection_mode:
            enum:
              - http-tunnel
              - httpclose
              - forced-close
              - http-server-close
              - http-keep-alive
            type: string
            x-dependency:
              mode:
                value: http
            x-display-name: HTTP Connection Mode
          listeners:
            items:
              $ref: '#/definitions/bind'
            type: array
            x-omitempty: true
          maxconn:
            type: integer
            x-display-name: Max Connections
            x-nullable: true
          mode:
            enum:
              - http
              - tcp
            type: string
        type: object
    required:
      - name
    title: Site
    type: object
  sites:
    title: Sites
    description: |
      Sites array. Sites are considered as one service and all farms connected to that service.
      Farms are connected to service using use-backend and default_backend directives. Sites let you
      configure simple HAProxy configurations, for more advanced options use /haproxy/configuration
      endpoints.
    type: array
    items:
      $ref: "#/definitions/site"
  environment_options:
    properties:
      presetenv:
        items:
          properties:
            name:
              type: string
              x-display-name: Name
            value:
              type: string
              x-display-name: Value
          required:
            - name
            - value
          type: object
          x-go-name: PresetEnv
        type: array
        x-display-name: Preset environment variables
        x-go-name: PresetEnvs
        x-omitempty: true
      resetenv:
        type: string
        x-display-name: Remove all environment variables except the ones specified
      setenv:
        items:
          properties:
            name:
              type: string
              x-display-name: Name
            value:
              type: string
              x-display-name: Value
          required:
            - name
            - value
          type: object
          x-go-name: SetEnv
        type: array
        x-display-name: Set environment variables
        x-go-name: SetEnvs
        x-omitempty: true
      unsetenv:
        type: string
        x-display-name: Removes environment variables specified in arguments
    type: object
  performance_options:
    properties:
      busy_polling:
        type: boolean
      max_spread_checks:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      maxcompcpuusage:
        type: integer
        x-display-name: Maximum HAProxy CPU usage
      maxcomprate:
        type: integer
        x-display-name: Maximum per-process input compression rate
      maxconn:
        type: integer
        x-display-name: Max Connections
      maxconnrate:
        type: integer
        x-display-name: Maximum per-process number of concurrent connections
      maxpipes:
        type: integer
        x-display-name: Maximum per-process number of pipes
      maxsessrate:
        type: integer
        x-display-name: Maximum per-process number of sessions per second
      maxzlibmem:
        type: integer
        x-display-name: Maximum amount of RAM in megabytes per process usable by the zlib
      noepoll:
        type: boolean
        x-display-name: Disable the use of the "epoll" event polling system on Linux
      noevports:
        type: boolean
        x-display-name: Disable the use of the event ports event polling system on SunOS system derived from Solaris 10 and later
      nogetaddrinfo:
        type: boolean
        x-display-name: Disable the use of getaddrinfo for name resolving
      nokqueue:
        type: boolean
        x-display-name: Disable the use of the "kqueue" event polling system on BSD
      nopoll:
        type: boolean
        x-display-name: Disable the use of the "poll" event polling system
      noreuseport:
        type: boolean
        x-display-name: Disable the use of SO_REUSEPORT
      nosplice:
        type: boolean
        x-display-name: Disable the use of kernel tcp splicing between sockets on Linux
      profiling_memory:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Enable or disables per-function memory profiling
      profiling_tasks:
        enum:
          - auto
          - enabled
          - disabled
        type: string
        x-display-name: Enable or disables per-task CPU profiling
      server_state_base:
        pattern: ^[^\s]+$
        type: string
        x-display-name: Server State Base
      server_state_file:
        pattern: ^[^\s]+$
        type: string
        x-display-name: Server State File
      spread_checks:
        type: integer
        x-display-name: Add some randomness in the check interval
      thread_hard_limit:
        type: integer
        x-nullable: true
    type: object
  ssl_options:
    properties:
      ca_base:
        type: string
        x-display-name: SSL CA Certificates Base Directory
      crt_base:
        type: string
        x-display-name: SSL Certificates Base Directory
      default_bind_ciphers:
        type: string
        x-display-name: SSL Default Bind Ciphers
      default_bind_ciphersuites:
        type: string
        x-display-name: SSL Default Bind Ciphersuites
      default_bind_client_sigalgs:
        type: string
        x-display-name: SSL Default Bind Client Sigalgs
      default_bind_curves:
        type: string
        x-display-name: SSL Default Bind Curves
      default_bind_options:
        type: string
        x-display-name: SSL Default Bind Options
      default_bind_sigalgs:
        type: string
        x-display-name: SSL Default Bind Sigalgs
      default_server_ciphers:
        type: string
        x-display-name: SSL Default Server Ciphers
      default_server_ciphersuites:
        type: string
        x-display-name: SSL Default Server Ciphersuites
      default_server_client_sigalgs:
        type: string
        x-display-name: SSL Default Server Client Sigalgs
      default_server_curves:
        type: string
        x-display-name: SSL Default Server Curves
      default_server_options:
        type: string
        x-display-name: SSL Default Server Options
      default_server_sigalgs:
        type: string
        x-display-name: SSL Default Server Sigalgs
      dh_param_file:
        type: string
      engines:
        items:
          properties:
            algorithms:
              type: string
              x-display-name: Algorithms
              x-nullable: true
            name:
              type: string
              x-display-name: Name
          required:
            - name
          type: object
          x-go-name: SslEngine
        type: array
        x-display-name: SSL Engines
        x-go-name: SslEngines
        x-omitempty: true
      issuers_chain_path:
        type: string
      load_extra_files:
        type: string
        x-display-name: SSL Load Extra Files
      maxsslconn:
        type: integer
        x-display-name: Maximum per-process number of concurrent SSL connections
      maxsslrate:
        type: integer
        x-display-name: Maximum per-process number of SSL sessions per second
      mode_async:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Asynchronous TLS I/O operations
      propquery:
        type: string
        x-display-name: SSL Query String Property
      provider:
        type: string
        x-display-name: SSL Provider
      provider_path:
        type: string
        x-display-name: SSL Provider Path
      security_level:
        maximum: 5
        minimum: 0
        type: integer
        x-nullable: true
      server_verify:
        enum:
          - none
          - required
        type: string
        x-display-name: Verify server certificates
      skip_self_issued_ca:
        type: boolean
        x-display-name: Self issued CA, aka x509 root CA
    type: object
  tune_options:
    properties:
      applet_zero_copy_forwarding:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Enables of disabled the zero-copy forwarding of data for the applets
      comp_maxlevel:
        type: integer
        x-display-name: Maximum Compression Level
      disable_fast_forward:
        type: boolean
        x-display-name: Disable fast-forwarding
      disable_zero_copy_forwarding:
        type: boolean
        x-display-name: Disable zero-copy forwarding
      events_max_events_at_once:
        maximum: 10000
        minimum: 1
        type: integer
      fail_alloc:
        type: boolean
        x-display-name: Failed Allocation Chance
      fd_edge_triggered:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Edge-triggered polling mode
      h1_zero_copy_fwd_recv:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: enable or disable the zero-copy receives of data for the HTTP/1 multiplexer
      h1_zero_copy_fwd_send:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: enable or disable the zero-copy sends of data for the HTTP/1 multiplexer
      h2_be_glitches_threshold:
        type: integer
        x-display-name: Automatically kill a backend connection past a number of glitches
        x-nullable: true
      h2_be_initial_window_size:
        type: integer
        x-display-name: Initial window size for outgoing connections
      h2_be_max_concurrent_streams:
        type: integer
        x-display-name: Maximum number of concurrent streams per outgoing connection
      h2_be_rxbuf:
        type: integer
        x-display-name: HTTP/2 receive buffer size for outgoing connections
        x-nullable: true
        x-size: true
      h2_fe_glitches_threshold:
        type: integer
        x-display-name: Automatically kill a frontend connection past a number of glitches
        x-nullable: true
      h2_fe_initial_window_size:
        type: integer
        x-display-name: Initial window size for incoming connections
      h2_fe_max_concurrent_streams:
        type: integer
        x-display-name: Maximum number of concurrent streams per incoming connection
      h2_fe_max_total_streams:
        type: integer
        x-display-name: Maximum number of total streams processed per incoming HTTP/2 connection
        x-nullable: true
      h2_fe_rxbuf:
        type: integer
        x-display-name: HTTP/2 receive buffer size for incoming connections
        x-nullable: true
        x-size: true
      h2_header_table_size:
        maximum: 65535
        type: integer
        x-display-name: HTTP/2 Dynamic Header Table Size
      h2_initial_window_size:
        type: integer
        x-display-name: HTTP/2 Initial Window Size
        x-nullable: true
      h2_max_concurrent_streams:
        type: integer
        x-display-name: HTTP/2 Maximum Number of Concurrent Streams
      h2_max_frame_size:
        type: integer
        x-display-name: HTTP/2 Maximum Frame Size
      h2_zero_copy_fwd_send:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: enable or disable the zero-copy sends of data for the HTTP/2 multiplexer
      http_cookielen:
        type: integer
        x-display-name: Maximum Cookie Length
      http_logurilen:
        type: integer
        x-display-name: Maximum URI Length
      http_maxhdr:
        maximum: 32767
        minimum: 1
        type: integer
        x-display-name: Maximum Number of Headers
      idle_pool_shared:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Share Idle Connections
      idletimer:
        maximum: 65535
        minimum: 0
        type: integer
        x-default-unit: ms
        x-display-name: Idle Stream Duration
        x-duration: true
        x-nullable: true
      listener_default_shards:
        enum:
          - by-process
          - by-thread
          - by-group
        type: string
        x-display-name: Listener Default Shards
      listener_multi_queue:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Listener Multi Queue Accept
      max_checks_per_thread:
        type: integer
        x-display-name: Maximum checks per thread
        x-nullable: true
      maxaccept:
        type: integer
        x-display-name: Maximum Accept Events
      maxpollevents:
        type: integer
        x-display-name: Maximum Polled Events
      maxrewrite:
        type: integer
        x-display-name: Maximum Rewrite Space
      memory_hot_size:
        type: integer
        x-display-name: Per-thread Amount of Memory
        x-nullable: true
      pattern_cache_size:
        type: integer
        x-display-name: Pattern Lookup Cache Size
        x-nullable: true
      peers_max_updates_at_once:
        type: integer
        x-display-name: Maximum number of stick-table updates at once
      pool_high_fd_ratio:
        type: integer
        x-display-name: Max Used High FD Ratio
      pool_low_fd_ratio:
        type: integer
        x-display-name: Max Used Low FD Ratio
      pt_zero_copy_forwarding:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: enable or disable the zero-copy forwarding of data for the pass-through multiplexer
      renice_runtime:
        maximum: 19
        minimum: -20
        type: integer
        x-display-name: Scheduling priority applied after the configuration parsing
        x-nullable: true
      renice_startup:
        maximum: 19
        minimum: -20
        type: integer
        x-display-name: Scheduling priority applied before the rest of the configuration
        x-nullable: true
      ring_queues:
        type: integer
        x-display-name: Number of write queues in front of ring buffers
        x-nullable: true
      runqueue_depth:
        type: integer
        x-display-name: Max Tasks in Run Queue
      sched_low_latency:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Low Latency Task Scheduler
      stick_counters:
        type: integer
        x-display-name: Number of stick-counters
        x-nullable: true
    type: object
  tune_quic_options:
    properties:
      frontend_conn_tx_buffers_limit:
        type: integer
        x-display-name: QUIC Frontend Connection TX Buffer Limit
        x-nullable: true
      frontend_max_idle_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-display-name: QUIC Frontend Max Idle Timeout
        x-duration: true
        x-nullable: true
      frontend_max_streams_bidi:
        type: integer
        x-display-name: QUIC Max Number of Bidirectional Streams
        x-nullable: true
      max_frame_loss:
        type: integer
        x-display-name: QUIC Max Limit for Frame Loss
        x-nullable: true
      reorder_ratio:
        maximum: 100
        minimum: 0
        type: integer
        x-display-name: Ratio applied to the packet reordering threshold
        x-nullable: true
      retry_threshold:
        type: integer
        x-display-name: QUIC Retry Threshold
        x-nullable: true
      socket_owner:
        enum:
          - listener
          - connection
        type: string
        x-display-name: QUIC Socket Owner
      zero_copy_fwd_send:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Enables or disables the zero-copy sends for the QUIC multiplexer
    type: object
  tune_vars_options:
    properties:
      global_max_size:
        type: integer
        x-display-name: Variables Global Max Size
        x-nullable: true
        x-size: false
      proc_max_size:
        type: integer
        x-display-name: Variables Process Max Size
        x-nullable: true
        x-size: false
      reqres_max_size:
        type: integer
        x-display-name: Variables Request/Response Max Size
        x-nullable: true
        x-size: false
      sess_max_size:
        type: integer
        x-display-name: Variables Session Max Size
        x-nullable: true
        x-size: false
      txn_max_size:
        type: integer
        x-display-name: Variables Transaction Max Size
        x-nullable: true
        x-size: false
    type: object
  tune_zlib_options:
    properties:
      memlevel:
        maximum: 9
        minimum: 1
        type: integer
        x-display-name: Zlib Memory Level
      windowsize:
        maximum: 15
        minimum: 8
        type: integer
        x-display-name: Zlib Window Size
    type: object
  tune_ssl_options:
    properties:
      cachesize:
        type: integer
        x-display-name: SSL Cache Size
        x-nullable: true
      capture_buffer_size:
        type: integer
        x-display-name: SSL Maximum Size of Cipherlist Buffer
        x-nullable: true
      ctx_cache_size:
        type: integer
        x-display-name: SSL Number of Certificates in Cache
      default_dh_param:
        type: integer
        x-display-name: SSL Default DH Parameter Size
      force_private_cache:
        type: boolean
        x-display-name: SSL Force Private Cache
      keylog:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: SSL Log TLS Keys
      lifetime:
        minimum: 0
        type: integer
        x-default-unit: s
        x-display-name: SSL Session Lifetime
        x-duration: true
        x-nullable: true
      maxrecord:
        type: integer
        x-display-name: SSL Maximum Size
        x-nullable: true
        x-size: false
      ocsp_update_max_delay:
        type: integer
        x-display-name: SSL Maximum Interval Between Two Automatic Updates of the same OCSP Response
        x-nullable: true
      ocsp_update_min_delay:
        type: integer
        x-display-name: SSL Minimum Interval Between Two Automatic Updates of the same OCSP Response
        x-nullable: true
    type: object
  tune_lua_options:
    properties:
      burst_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-display-name: Burst execution timeout
        x-duration: true
        x-nullable: true
      forced_yield:
        type: integer
        x-display-name: Lua Forced Yield
      log_loggers:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Send Lua Logs to the Loggers
      log_stderr:
        enum:
          - auto
          - enabled
          - disabled
        type: string
        x-display-name: Send Lua Logs to stderr
      maxmem:
        type: integer
        x-display-name: Lua Maximum Memory Usage
        x-nullable: true
      service_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-display-name: Lua Service timeout
        x-duration: true
        x-nullable: true
      session_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-display-name: Lua Session Timeout
        x-duration: true
        x-nullable: true
      task_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-display-name: Lua Task Timeout
        x-duration: true
        x-nullable: true
    type: object
  tune_buffer_options:
    properties:
      buffers_limit:
        type: integer
        x-display-name: Buffers Limit
        x-nullable: true
      buffers_reserve:
        minimum: 2
        type: integer
        x-display-name: Buffers Reserve
      bufsize:
        type: integer
        x-display-name: Buffer Size
        x-size: true
      bufsize_small:
        minimum: 1
        type: integer
        x-display-name: Size of small buffers (for memory-restrained situations)
        x-nullable: true
        x-size: true
      pipesize:
        type: integer
        x-display-name: Pipe Buffer Size
        x-size: true
      rcvbuf_backend:
        type: integer
        x-display-name: Backend Receive Buffer Size
        x-nullable: true
        x-size: true
      rcvbuf_client:
        type: integer
        x-display-name: Client Receive Buffer Size
        x-nullable: true
        x-size: true
      rcvbuf_frontend:
        type: integer
        x-display-name: Frontend Receive Buffer Size
        x-nullable: true
        x-size: true
      rcvbuf_server:
        type: integer
        x-display-name: Server Receive Buffer Size
        x-nullable: true
        x-size: true
      recv_enough:
        type: integer
        x-display-name: Receive Enough Socket Buffer Size
        x-size: true
      sndbuf_backend:
        type: integer
        x-display-name: Backend Send Buffer Size
        x-nullable: true
        x-size: true
      sndbuf_client:
        type: integer
        x-display-name: Client Send Buffer Size
        x-nullable: true
        x-size: true
      sndbuf_frontend:
        type: integer
        x-display-name: Frontend Send Buffer Size
        x-nullable: true
        x-size: true
      sndbuf_server:
        type: integer
        x-display-name: Server Send Buffer Size
        x-nullable: true
        x-size: true
    type: object
  debug_options:
    properties:
      anonkey:
        maximum: 4294967295
        minimum: 0
        type: integer
        x-nullable: true
      quiet:
        type: boolean
      zero_warning:
        type: boolean
    type: object
  http_client_options:
    properties:
      resolvers_disabled:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: HTTP Client Resolvers Disabled
      resolvers_id:
        type: string
        x-display-name: HTTP Client Resolvers ID
      resolvers_prefer:
        enum:
          - ipv4
          - ipv6
        type: string
        x-display-name: HTTP Client Resolvers Prefer
      retries:
        type: integer
        x-display-name: HTTP Client Retries
      ssl_ca_file:
        type: string
        x-display-name: HTTP Client SSL CA File
      ssl_verify:
        enum:
          - ""
          - none
          - required
        type: string
        x-display-name: HTTP Client SSL Verify
        x-nullable: true
      timeout_connect:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-display-name: HTTP Client Connect Timeout
        x-duration: true
        x-nullable: true
    type: object
  ocsp_update_options:
    properties:
      disable:
        default: false
        type: boolean
        x-display-name: Disable OCSP Update
        x-nullable: true
      httpproxy:
        properties:
          address:
            example: 127.0.0.1
            pattern: ^[^\s]+$
            type: string
          port:
            example: 80
            maximum: 65535
            minimum: 1
            type: integer
            x-nullable: true
        type: object
        x-display-name: OCSP Update HTTP Proxy
        x-omitempty: true
      maxdelay:
        description: Sets the maximum interval between two automatic updates of the same OCSP response.This time is expressed in seconds
        type: integer
        x-default-unit: s
        x-display-name: OCSP Update Maximum Delay
        x-duration: false
        x-nullable: true
      mindelay:
        description: Sets the minimum interval between two automatic updates of the same OCSP response. This time is expressed in seconds
        type: integer
        x-default-unit: s
        x-display-name: OCSP Update Minimum Delay
        x-duration: false
        x-nullable: true
      mode:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: OCSP Update Mode
    type: object
  lua_options:
    properties:
      load_per_thread:
        type: string
      loads:
        items:
          properties:
            file:
              pattern: ^[^\s]+$
              type: string
          required:
            - file
          type: object
          x-go-name: LuaLoad
        type: array
        x-omitempty: true
      prepend_path:
        items:
          properties:
            path:
              pattern: ^[^\s]+$
              type: string
            type:
              enum:
                - path
                - cpath
              type: string
          required:
            - path
          type: object
          x-go-name: LuaPrependPath
        type: array
        x-omitempty: true
    type: object
  wurfl_options:
    properties:
      cache_size:
        type: integer
        x-display-name: Sets the WURFL Useragent cache size
      data_file:
        type: string
        x-display-name: The path of the WURFL data file
      information_list:
        type: string
        x-display-name: A space-delimited list of WURFL capabilities
      information_list_separator:
        type: string
        x-display-name: A char that will be used to separate values in a response header containing WURFL results
      patch_file:
        type: string
        x-display-name: A list of WURFL patch file paths
    type: object
  device_atlas_options:
    properties:
      json_file:
        type: string
        x-display-name: JSON file
      log_level:
        type: string
        x-display-name: Log Level
      properties_cookie:
        type: string
        x-display-name: Properties Cookie
      separator:
        type: string
        x-display-name: Separator
    type: object
  fifty_one_degrees_options:
    properties:
      cache_size:
        type: integer
        x-display-name: Cache Size
      data_file:
        type: string
        x-display-name: Data File
      property_name_list:
        type: string
        x-display-name: Name List
      property_separator:
        type: string
        x-display-name: Property Separator
    type: object
  global:
    allOf:
      - $ref: '#/definitions/global_base'
      - properties:
          log_target_list:
            $ref: '#/definitions/log_targets'
            x-go-name: LogTargetList
        type: object
    description: Frontend with all it's children resources
    type: object
    x-go-name: Global
  global_base:
    additionalProperties: false
    description: HAProxy global configuration
    properties:
      chroot:
        pattern: ^[^\s]+$
        type: string
        x-display-name: Chroot
      close_spread_time:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      cluster_secret:
        type: string
        x-display-name: Cluster Secret
      cpu_maps:
        items:
          properties:
            cpu_set:
              type: string
              x-display-name: CPU Set
            process:
              type: string
              x-display-name: Process/Thread Set
          required:
            - process
            - cpu_set
          type: object
          x-go-name: CPUMap
        type: array
        x-display-name: CPU Maps
        x-go-name: CPUMaps
        x-omitempty: true
      daemon:
        type: boolean
      debug_options:
        $ref: '#/definitions/debug_options'
      default_path:
        properties:
          path:
            pattern: ^[^\s]+$
            type: string
            x-dependency:
              type:
                value: origin
          type:
            enum:
              - current
              - config
              - parent
              - origin
            type: string
            x-nullable: false
        required:
          - type
        type: object
        x-go-name: GlobalDefaultPath
      description:
        type: string
        x-display-name: Text that describes the instance
      device_atlas_options:
        $ref: '#/definitions/device_atlas_options'
      environment_options:
        $ref: '#/definitions/environment_options'
      expose_deprecated_directives:
        type: boolean
      expose_experimental_directives:
        type: boolean
      external_check:
        type: boolean
        x-display-name: External Check
      fifty_one_degrees_options:
        $ref: '#/definitions/fifty_one_degrees_options'
      force_cfg_parser_pause:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-display-name: Pause the configuration parser to simulate long reloads
        x-duration: true
        x-nullable: true
      gid:
        type: integer
        x-display-name: GID
      grace:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-display-name: Defines a delay between SIGUSR1 and real soft-stop
        x-duration: true
        x-nullable: true
      group:
        pattern: ^[^\s]+$
        type: string
        x-display-name: Group
      h1_accept_payload_with_any_method:
        type: boolean
      h1_case_adjust:
        items:
          properties:
            from:
              type: string
            to:
              type: string
          required:
            - from
            - to
          type: object
          x-go-name: H1CaseAdjust
        type: array
        x-go-name: H1CaseAdjusts
        x-omitempty: true
      h1_case_adjust_file:
        type: string
      h1_do_not_close_on_insecure_transfer_encoding:
        type: boolean
      h2_workaround_bogus_websocket_clients:
        type: boolean
      hard_stop_after:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-display-name: Hard Stop After
        x-duration: true
        x-nullable: true
      harden:
        properties:
          reject_privileged_ports:
            properties:
              quic:
                enum:
                  - enabled
                  - disabled
                type: string
              tcp:
                enum:
                  - enabled
                  - disabled
                type: string
            type: object
            x-go-name: GlobalHardenRejectPrivilegedPorts
        type: object
        x-go-name: GlobalHarden
      http_client_options:
        $ref: '#/definitions/http_client_options'
      http_err_codes:
        items:
          $ref: '#/definitions/http_codes'
        type: array
        x-display-name: Replace, reduce or extend the list of status codes that define an error
        x-omitempty: true
      http_fail_codes:
        items:
          $ref: '#/definitions/http_codes'
        type: array
        x-display-name: Replace, reduce or extend the list of status codes that define a failure
        x-omitempty: true
      insecure_fork_wanted:
        type: boolean
      insecure_setuid_wanted:
        type: boolean
      limited_quic:
        type: boolean
      localpeer:
        pattern: ^[^\s]+$
        type: string
        x-display-name: Local instance's peer name.
      log_send_hostname:
        properties:
          enabled:
            enum:
              - enabled
              - disabled
            type: string
          param:
            pattern: ^[^\s]+$
            type: string
        required:
          - enabled
        type: object
        x-display-name: Log Send Hostname
        x-go-name: GlobalLogSendHostname
      lua_options:
        $ref: '#/definitions/lua_options'
      master-worker:
        type: boolean
        x-display-name: Master Worker Mode
      mworker_max_reloads:
        minimum: 0
        type: integer
        x-display-name: The number of times a worker can survive a reload
        x-nullable: true
      nbthread:
        type: integer
        x-display-name: Number of Threads
      no_quic:
        type: boolean
        x-display-name: Disable the use of the QUIC protocol
      node:
        type: string
      numa_cpu_mapping:
        enum:
          - enabled
          - disabled
        type: string
      ocsp_update_options:
        $ref: '#/definitions/ocsp_update_options'
      performance_options:
        $ref: '#/definitions/performance_options'
      pidfile:
        type: string
        x-display-name: PID File
      pp2_never_send_local:
        type: boolean
      prealloc_fd:
        type: boolean
        x-display-name: Prealloc FD
      runtime_apis:
        items:
          allOf:
            - $ref: '#/definitions/bind_params'
            - properties:
                address:
                  pattern: ^[^\s]+$
                  type: string
              required:
                - address
              type: object
          x-go-name: RuntimeAPI
        type: array
        x-display-name: Runtime APIs
        x-go-name: RuntimeAPIs
        x-omitempty: true
      set_dumpable:
        type: boolean
      set_var:
        items:
          properties:
            expr:
              type: string
              x-display-name: Expression
            name:
              type: string
              x-display-name: Name
          required:
            - name
            - expr
          type: object
          x-go-name: SetVar
        type: array
        x-display-name: Set variables
        x-go-name: SetVars
        x-omitempty: true
      set_var_fmt:
        items:
          properties:
            format:
              type: string
              x-display-name: Format
            name:
              type: string
              x-display-name: Name
          required:
            - name
            - format
          type: object
          x-go-name: SetVarFmt
        type: array
        x-display-name: Set variable formats
        x-go-name: SetVarFmts
        x-omitempty: true
      setcap:
        pattern: ^[^\s]+$
        type: string
        x-display-name: OS Capabilities
        x-omitempty: true
      ssl_options:
        $ref: '#/definitions/ssl_options'
      stats_file:
        type: string
      stats_maxconn:
        type: integer
        x-display-name: Stats maxconn
        x-nullable: true
      stats_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      strict_limits:
        type: boolean
      thread_group_lines:
        items:
          properties:
            group:
              type: string
              x-display-name: Group
            num_or_range:
              type: string
              x-display-name: Number or Range
          required:
            - group
            - num_or_range
          type: object
          x-go-name: ThreadGroup
        type: array
        x-display-name: Thread Groups
        x-go-name: ThreadGroupLines
        x-omitempty: true
      thread_groups:
        type: integer
        x-display-name: Number of Thread Groups
      tune_buffer_options:
        $ref: '#/definitions/tune_buffer_options'
      tune_lua_options:
        $ref: '#/definitions/tune_lua_options'
      tune_options:
        $ref: '#/definitions/tune_options'
      tune_quic_options:
        $ref: '#/definitions/tune_quic_options'
      tune_ssl_options:
        $ref: '#/definitions/tune_ssl_options'
      tune_vars_options:
        $ref: '#/definitions/tune_vars_options'
      tune_zlib_options:
        $ref: '#/definitions/tune_zlib_options'
      uid:
        type: integer
        x-display-name: UID
      ulimit_n:
        type: integer
      user:
        pattern: ^[^\s]+$
        type: string
        x-display-name: User
      warn_blocked_traffic_after:
        minimum: 1
        type: integer
        x-default-unit: ms
        x-display-name: Delay after which a stuck task triggers a warning
        x-duration: true
        x-nullable: true
      wurfl_options:
        $ref: '#/definitions/wurfl_options'
    title: Global Base
    type: object
  defaults:
    allOf:
      - $ref: '#/definitions/defaults_base'
      - properties:
          http_check_list:
            $ref: '#/definitions/http_checks'
            x-go-name: HTTPCheckList
          http_error_rule_list:
            $ref: '#/definitions/http_error_rules'
            x-go-name: HTTPErrorRuleList
          log_target_list:
            $ref: '#/definitions/log_targets'
            x-go-name: LogTargetList
          quic_initial_rule_list:
            $ref: '#/definitions/quic_initial_rules'
            x-go-name: QUICInitialRuleList
          tcp_check_rule_list:
            $ref: '#/definitions/tcp_checks'
            x-go-name: TCPCheckRuleList
        type: object
    description: Defaults with all it's children resources
    type: object
    x-go-name: Defaults
  defaults_base:
    additionalProperties: false
    description: HAProxy defaults configuration
    properties:
      abortonclose:
        enum:
          - enabled
          - disabled
        type: string
      accept_invalid_http_request:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Accept Invalid HTTP Request
      accept_invalid_http_response:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Accept Invalid HTTP Response
      accept_unsafe_violations_in_http_request:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Accept Unsafe Violations in HTTP Request
      accept_unsafe_violations_in_http_response:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Accept Unsafe Violations in HTTP Response
      adv_check:
        enum:
          - httpchk
          - ldap-check
          - mysql-check
          - pgsql-check
          - redis-check
          - smtpchk
          - ssl-hello-chk
          - tcp-check
        type: string
        x-display-name: Advanced Check
      allbackups:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: All Backups
      backlog:
        type: integer
        x-display-name: Backlog
        x-nullable: true
      balance:
        $ref: '#/definitions/balance'
      check_timeout:
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      checkcache:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Checkcache
      clflog:
        type: boolean
        x-display-name: CLF Log
      client_fin_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      client_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      clitcpka:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Client TCP Keep Alive
      clitcpka_cnt:
        type: integer
        x-display-name: Clitcpka Cnt
        x-nullable: true
      clitcpka_idle:
        type: integer
        x-default-unit: s
        x-display-name: Clitcpka Idle
        x-duration: true
        x-nullable: true
      clitcpka_intvl:
        type: integer
        x-default-unit: s
        x-display-name: Clitcpka Intvl
        x-duration: true
        x-nullable: true
      compression:
        $ref: '#/definitions/compression'
      connect_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      contstats:
        enum:
          - enabled
        type: string
        x-display-name: Continuous Statistics
      cookie:
        $ref: '#/definitions/cookie'
      default_backend:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
        x-dynamic-enum:
          operation: getBackends
          property: name
      default_server:
        $ref: '#/definitions/default_server'
      disable_h2_upgrade:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Disable HTTP/2 Upgrade
      disabled:
        type: boolean
      dontlog_normal:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Dontlog Normal
      dontlognull:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Don't Log Null
      dynamic_cookie_key:
        pattern: ^[^\s]+$
        type: string
      email_alert:
        $ref: '#/definitions/email_alert'
      enabled:
        type: boolean
      error_files:
        items:
          $ref: '#/definitions/errorfile'
        type: array
        x-go-name: ErrorFiles
        x-omitempty: true
      error_log_format:
        type: string
      errorfiles_from_http_errors:
        items:
          $ref: '#/definitions/errorfiles'
        type: array
        x-go-name: ErrorFilesFromHTTPErrors
        x-omitempty: true
      errorloc302:
        $ref: '#/definitions/errorloc'
      errorloc303:
        $ref: '#/definitions/errorloc'
      external_check:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: External Check
      external_check_command:
        pattern: ^[^\s]+$
        type: string
        x-display-name: External Check Command
      external_check_path:
        pattern: ^[^\s]+$
        type: string
        x-display-name: External Check Path
      forwardfor:
        $ref: '#/definitions/forwardfor'
      from:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
      fullconn:
        type: integer
        x-nullable: true
      h1_case_adjust_bogus_client:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: H1 Adjust Bogus Client
      h1_case_adjust_bogus_server:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: H1 Adjust Bogus Server
      hash_balance_factor:
        type: integer
        x-nullable: true
      hash_type:
        $ref: '#/definitions/hash_type'
      http-buffer-request:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: HTTP bufferrequest
      http-use-htx:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: HTTP Use HTX
      http_connection_mode:
        enum:
          - httpclose
          - http-server-close
          - http-keep-alive
        type: string
      http_ignore_probes:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: HTTP Ignore Probes
      http_keep_alive_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      http_no_delay:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: HTTP No Delay
      http_pretend_keepalive:
        enum:
          - enabled
          - disabled
        type: string
      http_request_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      http_restrict_req_hdr_names:
        enum:
          - preserve
          - delete
          - reject
        type: string
        x-display-name: Restrict HTTP Request Header Names
      http_reuse:
        enum:
          - aggressive
          - always
          - never
          - safe
        type: string
      http_send_name_header:
        type: string
        x-display-name: Add the server name to a request
        x-nullable: true
      http_use_proxy_header:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: HTTP Use Proxy Header
      httpchk_params:
        $ref: '#/definitions/httpchk_params'
        x-dependency:
          adv_check:
            value: httpchk
      httplog:
        type: boolean
        x-display-name: HTTP Log
      httpslog:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Httpslog
      idle_close_on_response:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Idle Close On Response
      independent_streams:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Independent Streams
      load_server_state_from_file:
        enum:
          - global
          - local
          - none
        type: string
      log_format:
        type: string
      log_format_sd:
        type: string
        x-display-name: Log Format SD
      log_health_checks:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Log Health Checks
      log_separate_errors:
        enum:
          - enabled
          - disabled
        type: string
      log_steps:
        items:
          enum:
            - accept
            - request
            - connect
            - response
            - close
            - error
            - any
          type: string
        type: array
        x-go-name: LogSteps
        x-omitempty: true
      log_tag:
        pattern: ^[^\s]+$
        type: string
      logasap:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Log ASAP
      max_keep_alive_queue:
        type: integer
        x-display-name: Maximum server queue size for maintaining keep-alive connections
        x-nullable: true
      maxconn:
        type: integer
        x-display-name: Max Connections
        x-nullable: true
      mode:
        enum:
          - tcp
          - http
          - log
        type: string
      monitor_uri:
        $ref: '#/definitions/monitor_uri'
      mysql_check_params:
        $ref: '#/definitions/mysql_check_params'
        x-dependency:
          adv_check:
            value: mysql-check
      name:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
      nolinger:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Nolinger
      originalto:
        $ref: '#/definitions/originalto'
      persist:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Persist
      persist_rule:
        $ref: '#/definitions/persist_rule'
      pgsql_check_params:
        $ref: '#/definitions/pgsql_check_params'
        x-dependency:
          adv_check:
            value: pgsql-check
      prefer_last_server:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Prefer Last Server
      queue_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      redispatch:
        $ref: '#/definitions/redispatch'
      retries:
        type: integer
        x-nullable: true
      retry_on:
        type: string
        x-display-name: Specify when to attempt to automatically retry a failed request
      server_fin_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      server_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      smtpchk_params:
        $ref: '#/definitions/smtpchk_params'
        x-dependency:
          adv_check:
            value: smtpchk
      socket_stats:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Socket Stats
      source:
        $ref: '#/definitions/source'
      splice_auto:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Splice Auto
      splice_request:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Splice Request
      splice_response:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Splice Response
      srvtcpka:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Server TCP Keep Alive
      srvtcpka_cnt:
        type: integer
        x-display-name: Srvtcpka Cnt
        x-nullable: true
      srvtcpka_idle:
        type: integer
        x-default-unit: s
        x-display-name: Srvtcpka Idle
        x-duration: true
        x-nullable: true
      srvtcpka_intvl:
        type: integer
        x-default-unit: s
        x-display-name: Srvtcpka Intvl
        x-duration: true
        x-nullable: true
      stats_options:
        $ref: '#/definitions/stats_options'
      tarpit_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      tcp_smart_accept:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Tcp Smart Accept
      tcp_smart_connect:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Tcp Smart Connect
      tcpka:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: TCP Keep Alive
      tcplog:
        type: boolean
        x-display-name: TCP Log
      transparent:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Transparent
      tunnel_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      unique_id_format:
        type: string
        x-display-name: Unique ID format
      unique_id_header:
        type: string
        x-display-name: Unique ID header
    title: Defaults Base
    type: object
  defaults_sections:
    title: Defaults Sections
    description: HAProxy defaults sections array
    type: array
    items:
      $ref: '#/definitions/defaults'
  frontend:
    allOf:
      - $ref: '#/definitions/frontend_base'
      - properties:
          acl_list:
            $ref: '#/definitions/acls'
            x-go-name: AclList
          backend_switching_rule_list:
            $ref: '#/definitions/backend_switching_rules'
            x-go-name: BackendSwitchingRuleList
          binds:
            additionalProperties:
              $ref: '#/definitions/bind'
          capture_list:
            $ref: '#/definitions/captures'
            x-go-name: CaptureList
          filter_list:
            $ref: '#/definitions/filters'
            x-go-name: FilterList
          http_after_response_rule_list:
            $ref: '#/definitions/http_after_response_rules'
            x-go-name: HTTPAfterResponseRuleList
          http_error_rule_list:
            $ref: '#/definitions/http_error_rules'
            x-go-name: HTTPErrorRuleList
          http_request_rule_list:
            $ref: '#/definitions/http_request_rules'
            x-go-name: HTTPRequestRuleList
          http_response_rule_list:
            $ref: '#/definitions/http_response_rules'
            x-go-name: HTTPResponseRuleList
          log_target_list:
            $ref: '#/definitions/log_targets'
            x-go-name: LogTargetList
          quic_initial_rule_list:
            $ref: '#/definitions/quic_initial_rules'
            x-go-name: QUICInitialRuleList
          tcp_request_rule_list:
            $ref: '#/definitions/tcp_request_rules'
            x-go-name: TCPRequestRuleList
        type: object
    description: Frontend with all it's children resources
    type: object
    x-go-name: Frontend
  frontend_base:
    additionalProperties: false
    description: HAProxy frontend configuration
    example:
      default_backend: test_backend
      http_connection_mode: http-keep-alive
      maxconn: 2000
      mode: http
      name: test_frontend
    properties:
      accept_invalid_http_request:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Accept Invalid HTTP Request
      accept_unsafe_violations_in_http_request:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Accept Unsafe Violations in HTTP Request
      backlog:
        type: integer
        x-display-name: Backlog
        x-nullable: true
      clflog:
        type: boolean
        x-dependency:
          mode:
            value: http
        x-display-name: CLF Log
      client_fin_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      client_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      clitcpka:
        enum:
          - enabled
          - disabled
        type: string
        x-dependency:
          mode:
            value: tcp
        x-display-name: Client TCP Keep Alive
      clitcpka_cnt:
        type: integer
        x-display-name: Clitcpka Cnt
        x-nullable: true
      clitcpka_idle:
        type: integer
        x-default-unit: s
        x-display-name: Clitcpka Idle
        x-duration: true
        x-nullable: true
      clitcpka_intvl:
        type: integer
        x-default-unit: s
        x-display-name: Clitcpka Intvl
        x-duration: true
        x-nullable: true
      compression:
        $ref: '#/definitions/compression'
      contstats:
        enum:
          - enabled
        type: string
        x-display-name: Continuous Statistics
      default_backend:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
        x-dynamic-enum:
          operation: getBackends
          property: name
      description:
        type: string
        x-display-name: Description
      disable_h2_upgrade:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Disable HTTP/2 Upgrade
      disabled:
        type: boolean
      dontlog_normal:
        enum:
          - enabled
          - disabled
        type: string
      dontlognull:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Don't Log Null
      email_alert:
        $ref: '#/definitions/email_alert'
      enabled:
        type: boolean
      error_files:
        items:
          $ref: '#/definitions/errorfile'
        type: array
        x-go-name: ErrorFiles
        x-omitempty: true
      error_log_format:
        type: string
      errorfiles_from_http_errors:
        items:
          $ref: '#/definitions/errorfiles'
        type: array
        x-go-name: ErrorFilesFromHTTPErrors
        x-omitempty: true
      errorloc302:
        $ref: '#/definitions/errorloc'
      errorloc303:
        $ref: '#/definitions/errorloc'
      forwardfor:
        $ref: '#/definitions/forwardfor'
        x-dependency:
          mode:
            value: http
      from:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
      guid:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
      h1_case_adjust_bogus_client:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: H1 Adjust Bogus Client
      http-buffer-request:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: HTTP bufferrequest
      http-use-htx:
        enum:
          - enabled
          - disabled
        type: string
        x-dependency:
          mode:
            value: http
        x-display-name: HTTP Use HTX
      http_connection_mode:
        enum:
          - httpclose
          - http-server-close
          - http-keep-alive
        type: string
        x-dependency:
          mode:
            value: http
      http_ignore_probes:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: HTTP Ignore Probes
      http_keep_alive_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-dependency:
          mode:
            value: http
        x-duration: true
        x-nullable: true
      http_no_delay:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: HTTP No Delay
      http_request_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-dependency:
          mode:
            value: http
        x-duration: true
        x-nullable: true
      http_restrict_req_hdr_names:
        enum:
          - preserve
          - delete
          - reject
        type: string
        x-display-name: Restrict HTTP Request Header Names
      http_use_proxy_header:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: HTTP Use Proxy Header
      httplog:
        type: boolean
        x-dependency:
          mode:
            value: http
        x-display-name: HTTP Log
      httpslog:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Httpslog
      id:
        type: integer
        x-nullable: true
      idle_close_on_response:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Idle Close On Response
      independent_streams:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Independent Streams
      log_format:
        type: string
      log_format_sd:
        type: string
        x-display-name: Log Format SD
      log_separate_errors:
        enum:
          - enabled
          - disabled
        type: string
      log_steps:
        items:
          enum:
            - accept
            - request
            - connect
            - response
            - close
            - error
            - any
          type: string
        type: array
        x-go-name: LogSteps
        x-omitempty: true
      log_tag:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
      logasap:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Log ASAP
      maxconn:
        type: integer
        x-display-name: Max Connections
        x-nullable: true
      mode:
        enum:
          - http
          - tcp
        type: string
      monitor_fail:
        $ref: '#/definitions/monitor_fail'
      monitor_uri:
        $ref: '#/definitions/monitor_uri'
      name:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
        x-nullable: false
      nolinger:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Nolinger
      originalto:
        $ref: '#/definitions/originalto'
      socket_stats:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Socket Stats
      splice_auto:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Splice Auto
      splice_request:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Splice Request
      splice_response:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Splice Response
      stats_options:
        $ref: '#/definitions/stats_options'
      stick_table:
        $ref: '#/definitions/config_stick_table'
      tarpit_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      tcp_smart_accept:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Tcp Smart Accept
      tcpka:
        enum:
          - enabled
          - disabled
        type: string
        x-dependency:
          mode:
            value: tcp
        x-display-name: TCP Keep Alive
      tcplog:
        type: boolean
        x-dependency:
          mode:
            value: tcp
        x-display-name: TCP Log
      unique_id_format:
        type: string
        x-display-name: Unique ID format
      unique_id_header:
        type: string
        x-display-name: Unique ID header
    required:
      - name
    title: Frontend Base
    type: object
  frontends:
    title: Frontends
    description: HAProxy frontends array
    type: array
    items:
      $ref: '#/definitions/frontend'
  backend:
    allOf:
      - $ref: '#/definitions/backend_base'
      - properties:
          acl_list:
            $ref: '#/definitions/acls'
            x-go-name: AclList
          filter_list:
            $ref: '#/definitions/filters'
            x-go-name: FilterList
          http_after_response_rule_list:
            $ref: '#/definitions/http_after_response_rules'
            x-go-name: HTTPAfterResponseRuleList
          http_check_list:
            $ref: '#/definitions/http_checks'
            x-go-name: HTTPCheckList
          http_error_rule_list:
            $ref: '#/definitions/http_error_rules'
            x-go-name: HTTPErrorRuleList
          http_request_rule_list:
            $ref: '#/definitions/http_request_rules'
            x-go-name: HTTPRequestRuleList
          http_response_rule_list:
            $ref: '#/definitions/http_response_rules'
            x-go-name: HTTPResponseRuleList
          log_target_list:
            $ref: '#/definitions/log_targets'
            x-go-name: LogTargetList
          server_switching_rule_list:
            $ref: '#/definitions/server_switching_rules'
            x-go-name: ServerSwitchingRuleList
          server_templates:
            additionalProperties:
              $ref: '#/definitions/server_template'
          servers:
            additionalProperties:
              $ref: '#/definitions/server'
          stick_rule_list:
            $ref: '#/definitions/stick_rules'
            x-go-name: StickRuleList
          tcp_check_rule_list:
            $ref: '#/definitions/tcp_checks'
            x-go-name: TCPCheckRuleList
          tcp_request_rule_list:
            $ref: '#/definitions/tcp_request_rules'
            x-go-name: TCPRequestRuleList
          tcp_response_rule_list:
            $ref: '#/definitions/tcp_response_rules'
            x-go-name: TCPResponseRuleList
        type: object
    description: Backend with all it's children resources
    type: object
    x-go-name: Backend
  backend_base:
    additionalProperties: false
    description: HAProxy backend configuration
    example:
      adv_check: httpchk
      balance:
        algorithm: roundrobin
      forwardfor:
        enabled: enabled
      httpchk_params:
        method: GET
        uri: /check
        version: HTTP/1.1
      mode: http
      name: test_backend
    properties:
      abortonclose:
        enum:
          - enabled
          - disabled
        type: string
      accept_invalid_http_response:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Accept Invalid HTTP Response
      accept_unsafe_violations_in_http_response:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Accept Unsafe Violations in HTTP Response
      adv_check:
        enum:
          - httpchk
          - ldap-check
          - mysql-check
          - pgsql-check
          - redis-check
          - smtpchk
          - ssl-hello-chk
          - tcp-check
        type: string
        x-display-name: Advanced Check
      allbackups:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: All Backups
      balance:
        $ref: '#/definitions/balance'
      check_timeout:
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      checkcache:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Checkcache
      compression:
        $ref: '#/definitions/compression'
      connect_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      cookie:
        $ref: '#/definitions/cookie'
        x-dependency:
          mode:
            value: http
      default_server:
        $ref: '#/definitions/default_server'
      description:
        type: string
        x-display-name: Description
      disabled:
        type: boolean
      dynamic_cookie_key:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          cookie.dynamic:
            value: true
      email_alert:
        $ref: '#/definitions/email_alert'
      enabled:
        type: boolean
      error_files:
        items:
          $ref: '#/definitions/errorfile'
        type: array
        x-go-name: ErrorFiles
        x-omitempty: true
      errorfiles_from_http_errors:
        items:
          $ref: '#/definitions/errorfiles'
        type: array
        x-go-name: ErrorFilesFromHTTPErrors
        x-omitempty: true
      errorloc302:
        $ref: '#/definitions/errorloc'
      errorloc303:
        $ref: '#/definitions/errorloc'
      external_check:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: External Check
      external_check_command:
        pattern: ^[^\s]+$
        type: string
        x-display-name: External Check Command
      external_check_path:
        pattern: ^[^\s]+$
        type: string
        x-display-name: External Check Path
      force_persist:
        description: This field is deprecated in favor of force_persist_list, and will be removed in a future release
        properties:
          cond:
            enum:
              - if
              - unless
            type: string
            x-display-name: Condition
          cond_test:
            type: string
            x-dependency:
              cond:
                required: true
            x-display-name: Condition Test
        required:
          - cond
          - cond_test
        type: object
        x-deprecated: true
        x-go-name: BackendForcePersist
      force_persist_list:
        items:
          properties:
            cond:
              enum:
                - if
                - unless
              type: string
              x-display-name: Condition
            cond_test:
              type: string
              x-dependency:
                cond:
                  required: true
              x-display-name: Condition Test
          required:
            - cond
            - cond_test
          type: object
          x-go-name: ForcePersist
        type: array
        x-go-name: ForcePersistList
        x-omitempty: true
      forwardfor:
        $ref: '#/definitions/forwardfor'
        x-dependency:
          mode:
            value: http
      from:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
      fullconn:
        type: integer
        x-nullable: true
      guid:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
      h1_case_adjust_bogus_server:
        enum:
          - enabled
          - disabled
        type: string
        x-dependency:
          mode:
            value: http
        x-display-name: H1 Adjust Bogus Server
      hash_balance_factor:
        type: integer
        x-nullable: true
      hash_type:
        $ref: '#/definitions/hash_type'
      http-buffer-request:
        enum:
          - enabled
          - disabled
        type: string
        x-dependency:
          mode:
            value: http
        x-display-name: HTTP bufferrequest
      http-no-delay:
        enum:
          - enabled
          - disabled
        type: string
        x-dependency:
          mode:
            value: http
        x-display-name: HTTP low interactive delays
      http-use-htx:
        enum:
          - enabled
          - disabled
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          mode:
            value: http
      http_connection_mode:
        enum:
          - httpclose
          - http-server-close
          - http-keep-alive
        type: string
        x-dependency:
          mode:
            value: http
      http_keep_alive_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-dependency:
          mode:
            value: http
        x-duration: true
        x-nullable: true
      http_pretend_keepalive:
        enum:
          - enabled
          - disabled
        type: string
        x-dependency:
          mode:
            value: http
      http_proxy:
        enum:
          - enabled
          - disabled
        type: string
        x-dependency:
          mode:
            value: http
        x-display-name: HTTP proxy mode
      http_request_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-dependency:
          mode:
            value: http
        x-duration: true
        x-nullable: true
      http_restrict_req_hdr_names:
        enum:
          - preserve
          - delete
          - reject
        type: string
        x-display-name: Restrict HTTP Request Header Names
      http_reuse:
        enum:
          - aggressive
          - always
          - never
          - safe
        type: string
        x-dependency:
          mode:
            value: http
      http_send_name_header:
        type: string
        x-display-name: The header string to use to send the server name
        x-nullable: true
      httpchk_params:
        $ref: '#/definitions/httpchk_params'
        x-dependency:
          adv_check:
            value: httpchk
          mode:
            value: http
      id:
        type: integer
        x-nullable: true
      ignore_persist:
        description: This field is deprecated in favor of ignore_persist_list, and will be removed in a future release
        properties:
          cond:
            enum:
              - if
              - unless
            type: string
            x-display-name: Condition
          cond_test:
            type: string
            x-dependency:
              cond:
                required: true
            x-display-name: Condition Test
        required:
          - cond
          - cond_test
        type: object
        x-deprecated: true
        x-go-name: BackendIgnorePersist
      ignore_persist_list:
        items:
          properties:
            cond:
              enum:
                - if
                - unless
              type: string
              x-display-name: Condition
            cond_test:
              type: string
              x-dependency:
                cond:
                  required: true
              x-display-name: Condition Test
          required:
            - cond
            - cond_test
          type: object
          x-go-name: IgnorePersist
        type: array
        x-go-name: IgnorePersistList
        x-omitempty: true
      independent_streams:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Independent Streams
      load_server_state_from_file:
        enum:
          - global
          - local
          - none
        type: string
      log_health_checks:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Log Health Checks
      log_tag:
        pattern: ^[^\s]+$
        type: string
      max_keep_alive_queue:
        type: integer
        x-display-name: Maximum keep alive queue
        x-nullable: true
      mode:
        enum:
          - http
          - tcp
          - log
        type: string
      mysql_check_params:
        $ref: '#/definitions/mysql_check_params'
        x-dependency:
          adv_check:
            value: mysql-check
      name:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
        x-nullable: false
      nolinger:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Nolinger
      originalto:
        $ref: '#/definitions/originalto'
      persist:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Persist
      persist_rule:
        $ref: '#/definitions/persist_rule'
      pgsql_check_params:
        $ref: '#/definitions/pgsql_check_params'
        x-dependency:
          adv_check:
            value: pgsql-check
      prefer_last_server:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Prefer Last Server
      queue_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      redispatch:
        $ref: '#/definitions/redispatch'
      retries:
        type: integer
        x-nullable: true
      retry_on:
        type: string
        x-display-name: Retry on
      server_fin_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      server_state_file_name:
        type: string
        x-display-name: Server state file
      server_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      smtpchk_params:
        $ref: '#/definitions/smtpchk_params'
        x-dependency:
          adv_check:
            value: smtpchk
      source:
        $ref: '#/definitions/source'
      splice_auto:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Splice Auto
      splice_request:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Splice Request
      splice_response:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Splice Response
      spop_check:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Spop Check
      srvtcpka:
        enum:
          - enabled
          - disabled
        type: string
        x-dependency:
          mode:
            value: tcp
        x-display-name: Server TCP Keep Alive
      srvtcpka_cnt:
        type: integer
        x-display-name: Srvtcpka Cnt
        x-nullable: true
      srvtcpka_idle:
        type: integer
        x-default-unit: s
        x-display-name: Srvtcpka Idle
        x-duration: true
        x-nullable: true
      srvtcpka_intvl:
        type: integer
        x-default-unit: s
        x-display-name: Srvtcpka Intvl
        x-duration: true
        x-nullable: true
      stats_options:
        $ref: '#/definitions/stats_options'
      stick_table:
        $ref: '#/definitions/config_stick_table'
      tarpit_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      tcp_smart_connect:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Tcp Smart Connect
      tcpka:
        enum:
          - enabled
          - disabled
        type: string
        x-dependency:
          mode:
            value: tcp
        x-display-name: TCP Keep Alive
      transparent:
        enum:
          - enabled
          - disabled
        type: string
        x-display-name: Transparent
      tunnel_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      use_fcgi_app:
        type: string
        x-display-name: FastCGI application
    required:
      - name
    title: Backend Base
    type: object
  backends:
    title: Backends
    description: HAProxy backends array
    type: array
    items:
      $ref: '#/definitions/backend'
  ring:
    allOf:
      - $ref: '#/definitions/ring_base'
      - properties:
          servers:
            additionalProperties:
              $ref: '#/definitions/server'
        type: object
    description: Ring with all it's children resources
    type: object
    x-go-name: Ring
  ring_base:
    additionalProperties: false
    description: HAProxy ring configuration
    properties:
      description:
        type: string
        x-display-name: The description is an optional description string of the ring
      format:
        enum:
          - iso
          - local
          - raw
          - rfc3164
          - rfc5424
          - short
          - priority
          - timed
        type: string
        x-display-name: Format used to store events into the ring buffer
      maxlen:
        type: integer
        x-display-name: The maximum length of an event message stored into the ring
        x-nullable: true
      name:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
        x-nullable: false
      size:
        minimum: 0
        type: integer
        x-display-name: Optional size in bytes for the ring-buffer
        x-nullable: true
        x-size: true
      timeout_connect:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      timeout_server:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
    required:
      - name
    title: Ring Base
    type: object
  rings:
    title: Rings
    description: HAProxy rings array
    type: array
    items:
      $ref: '#/definitions/ring'
  dgram_bind:
    description: HAProxy log forward dgram bind configuration
    properties:
      address:
        pattern: ^[^\s]+$
        type: string
      interface:
        type: string
      name:
        pattern: ^[^\s]+$
        type: string
        x-nullable: false
      namespace:
        type: string
      port:
        maximum: 65535
        minimum: 1
        type: integer
        x-nullable: true
      port-range-end:
        maximum: 65535
        minimum: 1
        type: integer
        x-nullable: true
      transparent:
        type: boolean
    title: Dgram Bind
    type: object
  dgram_binds:
    title: Dgram Bind
    description: HAProxy dgram bind array
    type: array
    items:
      $ref: '#/definitions/dgram_bind'
  log_forward:
    allOf:
      - $ref: '#/definitions/log_forward_base'
      - properties:
          binds:
            additionalProperties:
              $ref: '#/definitions/bind'
          dgram_binds:
            additionalProperties:
              $ref: '#/definitions/dgram_bind'
          log_target_list:
            $ref: '#/definitions/log_targets'
            x-go-name: LogTargetList
        type: object
    description: LogForward with all it's children resources
    type: object
    x-go-name: LogForward
  log_forward_base:
    additionalProperties: false
    description: HAProxy log forward configuration
    properties:
      backlog:
        type: integer
        x-nullable: true
      maxconn:
        type: integer
        x-nullable: true
      name:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
        x-nullable: false
      timeout_client:
        maximum: 2147483647
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
    required:
      - name
    title: Log Forward
    type: object
  log_forwards:
    title: Log Forwards
    description: HAProxy log forwards array
    type: array
    items:
      $ref: '#/definitions/log_forward'
  userlist:
    allOf:
      - $ref: '#/definitions/userlist_base'
      - properties:
          groups:
            additionalProperties:
              $ref: '#/definitions/group'
          users:
            additionalProperties:
              $ref: '#/definitions/user'
        type: object
    description: Userlist with all it's children resources
    type: object
    x-go-name: Userlist
  userlist_base:
    description: HAProxy configuration of access control
    properties:
      name:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
        x-nullable: false
    required:
      - name
    title: Userlist Base
    type: object
  userlists:
    title: Userlists
    description: HAProxy userlists array
    type: array
    items:
      $ref: '#/definitions/userlist'
  user:
    description: HAProxy userlist user
    properties:
      groups:
        type: string
        x-nullable: false
      password:
        type: string
        x-nullable: false
      secure_password:
        type: boolean
      username:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
        x-nullable: false
    required:
      - username
      - secure_password
      - password
    title: User
  users:
    title: Users
    description: HAProxy userlist users array
    type: array
    items:
      $ref: '#/definitions/user'
  group:
    description: HAProxy userlist group
    properties:
      name:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
        x-nullable: false
      users:
        type: string
        x-nullable: false
    required:
      - name
    title: Group
    type: object
  groups:
    title: Groups
    description: HAProxy userlist groups array
    type: array
    items:
      $ref: '#/definitions/group'
  mailers_section:
    allOf:
      - $ref: '#/definitions/mailers_section_base'
      - properties:
          mailer_entries:
            additionalProperties:
              $ref: '#/definitions/mailer_entry'
        type: object
    description: MailersSection with all it's children resources
    type: object
    x-go-name: MailersSection
  mailers_section_base:
    additionalProperties: false
    description: A list of SMTP servers used by HAProxy to send emails.
    properties:
      name:
        pattern: ^[A-Za-z0-9-_]+$
        type: string
        x-nullable: false
      timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-display-name: Timeout to send an email in milliseconds
        x-duration: true
        x-nullable: true
    required:
      - name
    title: Mailers Section Base
    type: object
  mailers_sections:
    title: Mailers Sections
    description: HAProxy mailers_section array
    type: array
    items:
      $ref: "#/definitions/mailers_section"
  mailer_entry:
    description: Mailer entry of a Mailers section
    properties:
      address:
        pattern: ^\S+$
        type: string
        x-nullable: false
      name:
        pattern: ^[A-Za-z0-9-_]+$
        type: string
        x-nullable: false
      port:
        maximum: 65535
        minimum: 1
        type: integer
        x-nullable: false
    required:
      - name
      - address
      - port
    title: Mailer Entry
    type: object
  mailer_entries:
    title: Mailer Entries
    description: HAProxy mailer entries
    type: array
    items:
      $ref: "#/definitions/mailer_entry"
  peer_section:
    allOf:
      - $ref: '#/definitions/peer_section_base'
      - properties:
          binds:
            additionalProperties:
              $ref: '#/definitions/bind'
          log_target_list:
            $ref: '#/definitions/log_targets'
            x-go-name: LogTargetList
          peer_entries:
            additionalProperties:
              $ref: '#/definitions/peer_entry'
          servers:
            additionalProperties:
              $ref: '#/definitions/server'
          tables:
            additionalProperties:
              $ref: '#/definitions/table'
        type: object
    description: Peer Section with all it's children resources
    type: object
    x-go-name: PeerSection
  peer_section_base:
    additionalProperties: false
    description: HAProxy peer_section configuration
    properties:
      default_bind:
        $ref: '#/definitions/default_bind'
      default_server:
        $ref: '#/definitions/default_server'
      disabled:
        type: boolean
      enabled:
        type: boolean
      name:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
        x-nullable: false
      shards:
        description: |-
          In some configurations, one would like to distribute the stick-table contents
          to some peers in place of sending all the stick-table contents to each peer
          declared in the "peers" section. In such cases, "shards" specifies the
          number of peer involved in this stick-table contents distribution.
        type: integer
    required:
      - name
    title: Peer Section Base
    type: object
  peer_sections:
    title: Peer_Section
    description: HAProxy peer_section array
    type: array
    items:
      $ref: '#/definitions/peer_section'
  peer_entry:
    description: Peer Entry from peers table
    properties:
      address:
        pattern: ^[^\s]+$
        type: string
      name:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
        x-nullable: false
      port:
        maximum: 65535
        minimum: 1
        type: integer
        x-nullable: true
      shard:
        type: integer
    required:
      - name
      - address
      - port
    title: Peer Entry
    type: object
  peer_entries:
    title: Peer entries
    description: HAProxy peer entries array
    type: array
    items:
      $ref: '#/definitions/peer_entry'
  http_errors_section:
    additionalProperties: false
    description: A globally declared group of HTTP errors
    example:
      error_files:
        - code: 400
          name: /etc/haproxy/errorfiles/site1/400.http
        - code: 404
          name: /etc/haproxy/errorfiles/site1/404.http
      name: website-1
    properties:
      error_files:
        items:
          $ref: '#/definitions/errorfile'
        type: array
        x-go-name: ErrorFiles
      name:
        pattern: ^[A-Za-z0-9-_]+$
        type: string
        x-nullable: false
    required:
      - name
      - error_files
    title: http-errors section
    type: object
  http_errors_sections:
    title: http-errors sections
    description: An array of HAProxy http-error sections
    type: array
    items:
      $ref: "#/definitions/http_errors_section"
  bind:
    allOf:
      - $ref: '#/definitions/bind_params'
      - additionalProperties: false
        properties:
          address:
            example: 127.0.0.1
            pattern: ^[^\s]+$
            type: string
          port:
            example: 80
            maximum: 65535
            minimum: 1
            type: integer
            x-nullable: true
          port-range-end:
            example: 81
            maximum: 65535
            minimum: 1
            type: integer
            x-nullable: true
        type: object
    description: HAProxy frontend bind configuration
    title: Bind
  binds:
    title: Binds
    description: HAProxy frontend binds array (corresponds to bind directives)
    type: array
    items:
      $ref: '#/definitions/bind'
  server:
    additionalProperties: false
    allOf:
      - $ref: '#/definitions/server_params'
      - properties:
          address:
            pattern: ^[^\s]+$
            type: string
            x-nullable: false
          id:
            type: integer
            x-nullable: true
          metadata:
            additionalProperties:
              type: object
          name:
            pattern: ^[^\s]+$
            type: string
            x-nullable: false
          port:
            maximum: 65535
            minimum: 1
            type: integer
            x-nullable: true
        required:
          - name
          - address
        type: object
    description: HAProxy backend server configuration
    example:
      address: 10.1.1.1
      name: www
      port: 8080
    title: Server
  servers:
    title: Servers
    description: HAProxy backend servers array
    type: array
    items:
      $ref: '#/definitions/server'
  server_template:
    additionalProperties: false
    allOf:
      - $ref: '#/definitions/server_params'
      - properties:
          fqdn:
            type: string
            x-nullable: false
          id:
            type: integer
            x-nullable: true
          num_or_range:
            type: string
            x-nullable: false
          port:
            maximum: 65535
            minimum: 1
            type: integer
            x-nullable: true
          prefix:
            pattern: ^[^\s]+$
            type: string
            x-nullable: false
        required:
          - prefix
          - num_or_range
          - fqdn
        type: object
    description: Set a template to initialize servers with shared parameters.
    example:
      fqdn: google.com
      num_or_range: 1-3
      port: 80
      prefix: srv
    title: Server template
  server_templates:
    title: Server templates
    description: HAProxy backend server templates array
    type: array
    items:
      $ref: '#/definitions/server_template'
  config_stick_table:
    properties:
      expire:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      keylen:
        type: integer
        x-display-name: Key Length
        x-nullable: true
      nopurge:
        type: boolean
        x-display-name: No Purge
      peers:
        pattern: ^[^\s]+$
        type: string
      size:
        minimum: 0
        type: integer
        x-nullable: true
        x-size: true
      srvkey:
        enum:
          - addr
          - name
        type: string
        x-nullable: true
      store:
        pattern: ^[^\s]+$
        type: string
      type:
        enum:
          - ip
          - ipv6
          - integer
          - string
          - binary
        type: string
      write_to:
        pattern: ^[^\s]+$
        type: string
        x-nullable: true
    type: object
  http_request_rule:
    additionalProperties: false
    description: HAProxy HTTP request rule configuration (corresponds to http-request directives)
    example:
      cond: unless
      cond_test: '{ src 192.168.0.0/16 }'
      hdr_format: '%T'
      hdr_name: X-Haproxy-Current-Date
      index: 0
      type: add-header
    properties:
      acl_file:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - add-acl
              - del-acl
        x-display-name: ACL File
      acl_keyfmt:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - add-acl
              - del-acl
        x-display-name: ACL Key Format
      auth_realm:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            value: auth
        x-display-name: Authentication Realm
      bandwidth_limit_limit:
        type: string
        x-dependency:
          type:
            value: set-bandwidth-limit
        x-display-name: Standard HAProxy expression
      bandwidth_limit_name:
        type: string
        x-dependency:
          type:
            value: set-bandwidth-limit
        x-display-name: Bandwidth limit name
      bandwidth_limit_period:
        type: string
        x-dependency:
          type:
            value: set-bandwidth-limit
        x-display-name: Standard HAProxy expression
      cache_name:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: cache-use
        x-display-name: Cache Name
      capture_id:
        type: integer
        x-dependency:
          type:
            value: capture
        x-display-name: Capture SlotID
        x-nullable: true
      capture_len:
        type: integer
        x-dependency:
          type:
            required: true
            value: capture
        x-display-name: Capture Len
      capture_sample:
        pattern: ^(?:[A-Za-z]+\("([A-Za-z\s]+)"\)|[A-Za-z]+)
        type: string
        x-dependency:
          type:
            value: capture
        x-display-name: Capture Sample
      cond:
        enum:
          - if
          - unless
        type: string
        x-display-name: Condition
      cond_test:
        type: string
        x-dependency:
          cond:
            required: true
        x-display-name: Condition Test
        x-dynamic-enum:
          freeFormat: true
          operation: getACLs
          property: acl_name
      deny_status:
        maximum: 599
        minimum: 200
        type: integer
        x-dependency:
          type:
            value:
              - deny
              - tarpit
        x-nullable: true
      expr:
        type: string
        x-dependency:
          type:
            required: true
            value:
              - do-resolve
              - set-bc-mark
              - set-bc-tos
              - set-dst
              - set-dst-port
              - set-fc-mark
              - set-fc-tos
              - set-priority-class
              - set-priority-offset
              - set-src
              - set-src-port
              - set-retries
        x-display-name: Standard HAProxy expression
      hdr_format:
        type: string
        x-dependency:
          type:
            required: true
            value:
              - replace-header
              - replace-value
              - set-header
              - add-header
        x-display-name: Header Format
      hdr_match:
        type: string
        x-dependency:
          type:
            required: true
            value:
              - replace-header
              - replace-value
        x-display-name: Header Match
      hdr_method:
        type: string
        x-dependency:
          type:
            value:
              - del-header
        x-display-name: Header Match Method
      hdr_name:
        type: string
        x-dependency:
          type:
            required: true
            value:
              - add-header
              - replace-header
              - del-header
              - set-header
              - replace-value
        x-display-name: Header Name
      hint_format:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: early-hint
        x-display-name: Hint Format
      hint_name:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: early-hint
        x-display-name: Hint Name
      log_level:
        enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - silent
        type: string
        x-dependency:
          type:
            required: true
            value: set-log-level
      lua_action:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: lua
      lua_params:
        type: string
        x-dependency:
          type:
            value: lua
      map_file:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - set-map
              - del-map
      map_keyfmt:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - set-map
              - del-map
        x-display-name: Map Key Format
      map_valuefmt:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: set-map
        x-display-name: Map Value Format
      mark_value:
        pattern: ^(0x[0-9A-Fa-f]+|[0-9]+)$
        type: string
        x-dependency:
          type:
            required: true
            value: set-mark
        x-display-name: Mark Value
      method_fmt:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: set-method
      nice_value:
        maximum: 1024
        minimum: -1024
        type: integer
        x-dependency:
          type:
            required: true
            value: set-nice
        x-display-name: Nice Value
        x-nullable: false
      normalizer:
        enum:
          - fragment-encode
          - fragment-strip
          - path-merge-slashes
          - path-strip-dot
          - path-strip-dotdot
          - percent-decode-unreserved
          - percent-to-uppercase
          - query-sort-by-name
        type: string
        x-dependency:
          type:
            required: true
            value: normalize-uri
      normalizer_full:
        type: boolean
        x-dependency:
          normalizer:
            value: path-strip-dotdot
          type:
            value: normalize-uri
      normalizer_strict:
        type: boolean
        x-dependency:
          normalizer:
            value:
              - percent-decode-unreserved
              - percent-to-uppercase
          type:
            value: normalize-uri
      path_fmt:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - set-path
              - set-pathq
              - replace-path
              - replace-pathq
      path_match:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - set-path
              - set-pathq
              - replace-path
              - replace-pathq
      protocol:
        enum:
          - ipv4
          - ipv6
        type: string
        x-dependency:
          type:
            required: false
            value: do-resolve
        x-display-name: Protocol
      query-fmt:
        type: string
        x-dependency:
          type:
            required: true
            value: set-query
      redir_code:
        enum:
          - 301
          - 302
          - 303
          - 307
          - 308
        type: integer
        x-dependency:
          type:
            value: redirect
        x-display-name: Redirect Code
        x-nullable: true
      redir_option:
        type: string
        x-dependency:
          type:
            value: redirect
        x-display-name: Redirect Option
      redir_type:
        enum:
          - location
          - prefix
          - scheme
        type: string
        x-dependency:
          type:
            required: true
            value: redirect
        x-display-name: Redirect Type
      redir_value:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: redirect
        x-display-name: Redirect Value
      resolvers:
        type: string
        x-dependency:
          type:
            required: true
            value: do-resolve
        x-display-name: Resolvers
      return_content:
        type: string
        x-dependency:
          return_content_format:
            required: true
            value:
              - errofile
              - errorfiles
              - file
              - lf-file
              - string
              - lf-string
      return_content_format:
        enum:
          - default-errorfiles
          - errorfile
          - errorfiles
          - file
          - lf-file
          - string
          - lf-string
        type: string
        x-dependency:
          type:
            value:
              - deny
              - tarpit
              - return
      return_content_type:
        type: string
        x-dependency:
          type:
            value:
              - deny
              - tarpit
              - return
        x-display-name: Return content type
        x-nullable: true
      return_hdrs:
        items:
          $ref: '#/definitions/return_header'
        type: array
        x-dependency:
          return_content_format:
            value:
              - file
              - lf-file
              - string
              - lf-string
        x-go-name: ReturnHeaders
        x-omitempty: true
      return_status_code:
        maximum: 599
        minimum: 200
        type: integer
        x-dependency:
          type:
            value: return
        x-display-name: Return Error Code
        x-nullable: true
      rst_ttl:
        type: integer
        x-dependency:
          type:
            required: true
            value:
              - silent-drop
        x-display-name: RST TTL
      sc_expr:
        type: string
        x-dependency:
          type:
            required: true
            value:
              - sc-add-gpc
              - sc-set-gpt0
        x-display-name: ScSet Expression Value
      sc_id:
        type: integer
        x-dependency:
          type:
            required: true
            value:
              - sc-add-gpc
              - sc-inc-gpc
              - sc-inc-gpc0
              - sc-inc-gpc1
              - sc-set-gpt
              - sc-set-gpt0
      sc_idx:
        type: integer
        x-dependency:
          type:
            required: true
            value:
              - sc-add-gpc
              - sc-inc-gpc
              - sc-set-gpt
      sc_int:
        type: integer
        x-dependency:
          type:
            required: true
            value:
              - sc-add-gpc
              - sc-set-gpt0
        x-display-name: ScSet Integer Value
        x-nullable: true
      service_name:
        type: string
        x-dependency:
          type:
            required: true
            value: use-service
      spoe_engine:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: send-spoe-group
        x-display-name: SPOE Engine
      spoe_group:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: send-spoe-group
        x-display-name: SPOE Group
      strict_mode:
        enum:
          - "on"
          - "off"
        type: string
        x-dependency:
          type:
            required: true
            value: strict-mode
      timeout:
        type: string
        x-dependency:
          type:
            required: true
            value: set-timeout
      timeout_type:
        enum:
          - server
          - tunnel
          - client
        type: string
        x-dependency:
          type:
            required: true
            value: set-timeout
      tos_value:
        pattern: ^(0x[0-9A-Fa-f]+|[0-9]+)$
        type: string
        x-dependency:
          type:
            required: true
            value: set-tos
        x-display-name: Tos Value
      track_sc_key:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: track-sc
        x-display-name: track-sc Key
      track_sc_stick_counter:
        type: integer
        x-dependency:
          type:
            value: track-sc
        x-display-name: track-sc StickCounter
        x-nullable: true
      track_sc_table:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            value: track-sc
        x-display-name: track-sc Table
      type:
        enum:
          - add-acl
          - add-header
          - allow
          - auth
          - cache-use
          - capture
          - del-acl
          - del-header
          - del-map
          - deny
          - disable-l7-retry
          - do-resolve
          - early-hint
          - lua
          - normalize-uri
          - redirect
          - reject
          - replace-header
          - replace-path
          - replace-pathq
          - replace-uri
          - replace-value
          - return
          - sc-add-gpc
          - sc-inc-gpc
          - sc-inc-gpc0
          - sc-inc-gpc1
          - sc-set-gpt
          - sc-set-gpt0
          - send-spoe-group
          - set-bc-mark
          - set-bc-tos
          - set-dst
          - set-dst-port
          - set-fc-mark
          - set-fc-tos
          - set-header
          - set-log-level
          - set-map
          - set-mark
          - set-method
          - set-nice
          - set-path
          - set-pathq
          - set-priority-class
          - set-priority-offset
          - set-query
          - set-src
          - set-src-port
          - set-timeout
          - set-tos
          - set-uri
          - set-var
          - set-var-fmt
          - silent-drop
          - strict-mode
          - tarpit
          - track-sc
          - unset-var
          - use-service
          - wait-for-body
          - wait-for-handshake
          - set-bandwidth-limit
          - set-retries
          - do-log
        type: string
        x-nullable: false
      uri-fmt:
        type: string
        x-dependency:
          type:
            required: true
            value:
              - set-uri
              - replace-uri
      uri-match:
        type: string
        x-dependency:
          type:
            required: true
            value: replace-uri
      var_expr:
        type: string
        x-dependency:
          type:
            required: true
            value: set-var
        x-display-name: Var Expression
      var_format:
        type: string
        x-dependency:
          type:
            required: true
            value: set-var-fmt
        x-display-name: Var Format
      var_name:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - set-var
              - set-var-fmt
              - do-resolve
              - unset-var
      var_scope:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - set-var
              - set-var-fmt
              - unset-var
      wait_at_least:
        type: integer
        x-dependency:
          type:
            value: wait-for-body
        x-nullable: true
        x-size: true
      wait_time:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-dependency:
          type:
            required: true
            value: wait-for-body
        x-duration: true
        x-nullable: true
    required:
      - type
    title: HTTP Request Rule
    type: object
  http_request_rules:
    title: HTTP Request Rules Array
    description: HAProxy HTTP request rules array (corresponds to http-request directives)
    type: array
    items:
      $ref: '#/definitions/http_request_rule'
  http_response_rule:
    additionalProperties: false
    description: HAProxy HTTP response rule configuration (corresponds to http-response directives)
    example:
      cond: unless
      cond_test: '{ src 192.168.0.0/16 }'
      hdr_format: '%T'
      hdr_name: X-Haproxy-Current-Date
      index: 0
      type: add-header
    properties:
      acl_file:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - add-acl
              - del-acl
      acl_keyfmt:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - add-acl
              - del-acl
        x-display-name: ACK Key Format
      bandwidth_limit_limit:
        type: string
        x-dependency:
          type:
            value: set-bandwidth-limit
        x-display-name: Standard HAProxy expression
      bandwidth_limit_name:
        type: string
        x-dependency:
          type:
            value: set-bandwidth-limit
        x-display-name: Bandwidth limit name
      bandwidth_limit_period:
        type: string
        x-dependency:
          type:
            value: set-bandwidth-limit
        x-display-name: Standard HAProxy expression
      cache_name:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: cache-store
        x-display-name: Cache Name
      capture_id:
        type: integer
        x-dependency:
          type:
            required: true
            value: capture
        x-display-name: Capture SlotID
        x-nullable: true
      capture_sample:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: capture
        x-display-name: Capture Sample
      cond:
        enum:
          - if
          - unless
        type: string
        x-display-name: Condition
      cond_test:
        type: string
        x-dependency:
          cond:
            required: true
        x-display-name: Condition Test
        x-dynamic-enum:
          freeFormat: true
          operation: getACLs
          property: acl_name
      deny_status:
        maximum: 599
        minimum: 200
        type: integer
        x-dependency:
          type:
            value: deny
        x-nullable: true
      expr:
        type: string
        x-dependency:
          type:
            required: true
            value:
              - set-fc-mark
              - set-fc-tos
        x-display-name: Standard HAProxy expression
      hdr_format:
        type: string
        x-dependency:
          type:
            required: true
            value:
              - replace-header
              - replace-value
              - set-header
              - add-header
        x-display-name: Header Format
      hdr_match:
        type: string
        x-dependency:
          type:
            required: true
            value:
              - replace-header
              - replace-value
        x-display-name: Header Match
      hdr_method:
        type: string
        x-dependency:
          type:
            value:
              - del-header
        x-display-name: Header Match Method
      hdr_name:
        type: string
        x-dependency:
          type:
            required: true
            value:
              - add-header
              - replace-header
              - del-header
              - set-header
              - replace-value
        x-display-name: Header Name
      log_level:
        enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - silent
        type: string
        x-dependency:
          type:
            required: true
            value: set-log-level
      lua_action:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: lua
      lua_params:
        type: string
        x-dependency:
          type:
            value: lua
      map_file:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - set-map
              - del-map
      map_keyfmt:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - set-map
              - del-map
        x-display-name: Map Key Format
      map_valuefmt:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: set-map
        x-display-name: Map Value Format
      mark_value:
        pattern: ^(0x[0-9A-Fa-f]+|[0-9]+)$
        type: string
        x-dependency:
          type:
            required: true
            value: set-mark
        x-display-name: Mark Value
      nice_value:
        maximum: 1024
        minimum: -1024
        type: integer
        x-dependency:
          type:
            required: true
            value: set-nice
        x-display-name: Nice Value
        x-nullable: false
      redir_code:
        enum:
          - 301
          - 302
          - 303
          - 307
          - 308
        type: integer
        x-dependency:
          type:
            value: redirect
        x-display-name: Redirect Code
        x-nullable: true
      redir_option:
        type: string
        x-dependency:
          type:
            required: true
            value: redirect
        x-display-name: Redirect Option
      redir_type:
        enum:
          - location
          - prefix
          - scheme
        type: string
        x-dependency:
          type:
            required: true
            value: redirect
        x-display-name: Redirect Type
      redir_value:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: redirect
        x-display-name: Redirect Value
      return_content:
        type: string
        x-dependency:
          return_content_format:
            required: true
            value:
              - errofile
              - errorfiles
              - file
              - lf-file
              - string
              - lf-string
      return_content_format:
        enum:
          - default-errorfiles
          - errorfile
          - errorfiles
          - file
          - lf-file
          - string
          - lf-string
        type: string
        x-dependency:
          type:
            value:
              - deny
              - return
      return_content_type:
        type: string
        x-dependency:
          type:
            value:
              - deny
              - return
        x-display-name: Return content type
        x-nullable: true
      return_hdrs:
        items:
          $ref: '#/definitions/return_header'
        type: array
        x-dependency:
          return_content_format:
            value:
              - file
              - lf-file
              - string
              - lf-string
        x-go-name: ReturnHeaders
        x-omitempty: true
      return_status_code:
        maximum: 599
        minimum: 200
        type: integer
        x-dependency:
          type:
            value: return
        x-display-name: Return Error Code
        x-nullable: true
      rst_ttl:
        type: integer
        x-dependency:
          type:
            required: true
            value:
              - silent-drop
        x-display-name: RST TTL
      sc_expr:
        type: string
        x-dependency:
          type:
            required: true
            value:
              - sc-add-gpc
              - sc-set-gpt0
        x-display-name: ScSet Expression Value
      sc_id:
        type: integer
        x-dependency:
          type:
            required: true
            value:
              - sc-add-gpc
              - sc-inc-gpc
              - sc-inc-gpc0
              - sc-inc-gpc1
              - sc-set-gpt
              - sc-set-gpt0
      sc_idx:
        type: integer
        x-dependency:
          type:
            required: true
            value:
              - sc-add-gpc
              - sc-inc-gpc
              - sc-set-gpt
      sc_int:
        type: integer
        x-dependency:
          type:
            required: true
            value:
              - sc-add-gpc
              - sc-set-gpt0
        x-display-name: ScSet Integer Value
        x-nullable: true
      spoe_engine:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: send-spoe-group
      spoe_group:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: send-spoe-group
      status:
        maximum: 999
        minimum: 100
        type: integer
        x-dependency:
          type:
            required: true
            value: set-status
        x-nullable: false
      status_reason:
        type: string
        x-dependency:
          type:
            value: set-status
      strict_mode:
        enum:
          - "on"
          - "off"
        type: string
        x-dependency:
          type:
            required: true
            value: strict-mode
      timeout:
        type: string
        x-dependency:
          type:
            required: true
            value: set-timeout
      timeout_type:
        enum:
          - server
          - tunnel
          - client
        type: string
        x-dependency:
          type:
            required: true
            value: set-timeout
      tos_value:
        pattern: ^(0x[0-9A-Fa-f]+|[0-9]+)$
        type: string
        x-dependency:
          type:
            required: true
            value: set-tos
        x-display-name: Tos Value
      track_sc_key:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: track-sc
        x-display-name: track-sc Key
      track_sc_stick_counter:
        type: integer
        x-dependency:
          type:
            value: track-sc
        x-display-name: track-sc StickCounter
        x-nullable: true
      track_sc_table:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            value: track-sc
        x-display-name: track-sc Table
      type:
        enum:
          - add-acl
          - add-header
          - allow
          - cache-store
          - capture
          - del-acl
          - del-header
          - del-map
          - deny
          - lua
          - redirect
          - replace-header
          - replace-value
          - return
          - sc-add-gpc
          - sc-inc-gpc
          - sc-inc-gpc0
          - sc-inc-gpc1
          - sc-set-gpt
          - sc-set-gpt0
          - send-spoe-group
          - set-fc-mark
          - set-fc-tos
          - set-header
          - set-log-level
          - set-map
          - set-mark
          - set-nice
          - set-status
          - set-timeout
          - set-tos
          - set-var
          - set-var-fmt
          - silent-drop
          - strict-mode
          - track-sc
          - unset-var
          - wait-for-body
          - set-bandwidth-limit
          - do-log
        type: string
        x-nullable: false
      var_expr:
        type: string
        x-dependency:
          type:
            required: true
            value: set-var
        x-display-name: Var Expression
      var_format:
        type: string
        x-dependency:
          type:
            required: true
            value: set-var-fmt
        x-display-name: Var Format
      var_name:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - set-var
              - set-var-fmt
              - unset-var
      var_scope:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - set-var
              - set-var-fmt
              - unset-var
      wait_at_least:
        type: integer
        x-dependency:
          type:
            value: wait-for-body
        x-nullable: true
        x-size: true
      wait_time:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-dependency:
          type:
            required: true
            value: wait-for-body
        x-duration: true
        x-nullable: true
    required:
      - type
    title: HTTP Response Rule
    type: object
  http_response_rules:
    title: HTTP Response Rules Array
    description: HAProxy HTTP response rules array (corresponds to http-response directives)
    type: array
    items:
      $ref: '#/definitions/http_response_rule'
  http_after_response_rule:
    additionalProperties: false
    description: HAProxy HTTP after response rule configuration (corresponds to http-after-response directives)
    example:
      cond: unless
      cond_test: '{ src 192.168.0.0/16 }'
      hdr_format: max-age=31536000
      hdr_name: Strict-Transport-Security
      type: set-header
    properties:
      acl_file:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - del-acl
      acl_keyfmt:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - del-acl
        x-display-name: ACK Key Format
      capture_id:
        type: integer
        x-dependency:
          type:
            value: capture
        x-display-name: Capture SlotID
        x-nullable: true
      capture_len:
        type: integer
        x-dependency:
          type:
            required: true
            value: capture
        x-display-name: Capture Len
      capture_sample:
        pattern: ^(?:[A-Za-z]+\("([A-Za-z\s]+)"\)|[A-Za-z]+)
        type: string
        x-dependency:
          type:
            value: capture
        x-display-name: Capture Sample
      cond:
        enum:
          - if
          - unless
        type: string
        x-display-name: Condition
      cond_test:
        type: string
        x-dependency:
          cond:
            required: true
        x-display-name: Condition Test
        x-dynamic-enum:
          freeFormat: true
          operation: getACLs
          property: acl_name
      hdr_format:
        type: string
        x-dependency:
          type:
            required: true
            value:
              - replace-header
              - replace-value
              - set-header
              - add-header
        x-display-name: Header Format
      hdr_match:
        type: string
        x-dependency:
          type:
            required: true
            value:
              - replace-header
              - replace-value
        x-display-name: Header Match
      hdr_method:
        type: string
        x-dependency:
          type:
            value:
              - del-header
        x-display-name: Header Match Method
      hdr_name:
        type: string
        x-dependency:
          type:
            required: true
            value:
              - add-header
              - replace-header
              - del-header
              - set-header
              - replace-value
        x-display-name: Header Name
      log_level:
        enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - silent
        type: string
        x-dependency:
          type:
            required: true
            value: set-log-level
      map_file:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - set-map
              - del-map
      map_keyfmt:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - set-map
              - del-map
        x-display-name: Map Key Format
      map_valuefmt:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: set-map
        x-display-name: Map Value Format
      sc_expr:
        type: string
        x-dependency:
          type:
            required: true
            value:
              - sc-add-gpc
              - sc-set-gpt0
        x-display-name: ScSet Expression Value
      sc_id:
        type: integer
        x-dependency:
          type:
            required: true
            value:
              - sc-add-gpc
              - sc-inc-gpc
              - sc-inc-gpc0
              - sc-inc-gpc1
              - sc-set-gpt
              - sc-set-gpt0
      sc_idx:
        type: integer
        x-dependency:
          type:
            required: true
            value:
              - sc-add-gpc
              - sc-inc-gpc
              - sc-set-gpt
      sc_int:
        type: integer
        x-dependency:
          type:
            required: true
            value:
              - sc-add-gpc
              - sc-set-gpt0
        x-display-name: ScSet Integer Value
        x-nullable: true
      status:
        maximum: 999
        minimum: 100
        type: integer
        x-dependency:
          type:
            required: true
            value: set-status
        x-nullable: false
      status_reason:
        type: string
        x-dependency:
          type:
            value: set-status
      strict_mode:
        enum:
          - "on"
          - "off"
        type: string
        x-dependency:
          type:
            required: true
            value: strict-mode
      type:
        enum:
          - add-header
          - allow
          - capture
          - del-acl
          - del-header
          - del-map
          - replace-header
          - replace-value
          - sc-add-gpc
          - sc-inc-gpc
          - sc-inc-gpc0
          - sc-inc-gpc1
          - sc-set-gpt
          - sc-set-gpt0
          - set-header
          - set-log-level
          - set-map
          - set-status
          - set-var
          - set-var-fmt
          - strict-mode
          - unset-var
          - do-log
        type: string
        x-nullable: false
      var_expr:
        type: string
        x-dependency:
          type:
            required: true
            value: set-var
        x-display-name: Var Expression
      var_format:
        type: string
        x-dependency:
          type:
            required: true
            value: set-var-fmt
        x-display-name: Var Format
      var_name:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - set-var
              - set-var-fmt
              - unset-var
      var_scope:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - set-var
              - set-var-fmt
              - unset-var
    required:
      - type
    title: HTTP after Response Rule
    type: object
  http_after_response_rules:
    title: HTTP After Response Rules Array
    description: HAProxy HTTP after response rules array (corresponds to http-after-response directives)
    type: array
    items:
      $ref: '#/definitions/http_after_response_rule'
  http_error_rule:
    additionalProperties: false
    description: HAProxy HTTP error rule configuration (corresponds to http-error directives)
    example:
      index: 0
      status: 425
      type: status
    properties:
      return_content:
        type: string
        x-dependency:
          return_content_format:
            required: true
            value:
              - errofile
              - errorfiles
              - file
              - lf-file
              - string
              - lf-string
      return_content_format:
        enum:
          - default-errorfiles
          - errorfile
          - errorfiles
          - file
          - lf-file
          - string
          - lf-string
        type: string
        x-dependency:
          type:
            value: status
      return_content_type:
        type: string
        x-dependency:
          type:
            value: status
        x-display-name: Return content type
        x-nullable: true
      return_hdrs:
        items:
          $ref: '#/definitions/return_header'
        type: array
        x-dependency:
          return_content_format:
            value:
              - file
              - lf-file
              - string
              - lf-string
        x-go-name: ReturnHeaders
        x-omitempty: true
      status:
        enum:
          - 200
          - 400
          - 401
          - 403
          - 404
          - 405
          - 407
          - 408
          - 410
          - 413
          - 425
          - 429
          - 500
          - 501
          - 502
          - 503
          - 504
        type: integer
        x-dependency:
          type:
            required: true
            value: status
        x-nullable: false
      type:
        enum:
          - status
        type: string
        x-nullable: false
    required:
      - type
      - status
    title: HTTP Error Rule
    type: object
  http_error_rules:
    title: HTTP Error Rules Array
    description: HAProxy HTTP error rules array (corresponds to http-error directives)
    type: array
    items:
      $ref: '#/definitions/http_error_rule'
  http_check:
    properties:
      addr:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            value: connect
        x-nullable: false
      alpn:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            value: connect
        x-display-name: ALPN Protocols
      body:
        type: string
        x-dependency:
          type:
            value: send
      body_log_format:
        type: string
        x-dependency:
          type:
            value: send
      check_comment:
        type: string
        x-dependency:
          type:
            value:
              - comment
              - connect
              - expect
              - send
        x-nullable: false
      default:
        type: boolean
        x-dependency:
          type:
            value: connect
      error_status:
        enum:
          - L7OKC
          - L7RSP
          - L7STS
          - L6RSP
          - L4CON
        type: string
        x-dependency:
          type:
            value: expect
      exclamation_mark:
        type: boolean
        x-dependency:
          type:
            value: expect
        x-display-name: Expect Exclamation Mark
      headers:
        items:
          $ref: '#/definitions/return_header'
        type: array
        x-dependency:
          type:
            value: send
        x-go-name: CheckHeaders
        x-omitempty: true
      linger:
        type: boolean
        x-dependency:
          type:
            value: connect
      match:
        enum:
          - status
          - rstatus
          - hdr
          - fhdr
          - string
          - rstring
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: expect
        x-display-name: Expect Match
      method:
        enum:
          - HEAD
          - PUT
          - POST
          - GET
          - TRACE
          - PATCH
          - DELETE
          - CONNECT
          - OPTIONS
        type: string
        x-dependency:
          type:
            value: send
      min_recv:
        type: integer
        x-dependency:
          type:
            value: expect
        x-nullable: true
      ok_status:
        enum:
          - L7OK
          - L7OKC
          - L6OK
          - L4OK
        type: string
        x-dependency:
          type:
            value: expect
      on_error:
        type: string
        x-dependency:
          type:
            value: expect
      on_success:
        type: string
        x-dependency:
          type:
            value: expect
      pattern:
        type: string
        x-dependency:
          type:
            required: true
            value: expect
      port:
        maximum: 65535
        minimum: 1
        type: integer
        x-dependency:
          type:
            value: connect
        x-nullable: true
      port_string:
        type: string
        x-dependency:
          type:
            value: connect
      proto:
        type: string
        x-dependency:
          type:
            value: connect
        x-nullable: false
      send_proxy:
        type: boolean
        x-dependency:
          type:
            value: connect
      sni:
        type: string
        x-dependency:
          type:
            value: connect
      ssl:
        type: boolean
        x-dependency:
          type:
            value: connect
      status-code:
        type: string
        x-dependency:
          type:
            value: expect
      tout_status:
        enum:
          - L7TOUT
          - L6TOUT
          - L4TOUT
        type: string
        x-dependency:
          type:
            value: expect
      type:
        enum:
          - comment
          - connect
          - disable-on-404
          - expect
          - send
          - send-state
          - set-var
          - set-var-fmt
          - unset-var
        type: string
        x-nullable: false
      uri:
        type: string
        x-dependency:
          type:
            value: send
      uri_log_format:
        type: string
        x-dependency:
          type:
            value: send
      var_expr:
        type: string
        x-dependency:
          type:
            required: true
            value:
              - set-var
        x-display-name: Var Expression
      var_format:
        type: string
        x-dependency:
          type:
            required: true
            value:
              - set-var-fmt
        x-display-name: Var Format
      var_name:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - set-var
              - set-var-fmt
              - unset-var
      var_scope:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - set-var
              - set-var-fmt
              - unset-var
      version:
        type: string
        x-dependency:
          type:
            value: send
      via_socks4:
        type: boolean
        x-dependency:
          type:
            value: connect
    required:
      - type
    title: HTTP Check
    type: object
  http_checks:
    title: HTTP Checks Array
    type: array
    items:
      $ref: '#/definitions/http_check'
  tcp_request_rule:
    additionalProperties: false
    description: HAProxy TCP Request Rule configuration (corresponds to tcp-request)
    example:
      cond: if
      cond_test: '{ src 192.168.0.0/16 }'
      index: 0
      type: connection
    properties:
      action:
        enum:
          - accept
          - attach-srv
          - capture
          - do-resolve
          - expect-netscaler-cip
          - expect-proxy
          - lua
          - reject
          - sc-add-gpc
          - sc-inc-gpc
          - sc-inc-gpc0
          - sc-inc-gpc1
          - sc-set-gpt
          - sc-set-gpt0
          - send-spoe-group
          - set-bandwidth-limit
          - set-bc-mark
          - set-bc-tos
          - set-dst-port
          - set-dst
          - set-fc-mark
          - set-fc-tos
          - set-log-level
          - set-mark
          - set-nice
          - set-priority-class
          - set-priority-offset
          - set-src
          - set-src-port
          - set-tos
          - set-var
          - set-var-fmt
          - silent-drop
          - switch-mode
          - track-sc
          - unset-var
          - use-service
          - set-retries
          - do-log
        type: string
        x-dependency:
          type:
            required: true
            value:
              - connection
              - content
              - session
        x-nullable: false
      bandwidth_limit_limit:
        type: string
        x-dependency:
          action:
            value: set-bandwidth-limit
          type:
            value: content
        x-display-name: Standard HAProxy expression
      bandwidth_limit_name:
        type: string
        x-dependency:
          action:
            value: set-bandwidth-limit
          type:
            value: content
        x-display-name: Bandwidth limit name
      bandwidth_limit_period:
        type: string
        x-dependency:
          action:
            value: set-bandwidth-limit
          type:
            value: content
        x-display-name: Standard HAProxy expression
      capture_len:
        type: integer
        x-dependency:
          action:
            required: true
            value: capture
          type:
            required: true
            value:
              - connection
              - content
        x-display-name: Capture Length
      capture_sample:
        pattern: ^(?:[A-Za-z]+\("([A-Za-z\s]+)"\)|[A-Za-z]+)
        type: string
        x-dependency:
          action:
            required: true
            value: capture
          type:
            required: true
            value:
              - connection
              - content
        x-display-name: Capture Sample
      cond:
        enum:
          - if
          - unless
        type: string
        x-dependency:
          type:
            value:
              - connection
              - content
              - session
        x-display-name: Condition
      cond_test:
        type: string
        x-dependency:
          cond:
            required: true
          type:
            required: true
            value:
              - connection
              - content
              - session
        x-display-name: Condition Test
        x-dynamic-enum:
          freeFormat: true
          operation: getACLs
          property: acl_name
      expr:
        type: string
        x-dependency:
          action:
            required: true
            value:
              - do-resolve
              - set-bc-mark
              - set-bc-tos
              - set-dst
              - set-dst-port
              - set-fc-mark
              - set-fc-tos
              - set-priority-class
              - set-priority-offset
              - set-src
              - set-src-port
              - set-var
              - set-retries
          type:
            value:
              - session
              - connection
              - content
        x-display-name: Standard HAProxy expression
      gpt_value:
        type: string
        x-dependency:
          action:
            required: true
            value: sc-set-gpt0
          type:
            required: true
            value:
              - connection
              - content
              - session
        x-display-name: Sticky counter value
      log_level:
        enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - silent
        type: string
        x-dependency:
          action:
            required: true
            value: set-log-level
          type:
            value: content
      lua_action:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          action:
            required: true
            value: lua
          type:
            value:
              - connection
              - content
        x-display-name: Lua action name
      lua_params:
        type: string
        x-dependency:
          action:
            value: lua
          type:
            value:
              - connection
              - content
        x-display-name: Lua action params
      mark_value:
        pattern: ^(0x[0-9A-Fa-f]+|[0-9]+)$
        type: string
        x-dependency:
          action:
            required: true
            value: set-mark
          type:
            value:
              - connection
              - content
        x-display-name: Mark Value
      nice_value:
        maximum: 1024
        minimum: -1024
        type: integer
        x-dependency:
          action:
            required: true
            value: set-nice
          type:
            value: content
        x-display-name: Nice Value
        x-nullable: false
      resolve_protocol:
        enum:
          - ipv4
          - ipv6
        type: string
        x-dependency:
          action:
            required: false
            value: do-resolve
          type:
            required: true
            value:
              - content
        x-display-name: Protocol
      resolve_resolvers:
        type: string
        x-dependency:
          action:
            required: true
            value: do-resolve
          type:
            required: true
            value:
              - content
        x-display-name: Resolvers
      resolve_var:
        type: string
        x-dependency:
          action:
            required: true
            value: do-resolve
          type:
            required: true
            value:
              - content
        x-display-name: Variable name
      rst_ttl:
        type: integer
        x-dependency:
          type:
            required: true
            value:
              - silent-drop
        x-display-name: RST TTL
      sc_idx:
        type: string
        x-dependency:
          action:
            required: true
            value:
              - sc-set-gpt
          type:
            required: true
            value:
              - connection
              - content
              - session
        x-display-name: Sticky counter Index
      sc_inc_id:
        type: string
        x-dependency:
          action:
            required: true
            value:
              - sc-add-gpc
              - sc-inc-gpc
              - sc-inc-gpc0
              - sc-inc-gpc1
              - sc-set-gpt
              - sc-set-gpt0
          type:
            required: true
            value:
              - connection
              - content
              - session
        x-display-name: Sticky counter ID
      sc_int:
        type: integer
        x-dependency:
          type:
            required: true
            value:
              - sc-add-gpc
              - sc-set-gpt0
        x-display-name: ScSet Integer Value
        x-nullable: true
      server_name:
        type: string
        x-dependency:
          action:
            required: true
            value: attach-srv
          type:
            value: session
        x-display-name: Server name
      service_name:
        type: string
        x-dependency:
          action:
            required: true
            value: use-service
          type:
            value: content
        x-display-name: Service name
      spoe_engine_name:
        type: string
        x-dependency:
          action:
            required: true
            value: send-spoe-group
          type:
            required: true
            value:
              - content
        x-display-name: Engine name
      spoe_group_name:
        type: string
        x-dependency:
          action:
            required: true
            value: send-spoe-group
          type:
            required: true
            value:
              - content
        x-display-name: Group name
      switch_mode_proto:
        type: string
        x-dependency:
          action:
            required: true
            value: switch-mode
          type:
            value: content
        x-display-name: Switch Mode Proto
      timeout:
        type: integer
        x-default-unit: ms
        x-dependency:
          type:
            required: true
            value: inspect-delay
        x-duration: true
        x-nullable: true
      tos_value:
        pattern: ^(0x[0-9A-Fa-f]+|[0-9]+)$
        type: string
        x-dependency:
          action:
            required: true
            value: set-tos
          type:
            value:
              - connection
              - content
        x-display-name: Tos Value
      track_key:
        type: string
        x-dependency:
          action:
            required: true
            value:
              - track-sc
          type:
            value:
              - session
              - connection
              - content
        x-display-name: Sample expression rule
      track_stick_counter:
        type: integer
        x-dependency:
          action:
            required: false
            value:
              - track-sc
          type:
            value:
              - session
              - connection
              - content
        x-display-name: Track Stick Counter
        x-nullable: true
      track_table:
        type: string
        x-dependency:
          action:
            required: false
            value:
              - track-sc
          type:
            value:
              - session
              - connection
              - content
        x-display-name: Optional table name
      type:
        enum:
          - connection
          - content
          - inspect-delay
          - session
        type: string
        x-nullable: false
      var_format:
        type: string
        x-dependency:
          action:
            required: true
            value: set-var-fmt
          type:
            value:
              - session
              - connection
              - content
        x-display-name: Var Format
      var_name:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          action:
            required: true
            value:
              - set-var
              - unset-var
              - set-var-fmt
          type:
            value:
              - session
              - connection
              - content
        x-display-name: Variable name
      var_scope:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          action:
            required: true
            value:
              - set-var
              - unset-var
              - set-var-fmt
          type:
            value:
              - session
              - connection
              - content
        x-display-name: Variable scope
    required:
      - type
    title: TCP Request Rule
    type: object
  tcp_request_rules:
    title: TCP Request Rules Array
    description: HAProxy TCP request rules array (corresponds to tcp-request directive)
    type: array
    items:
      $ref: '#/definitions/tcp_request_rule'
  tcp_response_rule:
    additionalProperties: false
    description: HAProxy TCP Response Rule configuration (corresponds to tcp-response)
    example:
      cond: if
      cond_test: '{ src 192.168.0.0/16 }'
      index: 0
      type: content
    properties:
      action:
        enum:
          - accept
          - close
          - lua
          - reject
          - sc-add-gpc
          - sc-inc-gpc
          - sc-inc-gpc0
          - sc-inc-gpc1
          - sc-set-gpt
          - sc-set-gpt0
          - send-spoe-group
          - set-bandwidth-limit
          - set-fc-mark
          - set-fc-tos
          - set-log-level
          - set-mark
          - set-nice
          - set-tos
          - set-var
          - set-var-fmt
          - silent-drop
          - unset-var
          - do-log
        type: string
        x-dependency:
          type:
            required: true
            value: content
        x-nullable: false
      bandwidth_limit_limit:
        type: string
        x-dependency:
          action:
            value: set-bandwidth-limit
          type:
            value: content
        x-display-name: Standard HAProxy expression
      bandwidth_limit_name:
        type: string
        x-dependency:
          action:
            value: set-bandwidth-limit
          type:
            value: content
        x-display-name: Bandwidth limit name
      bandwidth_limit_period:
        type: string
        x-dependency:
          action:
            value: set-bandwidth-limit
          type:
            value: content
        x-display-name: Standard HAProxy expression
      cond:
        enum:
          - if
          - unless
        type: string
        x-dependency:
          type:
            value: content
        x-display-name: Condition
      cond_test:
        type: string
        x-dependency:
          cond:
            required: true
          type:
            value: content
        x-display-name: Condition Test
        x-dynamic-enum:
          freeFormat: true
          operation: getACLs
          property: acl_name
      expr:
        type: string
        x-dependency:
          action:
            required: true
            value:
              - set-src-port
              - sc-set-gpt0
              - set-fc-mark
              - set-fc-tos
          type:
            value: content
        x-display-name: Standard HAProxy expression
      log_level:
        enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - silent
        type: string
        x-dependency:
          action:
            required: true
            value: set-log-level
          type:
            value: content
      lua_action:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          action:
            required: true
            value: lua
          type:
            value: content
        x-display-name: Lua action name
      lua_params:
        type: string
        x-dependency:
          action:
            value: lua
          type:
            value: content
        x-display-name: Lua action params
      mark_value:
        pattern: ^(0x[0-9A-Fa-f]+|[0-9]+)$
        type: string
        x-dependency:
          action:
            required: true
            value: set-mark
          type:
            value: content
        x-display-name: Mark Value
      nice_value:
        maximum: 1024
        minimum: -1024
        type: integer
        x-dependency:
          action:
            required: true
            value: set-nice
          type:
            value: content
        x-display-name: Nice Value
        x-nullable: false
      rst_ttl:
        type: integer
        x-dependency:
          type:
            required: true
            value:
              - silent-drop
        x-display-name: RST TTL
      sc_expr:
        type: string
        x-dependency:
          action:
            required: true
            value:
              - sc-add-gpc
              - sc-inc-gpc
          type:
            value: content
        x-display-name: ScSet Expression Value
      sc_id:
        type: integer
        x-dependency:
          action:
            required: true
            value:
              - sc-add-gpc
              - sc-inc-gpc
              - sc-inc-gpc0
              - sc-inc-gpc1
              - sc-set-gpt
              - sc-set-gpt0
          type:
            value: content
      sc_idx:
        type: integer
        x-dependency:
          action:
            required: true
            value:
              - sc-add-gpc
              - sc-set-gpt
              - sc-inc-gpc
          type:
            value: content
      sc_int:
        type: integer
        x-dependency:
          action:
            required: true
            value:
              - sc-add-gpc
              - sc-inc-gpc
          type:
            value: content
        x-display-name: ScSet Integer Value
        x-nullable: true
      spoe_engine:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          action:
            required: true
            value: send-spoe-group
          type:
            value: content
        x-display-name: SPOE Engine
      spoe_group:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          action:
            required: true
            value: send-spoe-group
          type:
            value: content
        x-display-name: SPOE Group
      timeout:
        type: integer
        x-default-unit: ms
        x-dependency:
          type:
            required: true
            value: inspect-delay
        x-duration: true
        x-nullable: true
      tos_value:
        pattern: ^(0x[0-9A-Fa-f]+|[0-9]+)$
        type: string
        x-dependency:
          action:
            required: true
            value: set-tos
          type:
            value: content
        x-display-name: Tos Value
      type:
        enum:
          - content
          - inspect-delay
        type: string
        x-nullable: false
      var_format:
        type: string
        x-dependency:
          action:
            required: true
            value: set-var-fmt
          type:
            value: content
        x-display-name: Var Format
      var_name:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          action:
            required: true
            value:
              - unset-var
          type:
            value: content
      var_scope:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          action:
            value: unset-var
          type:
            value: content
    required:
      - type
    title: TCP Response Rule
    type: object
  tcp_response_rules:
    title: TCP Response Rules Array
    description: HAProxy TCP response rules array (corresponds to tcp-response directive)
    type: array
    items:
      $ref: '#/definitions/tcp_response_rule'
  tcp_check:
    properties:
      action:
        enum:
          - comment
          - connect
          - expect
          - send
          - send-lf
          - send-binary
          - send-binary-lf
          - set-var
          - set-var-fmt
          - unset-var
        type: string
        x-nullable: false
      addr:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          action:
            value: connect
        x-nullable: false
      alpn:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          action:
            value: connect
        x-display-name: ALPN Protocols
        x-nullable: false
      check_comment:
        type: string
        x-dependency:
          action:
            value:
              - connect
              - expect
              - send
              - send-lf
              - send-binary
              - send-binary-lf
        x-nullable: false
      data:
        type: string
        x-dependency:
          action:
            required: true
            value: send
      default:
        type: boolean
        x-dependency:
          action:
            value: connect
      error_status:
        enum:
          - L7OKC
          - L7RSP
          - L7STS
          - L6RSP
          - L4CON
        type: string
        x-dependency:
          action:
            value: expect
      exclamation_mark:
        type: boolean
        x-dependency:
          action:
            value: expect
        x-display-name: Expect Exclamation Mark
      fmt:
        type: string
        x-dependency:
          action:
            required: true
            value: send-lf
      hex_fmt:
        type: string
        x-dependency:
          action:
            required: true
            value: send-binary-lf
      hex_string:
        type: string
        x-dependency:
          action:
            required: true
            value: send-binary
      linger:
        type: boolean
        x-dependency:
          action:
            value: connect
      match:
        enum:
          - string
          - rstring
          - string-lf
          - binary
          - rbinary
          - binary-lf
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          action:
            required: true
            value: expect
        x-display-name: Expect Match
      min_recv:
        type: integer
        x-dependency:
          action:
            value: expect
      ok_status:
        enum:
          - L7OK
          - L7OKC
          - L6OK
          - L4OK
        type: string
        x-dependency:
          action:
            value: expect
      on_error:
        type: string
        x-dependency:
          action:
            value: expect
      on_success:
        type: string
        x-dependency:
          action:
            value: expect
      pattern:
        type: string
        x-dependency:
          action:
            required: true
            value: expect
      port:
        maximum: 65535
        minimum: 1
        type: integer
        x-dependency:
          action:
            value: connect
        x-nullable: true
      port_string:
        type: string
        x-dependency:
          action:
            value: connect
      proto:
        type: string
        x-dependency:
          action:
            value: connect
        x-nullable: false
      send_proxy:
        type: boolean
        x-dependency:
          action:
            value: connect
      sni:
        type: string
        x-dependency:
          action:
            value: connect
        x-nullable: false
      ssl:
        type: boolean
        x-dependency:
          action:
            value: connect
      status-code:
        type: string
        x-dependency:
          action:
            value: expect
      tout_status:
        enum:
          - L7TOUT
          - L6TOUT
          - L4TOUT
        type: string
        x-dependency:
          action:
            value: expect
      var_expr:
        type: string
        x-dependency:
          action:
            required: true
            value:
              - set-var
        x-display-name: Var Expression
      var_fmt:
        type: string
        x-dependency:
          action:
            required: true
            value:
              - set-var-fmt
        x-display-name: Var Log format
      var_name:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          action:
            required: true
            value:
              - set-var
              - set-var-fmt
              - unset-var
      var_scope:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          action:
            required: true
            value:
              - set-var
              - set-var-fmt
              - unset-var
      via_socks4:
        type: boolean
        x-dependency:
          action:
            value: connect
    required:
      - action
    title: TCP Check
    type: object
  tcp_checks:
    title: TCP Checks Array
    type: array
    items:
      $ref: '#/definitions/tcp_check'
  quic_initial_rule:
    additionalProperties: false
    description: QUIC Initial configuration
    example:
      type: reject
    properties:
      cond:
        enum:
          - if
          - unless
        type: string
        x-display-name: Condition
      cond_test:
        type: string
        x-dependency:
          cond:
            required: true
        x-display-name: Condition Test
        x-dynamic-enum:
          freeFormat: true
          operation: getACLs
          property: acl_name
      type:
        enum:
          - reject
          - accept
          - send-retry
          - dgram-drop
        type: string
        x-nullable: false
    required:
      - type
    title: QUIC Initial
    type: object
    x-go-name: QUICInitialRule
  quic_initial_rules:
    title: QUIC Initials Array
    x-go-name: QUICInitialRules
    type: array
    items:
      $ref: '#/definitions/quic_initial_rule'
  backend_switching_rule:
    additionalProperties: false
    description: HAProxy backend switching rule configuration (corresponds to use_backend directive)
    example:
      cond: if
      cond_test: '{ req_ssl_sni -i www.example.com }'
      index: 0
      name: test_backend
    properties:
      cond:
        enum:
          - if
          - unless
        type: string
        x-display-name: Condition
      cond_test:
        type: string
        x-dependency:
          cond:
            required: true
        x-display-name: Condition Test
        x-dynamic-enum:
          freeFormat: true
          operation: getACLs
          property: acl_name
      name:
        pattern: ^[^\s]+$
        type: string
        x-display-name: Backend Name
        x-dynamic-enum:
          operation: getBackends
          property: name
        x-nullable: false
    required:
      - name
    title: Backend Switching Rule
    type: object
  backend_switching_rules:
    title: Backend Switching Rules Array
    description: HAProxy backend switching rules array (corresponds to use_backend directives)
    type: array
    items:
      $ref: '#/definitions/backend_switching_rule'
  server_switching_rule:
    additionalProperties: false
    description: HAProxy server switching rule configuration (corresponds to use-server directive)
    example:
      cond: if
      cond_test: '{ req_ssl_sni -i www.example.com }'
      target_server: www
    properties:
      cond:
        enum:
          - if
          - unless
        type: string
        x-display-name: Condition
      cond_test:
        type: string
        x-dependency:
          cond:
            required: true
        x-display-name: Condition Test
        x-dynamic-enum:
          freeFormat: true
          operation: getACLs
          property: acl_name
      target_server:
        pattern: ^[^\s]+$
        type: string
        x-dynamic-enum:
          operation: getServers
          property: name
        x-nullable: false
    required:
      - target_server
    title: Server Switching Rule
    type: object
  server_switching_rules:
    title: Server Switching Rules Array
    description: HAProxy backend server switching rules array (corresponds to use-server directives)
    type: array
    items:
      $ref: '#/definitions/server_switching_rule'
  filter:
    additionalProperties: false
    description: HAProxy filters
    example:
      trace_name: name
      trace_rnd_parsing: true
      type: trace
    properties:
      app_name:
        description: Name of the fcgi-app section this filter will use.
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: fcgi-app
      bandwidth_limit_name:
        description: Filter name that will be used by 'set-bandwidth-limit' actions to reference a specific bandwidth limitation filter
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value:
              - bwlim-in
              - bwlim-out
      cache_name:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: cache
      default_limit:
        description: |-
          The max number of bytes that can be forwarded over the period.
          The value must be specified for per-stream and shared bandwidth limitation filters.
          It follows the HAProxy size format and is expressed in bytes.
        type: integer
        x-dependency:
          type:
            required: true
            value:
              - bwlim-in
              - bwlim-out
        x-size: true
      default_period:
        description: |-
          The default time period used to evaluate the bandwidth limitation rate.
          It can be specified for per-stream bandwidth limitation filters only.
          It follows the HAProxy time format and is expressed in milliseconds.
        type: integer
        x-default-unit: ms
        x-dependency:
          default_limit:
            required: true
          type:
            required: true
            value:
              - bwlim-in
              - bwlim-out
        x-duration: true
      key:
        description: |-
          A sample expression rule.
          It describes what elements will be analyzed, extracted, combined, and used to select which table entry to update the counters.
          It must be specified for shared bandwidth limitation filters only.
        type: string
        x-dependency:
          limit:
            required: true
          type:
            required: true
            value:
              - bwlim-in
              - bwlim-out
      limit:
        description: |-
          The max number of bytes that can be forwarded over the period.
          The value must be specified for per-stream and shared bandwidth limitation filters.
          It follows the HAProxy size format and is expressed in bytes.
        type: integer
        x-dependency:
          type:
            required: true
            value:
              - bwlim-in
              - bwlim-out
        x-size: true
      min_size:
        description: |-
          The optional minimum number of bytes forwarded at a time by a stream excluding the last packet that may be smaller.
          This value can be specified for per-stream and shared bandwidth limitation filters.
          It follows the HAProxy size format and is expressed in bytes.
        type: integer
        x-dependency:
          type:
            required: true
            value:
              - bwlim-in
              - bwlim-out
        x-size: true
      spoe_config:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            required: true
            value: spoe
      spoe_engine:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            value: spoe
      table:
        description: |-
          An optional table to be used instead of the default one, which is the stick-table declared in the current proxy.
          It can be specified for shared bandwidth limitation filters only.
        type: string
        x-dependency:
          limit:
            required: true
          type:
            required: true
            value:
              - bwlim-in
              - bwlim-out
      trace_hexdump:
        type: boolean
        x-dependency:
          type:
            value: trace
      trace_name:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            value: trace
      trace_rnd_forwarding:
        type: boolean
        x-dependency:
          type:
            value: trace
        x-display-name: Trace Random Forwarding
      trace_rnd_parsing:
        type: boolean
        x-dependency:
          type:
            value: trace
        x-display-name: Trace Random Parsing
      type:
        enum:
          - bwlim-in
          - bwlim-out
          - cache
          - compression
          - fcgi-app
          - spoe
          - trace
        type: string
        x-nullable: false
    required:
      - type
    title: Filter
    type: object
  filters:
    title: Filters Array
    description: HAProxy filters array (corresponds to filter directive)
    type: array
    items:
      $ref: '#/definitions/filter'
  stick_rule:
    additionalProperties: false
    description: Define a pattern used to create an entry in a stickiness table or matching condition or associate a user to a server.
    example:
      pattern: src
      type: match
    properties:
      cond:
        enum:
          - if
          - unless
        type: string
        x-display-name: Condition
      cond_test:
        type: string
        x-dependency:
          cond:
            required: true
        x-display-name: Condition Test
        x-dynamic-enum:
          freeFormat: true
          operation: getACLs
          property: acl_name
      pattern:
        pattern: ^[^\s]+$
        type: string
        x-nullable: false
      table:
        pattern: ^[^\s]+$
        type: string
      type:
        enum:
          - match
          - "on"
          - store-request
          - store-response
        type: string
        x-nullable: false
    required:
      - type
      - pattern
    title: Stick Rule
    type: object
  stick_rules:
    title: Stick Rules Array
    description: HAProxy backend stick rules array (corresponds to stick store-request, stick match, stick on, stick store-response)
    type: array
    items:
      $ref: '#/definitions/stick_rule'
  log_target:
    additionalProperties: false
    description: Per-instance logging of events and traffic.
    properties:
      address:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          global:
            required: true
            value: false
          nolog:
            required: true
            value: false
      facility:
        enum:
          - kern
          - user
          - mail
          - daemon
          - auth
          - syslog
          - lpr
          - news
          - uucp
          - cron
          - auth2
          - ftp
          - ntp
          - audit
          - alert
          - cron2
          - local0
          - local1
          - local2
          - local3
          - local4
          - local5
          - local6
          - local7
        type: string
        x-dependency:
          global:
            required: true
            value: false
          nolog:
            required: true
            value: false
      format:
        enum:
          - local
          - rfc3164
          - rfc5424
          - priority
          - short
          - timed
          - iso
          - raw
        type: string
        x-dependency:
          global:
            value: false
          nolog:
            value: false
      global:
        type: boolean
      length:
        type: integer
        x-dependency:
          global:
            value: false
          nolog:
            value: false
      level:
        enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
        type: string
        x-dependency:
          global:
            value: false
          nolog:
            value: false
      minlevel:
        enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
        type: string
        x-dependency:
          global:
            value: false
          level:
            required: false
          nolog:
            value: false
      nolog:
        type: boolean
      profile:
        type: string
      sample_range:
        type: string
        x-dependency:
          global:
            value: false
          nolog:
            value: false
      sample_size:
        type: integer
        x-dependency:
          global:
            value: false
          nolog:
            value: false
          sample_range:
            required: true
    title: Log Target
    type: object
  log_targets:
    title: Log Target Array
    description: HAProxy log target array (corresponds to log directives)
    type: array
    items:
      $ref: '#/definitions/log_target'
  acl:
    additionalProperties: false
    description: |
      The use of Access Control Lists (ACL) provides a flexible solution to perform
      content switching and generally to take decisions based on content extracted
      from the request, the response or any environmental status.
    properties:
      acl_name:
        pattern: ^[^\s]+$
        type: string
        x-nullable: false
      criterion:
        pattern: ^[^\s]+$
        type: string
        x-nullable: false
      value:
        type: string
        x-nullable: false
    required:
      - acl_name
      - criterion
    title: ACL Lines
    type: object
  acls:
    title: ACL Lines Array
    description: HAProxy ACL lines array (corresponds to acl directives)
    type: array
    items:
      $ref: '#/definitions/acl'
  native_stats:
    description: HAProxy stats array
    properties:
      error:
        type: string
      runtimeAPI:
        type: string
      stats:
        items:
          $ref: '#/definitions/native_stat'
        type: array
        x-omitempty: true
    title: Stats Array
    type: object
    x-omitempty: true
  native_stat:
    description: Current stats for one object.
    properties:
      backend_name:
        type: string
        x-dependency:
          type: server
      name:
        type: string
      stats:
        $ref: '#/definitions/native_stat_stats'
      type:
        enum:
          - backend
          - server
          - frontend
        type: string
    title: Stats
    type: object
  native_stat_stats:
    example:
      bin: 4326578
      bout: 889901290
      comp_byp: 0
      comp_in: 0
      comp_out: 0
      comp_rsp: 0
      conn_rate: 12
      conn_rate_max: 456
      conn_tot: 45682
      dcon: 0
      dreq: 4
      dresp: 1
      dses: 0
      ereq: 54
      hrsp_1xx: 0
      hrsp_2xx: 165
      hrsp_3xx: 12
      hrsp_4xx: 50
      hrsp_5xx: 4
      hrsp_other: 0
      iid: 0
      intercepted: 346
      last_chk: L4OK in 0ms
      mode: http
      pid: 3204
      rate: 64
      rate_lim: 20000
      rate_max: 4000
      req_rate: 49
      req_rate_max: 3965
      req_total: 1254786
      scur: 129
      slim: 2000
      smax: 2000
      status: UP
      stot: 12902
    properties:
      act:
        type: integer
        x-dependency:
          type:
            - server
            - backend
        x-nullable: true
      addr:
        type: string
        x-dependency:
          type: server
      agent_code:
        type: integer
        x-dependency:
          type: server
        x-nullable: true
      agent_desc:
        type: string
        x-dependency:
          type: server
      agent_duration:
        type: integer
        x-dependency:
          type: server
        x-nullable: true
      agent_fall:
        type: integer
        x-dependency:
          type: server
        x-nullable: true
      agent_health:
        type: integer
        x-dependency:
          type: server
        x-nullable: true
      agent_rise:
        type: integer
        x-dependency:
          type: server
        x-nullable: true
      agent_status:
        enum:
          - UNK
          - INI
          - SOCKERR
          - L4OK
          - L4TOUT
          - L4CON
          - L7OK
          - L7STS
        type: string
        x-dependency:
          type: server
      algo:
        type: string
        x-dependency:
          type: backend
      bck:
        type: integer
        x-dependency:
          type:
            - server
            - backend
        x-nullable: true
      bin:
        type: integer
        x-nullable: true
      bout:
        type: integer
        x-nullable: true
      check_code:
        type: integer
        x-dependency:
          type: server
        x-nullable: true
      check_desc:
        type: string
        x-dependency:
          type: server
      check_duration:
        type: integer
        x-dependency:
          type: server
        x-nullable: true
      check_fall:
        type: integer
        x-dependency:
          type: server
        x-nullable: true
      check_health:
        type: integer
        x-dependency:
          type: server
        x-nullable: true
      check_rise:
        type: integer
        x-dependency:
          type: server
        x-nullable: true
      check_status:
        enum:
          - UNK
          - INI
          - SOCKERR
          - L4OK
          - L4TOUT
          - L4CON
          - L6OK
          - L6TOUT
          - L6RSP
          - L7OK
          - L7OKC
          - L7TOUT
          - L7RSP
          - L7STS
        type: string
        x-dependency:
          type: server
      chkdown:
        type: integer
        x-dependency:
          type:
            - server
            - backend
        x-nullable: true
      chkfail:
        type: integer
        x-dependency:
          type: server
        x-nullable: true
      cli_abrt:
        type: integer
        x-dependency:
          type:
            - server
            - backend
        x-nullable: true
      comp_byp:
        type: integer
        x-dependency:
          type:
            - frontend
            - backend
        x-nullable: true
      comp_in:
        type: integer
        x-dependency:
          type:
            - frontend
            - backend
        x-nullable: true
      comp_out:
        type: integer
        x-dependency:
          type:
            - frontend
            - backend
        x-nullable: true
      comp_rsp:
        type: integer
        x-dependency:
          type:
            - frontend
            - backend
        x-nullable: true
      conn_rate:
        type: integer
        x-dependency:
          type: frontend
        x-nullable: true
      conn_rate_max:
        type: integer
        x-dependency:
          type: frontend
        x-nullable: true
      conn_tot:
        type: integer
        x-dependency:
          type: frontend
        x-nullable: true
      cookie:
        type: string
        x-dependency:
          type:
            - server
            - backend
      ctime:
        type: integer
        x-dependency:
          type:
            - server
            - backend
        x-nullable: true
      dcon:
        type: integer
        x-dependency:
          type: frontend
        x-nullable: true
      downtime:
        type: integer
        x-dependency:
          type: server
        x-nullable: true
      dreq:
        type: integer
        x-dependency:
          type:
            - frontend
            - backend
        x-nullable: true
      dresp:
        type: integer
        x-nullable: true
      dses:
        type: integer
        x-dependency:
          type: frontend
        x-nullable: true
      econ:
        type: integer
        x-dependency:
          type:
            - server
            - backend
        x-nullable: true
      ereq:
        type: integer
        x-dependency:
          type: frontend
        x-nullable: true
      eresp:
        type: integer
        x-dependency:
          type:
            - server
            - backend
        x-nullable: true
      hanafail:
        type: string
        x-dependency:
          type: server
      hrsp_1xx:
        type: integer
        x-nullable: true
      hrsp_2xx:
        type: integer
        x-nullable: true
      hrsp_3xx:
        type: integer
        x-nullable: true
      hrsp_4xx:
        type: integer
        x-nullable: true
      hrsp_5xx:
        type: integer
        x-nullable: true
      hrsp_other:
        type: integer
        x-nullable: true
      iid:
        type: integer
        x-nullable: true
      intercepted:
        type: integer
        x-dependency:
          type:
            - frontend
            - backend
        x-nullable: true
      last_agt:
        type: string
        x-dependency:
          type: server
        x-nullable: true
      last_chk:
        type: string
        x-dependency:
          type: server
        x-nullable: true
      lastchg:
        type: integer
        x-dependency:
          type:
            - server
            - backend
        x-nullable: true
      lastsess:
        type: integer
        x-dependency:
          type:
            - server
            - backend
        x-nullable: true
      lbtot:
        type: integer
        x-dependency:
          type:
            - server
            - backend
        x-nullable: true
      mode:
        enum:
          - tcp
          - http
          - health
          - unknown
        type: string
      pid:
        type: integer
        x-nullable: true
      qcur:
        type: integer
        x-dependency:
          type:
            - server
            - backend
        x-nullable: true
      qlimit:
        type: integer
        x-dependency:
          type:
            - server
            - backend
        x-nullable: true
      qmax:
        type: integer
        x-dependency:
          type:
            - server
            - backend
        x-nullable: true
      qtime:
        type: integer
        x-dependency:
          type:
            - server
            - backend
        x-nullable: true
      rate:
        type: integer
        x-nullable: true
      rate_lim:
        type: integer
        x-dependency:
          type: frontend
        x-nullable: true
      rate_max:
        type: integer
        x-nullable: true
      req_rate:
        type: integer
        x-dependency:
          type: frontend
        x-nullable: true
      req_rate_max:
        type: integer
        x-dependency:
          type: frontend
        x-nullable: true
      req_tot:
        type: integer
        x-dependency:
          type:
            - frontend
            - backend
        x-nullable: true
      rtime:
        type: integer
        x-dependency:
          type:
            - server
            - backend
        x-nullable: true
      scur:
        type: integer
        x-nullable: true
      sid:
        type: integer
        x-dependency:
          type: server
        x-nullable: true
      slim:
        type: integer
        x-nullable: true
      smax:
        type: integer
        x-nullable: true
      srv_abrt:
        type: integer
        x-dependency:
          type:
            - server
            - backend
        x-nullable: true
      status:
        enum:
          - UP
          - DOWN
          - NOLB
          - MAINT
          - no check
        type: string
      stot:
        type: integer
        x-nullable: true
      throttle:
        type: integer
        x-dependency:
          type: server
        x-nullable: true
      tracked:
        type: string
        x-dependency:
          type: server
      ttime:
        type: integer
        x-dependency:
          type:
            - server
            - backend
        x-nullable: true
      weight:
        type: integer
        x-dependency:
          type:
            - server
            - backend
        x-nullable: true
      wredis:
        type: integer
        x-dependency:
          type:
            - server
            - backend
        x-nullable: true
      wretr:
        type: integer
        x-dependency:
          type:
            - server
            - backend
        x-nullable: true
    type: object
  stats_options:
    properties:
      stats_admin:
        type: boolean
        x-display-name: Stats Admin
      stats_admin_cond:
        enum:
          - if
          - unless
        type: string
        x-dependency:
          stats_admin:
            required: true
            value: true
        x-display-name: Stats Admin Condition
      stats_admin_cond_test:
        type: string
        x-dependency:
          stats_admin_cond:
            required: true
        x-display-name: Stats Admin Condition Test
        x-dynamic-enum:
          freeFormat: true
          operation: getACLs
          property: acl_name
      stats_auths:
        items:
          $ref: '#/definitions/stats_auth'
        type: array
        x-display-name: Stats Auths
        x-omitempty: true
      stats_enable:
        type: boolean
        x-display-name: Stats Enable
      stats_hide_version:
        type: boolean
        x-display-name: Stats Hide Version
      stats_http_requests:
        items:
          $ref: '#/definitions/stats_http_request'
        type: array
        x-display-name: Stats HTTP Requests
        x-omitempty: true
      stats_maxconn:
        minimum: 1
        type: integer
      stats_realm:
        type: boolean
        x-display-name: Stats Realm
      stats_realm_realm:
        type: string
        x-dependency:
          stats_realm:
            required: true
            value: true
        x-nullable: true
      stats_refresh_delay:
        minimum: 0
        type: integer
        x-default-unit: s
        x-duration: true
        x-nullable: true
      stats_show_desc:
        type: string
        x-nullable: true
      stats_show_legends:
        type: boolean
        x-display-name: Stats Show Legends
      stats_show_modules:
        type: boolean
        x-display-name: Stats Show Modules
      stats_show_node_name:
        pattern: ^[^\s]+$
        type: string
        x-nullable: true
        x-omitempty: false
      stats_uri_prefix:
        pattern: ^[^\s]+$
        type: string
    type: object
  stats_http_request:
    properties:
      cond:
        type: string
      cond_test:
        type: string
        x-dependency:
          cond:
            required: true
      realm:
        type: string
        x-dependency:
          type:
            value: auth
      type:
        enum:
          - allow
          - deny
          - auth
        type: string
    required:
      - type
    type: object
  stats_auth:
    properties:
      passwd:
        type: string
      user:
        type: string
    required:
      - user
      - passwd
    type: object
  error:
    additionalProperties:
      type: string
    description: API Error
    properties:
      code:
        type: integer
        x-nullable: true
      message:
        type: string
        x-nullable: true
    required:
      - code
      - message
    title: Error
    type: object
  endpoint:
    description: Endpoint definition
    properties:
      description:
        description: Endpoint description
        type: string
      title:
        description: Endpoint title
        type: string
      url:
        description: Path to the endpoint
        type: string
    title: Endpoint
    type: object
  endpoints:
    title: Endpoints Array
    description: Collection of endpoints
    type: array
    items:
      $ref: '#/definitions/endpoint'
  process_info:
    description: General HAProxy process information
    properties:
      error:
        type: string
      info:
        $ref: '#/definitions/process_info_item'
      runtimeAPI:
        type: string
    title: HAProxy Information
    type: object
    x-omitempty: true
  process_info_item:
    properties:
      active_peers:
        type: integer
        x-nullable: true
      busy_polling:
        type: integer
        x-nullable: true
      bytes_out_rate:
        type: integer
        x-nullable: true
      compress_bps_in:
        type: integer
        x-nullable: true
      compress_bps_out:
        type: integer
        x-nullable: true
      compress_bps_rate_lim:
        type: integer
        x-nullable: true
      conn_rate:
        type: integer
        x-nullable: true
      conn_rate_limit:
        type: integer
        x-nullable: true
      connected_peers:
        type: integer
        x-nullable: true
      cum_conns:
        type: integer
        x-nullable: true
      cum_req:
        type: integer
        x-nullable: true
      cum_ssl_conns:
        type: integer
        x-nullable: true
      curr_conns:
        type: integer
        x-nullable: true
      curr_ssl_conns:
        type: integer
        x-nullable: true
      dropped_logs:
        type: integer
        x-nullable: true
      failed_resolutions:
        type: integer
        x-nullable: true
      hard_max_conn:
        type: integer
        x-nullable: true
      idle_pct:
        type: integer
        x-nullable: true
      jobs:
        type: integer
        x-nullable: true
      listeners:
        type: integer
        x-nullable: true
      max_conn:
        type: integer
        x-nullable: true
      max_conn_rate:
        type: integer
        x-nullable: true
      max_pipes:
        type: integer
        x-nullable: true
      max_sess_rate:
        type: integer
        x-nullable: true
      max_sock:
        type: integer
        x-nullable: true
      max_ssl_conns:
        type: integer
        x-nullable: true
      max_ssl_rate:
        type: integer
        x-nullable: true
      max_zlib_mem_usage:
        type: integer
        x-nullable: true
      mem_max_mb:
        type: integer
        x-nullable: true
      nbthread:
        description: Number of threads
        type: integer
        x-display-name: Number of Threads
        x-nullable: true
      node:
        type: string
      pid:
        description: Process id of the replying worker process
        type: integer
        x-display-name: PID
        x-nullable: true
      pipes_free:
        type: integer
        x-nullable: true
      pipes_used:
        type: integer
        x-nullable: true
      pool_alloc_mb:
        type: integer
        x-nullable: true
      pool_failed:
        type: integer
        x-nullable: true
      pool_used_mb:
        type: integer
        x-nullable: true
      process_num:
        description: Process number
        type: integer
        x-display-name: Process Number
        x-nullable: true
      processes:
        description: Number of spawned processes
        type: integer
        x-display-name: Number of processes
        x-nullable: true
      release_date:
        description: HAProxy version release date
        format: date
        type: string
      run_queue:
        type: integer
        x-nullable: true
      sess_rate:
        type: integer
        x-nullable: true
      sess_rate_limit:
        type: integer
        x-nullable: true
      ssl_backend_key_rate:
        type: integer
        x-nullable: true
      ssl_backend_max_key_rate:
        type: integer
        x-nullable: true
      ssl_cache_lookups:
        type: integer
        x-nullable: true
      ssl_cache_misses:
        type: integer
        x-nullable: true
      ssl_frontend_key_rate:
        type: integer
        x-nullable: true
      ssl_frontend_max_key_rate:
        type: integer
        x-nullable: true
      ssl_frontend_session_reuse:
        type: integer
        x-nullable: true
      ssl_rate:
        type: integer
        x-nullable: true
      ssl_rate_limit:
        type: integer
        x-nullable: true
      stopping:
        type: integer
        x-nullable: true
      tasks:
        type: integer
        x-nullable: true
      total_bytes_out:
        type: integer
        x-nullable: true
      ulimit_n:
        type: integer
        x-nullable: true
      unstoppable:
        type: integer
        x-nullable: true
      uptime:
        description: HAProxy uptime in s
        type: integer
        x-nullable: true
      version:
        description: HAProxy version string
        type: string
      zlib_mem_usage:
        type: integer
        x-nullable: true
    type: object
  transaction:
    description: HAProxy configuration transaction
    example:
      _version: 2
      id: 273e3385-2d0c-4fb1-aa27-93cbb31ff203
      status: in_progress
    properties:
      _version:
        type: integer
      id:
        pattern: ^[^\s]+$
        type: string
      status:
        enum:
          - failed
          - outdated
          - in_progress
          - success
        type: string
    title: Configuration transaction
    type: object
  transactions:
    title: Transactions array
    description: Configuration transactions array
    type: array
    items:
      $ref: "#/definitions/transaction"
  spoe_transaction:
    description: SPOE configuration transaction
    example:
      _version: 2
      id: 273e3385-2d0c-4fb1-aa27-93cbb31ff203
      status: in_progress
    properties:
      _version:
        type: integer
      id:
        pattern: ^[^\s]+$
        type: string
      status:
        enum:
          - failed
          - in_progress
          - success
        type: string
    title: SPOE configuration transaction
    type: object
  spoe_transactions:
    title: SPOE Transactions array
    description: SPOE Configuration transactions array
    type: array
    items:
      $ref: "#/definitions/spoe_transaction"
  info:
    description: General API, OS and hardware information
    example:
      api:
        build_date: "2019-08-21T17:31:56.000Z"
        version: v1.2.1 45a3288.dev
      system:
        cpu_info:
          model: Intel(R) Core(TM) i7-7500U CPU @ 2.70GHz
          num_cpus: 4
        hostname: test
        mem_info:
          dataplaneapi_memory: 44755536
          free_memory: 5790642176
          total_memory: 16681517056
        os_string: 'Linux 4.15.0-58-generic #64-Ubuntu SMP Tue Aug 6 11:12:41 UTC 2019'
        time: 1566401525
        uptime: 87340
    properties:
      api:
        properties:
          build_date:
            description: HAProxy Dataplane API build date
            format: date-time
            type: string
          version:
            description: HAProxy Dataplane API version string
            type: string
        type: object
      system:
        properties:
          cpu_info:
            properties:
              model:
                type: string
              num_cpus:
                description: Number of logical CPUs
                type: integer
            type: object
          hostname:
            description: Hostname where the HAProxy is running
            type: string
          mem_info:
            properties:
              dataplaneapi_memory:
                type: integer
              free_memory:
                type: integer
              total_memory:
                type: integer
            type: object
          os_string:
            description: OS string
            type: string
          time:
            description: Current time in milliseconds since Epoch.
            type: integer
          uptime:
            description: System uptime
            type: integer
            x-nullable: true
        type: object
    title: Information
    type: object
  health:
    properties:
      haproxy:
        enum:
          - up
          - down
          - unknown
        type: string
    type: object
  reload:
    description: HAProxy reload
    example:
      id: 2019-01-03-44
      status: in_progress
    properties:
      id:
        pattern: ^\d{4}-\d{2}-\d{2}-\d+$
        type: string
      reload_timestamp:
        type: integer
      response:
        type: string
      status:
        enum:
          - failed
          - in_progress
          - succeeded
        type: string
    title: HAProxy reload
    type: object
  reloads:
    title: HAProxy Reloads Array
    description: HAProxy reloads array
    type: array
    items:
      $ref: "#/definitions/reload"
  runtime_add_server:
    description: Settable properties when adding a new server using HAProxy's runtime.
    properties:
      address:
        pattern: ^[^\s]+$
        readOnly: true
        type: string
        x-nullable: false
      agent-addr:
        pattern: ^[^\s]+$
        type: string
      agent-check:
        enum:
          - enabled
          - disabled
        type: string
        x-dependency:
          agent-port:
            required: true
      agent-inter:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      agent-port:
        maximum: 65535
        minimum: 1
        type: integer
        x-nullable: true
      agent-send:
        type: string
      allow_0rtt:
        type: boolean
      alpn:
        pattern: ^[^\s]+$
        type: string
        x-display-name: ALPN Protocols
      backup:
        enum:
          - enabled
          - disabled
        type: string
      check:
        enum:
          - enabled
          - disabled
        type: string
      check-send-proxy:
        enum:
          - enabled
          - disabled
        type: string
      check-sni:
        pattern: ^[^\s]+$
        type: string
      check-ssl:
        enum:
          - enabled
          - disabled
        type: string
      check_alpn:
        pattern: ^[^\s]+$
        type: string
        x-display-name: Protocols
      check_proto:
        pattern: ^[^\s]+$
        type: string
        x-display-name: Name
      check_via_socks4:
        enum:
          - enabled
          - disabled
        type: string
      ciphers:
        type: string
        x-dependency:
          ssl:
            value: enabled
      ciphersuites:
        type: string
        x-dependency:
          ssl:
            value: enabled
      crl_file:
        type: string
        x-dependency:
          ssl:
            value: enabled
      downinter:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      error_limit:
        type: integer
        x-display-name: Healthcheck error limit
        x-nullable: true
      fall:
        type: integer
        x-display-name: Nr. of consecutive failed checks
        x-nullable: true
      fastinter:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      force_sslv3:
        enum:
          - enabled
          - disabled
        type: string
      force_tlsv10:
        enum:
          - enabled
          - disabled
        type: string
      force_tlsv11:
        enum:
          - enabled
          - disabled
        type: string
      force_tlsv12:
        enum:
          - enabled
          - disabled
        type: string
      force_tlsv13:
        enum:
          - enabled
          - disabled
        type: string
      health_check_address:
        pattern: ^[^\s]+$
        type: string
      health_check_port:
        maximum: 65535
        minimum: 1
        type: integer
        x-nullable: true
      id:
        readOnly: true
        type: string
      inter:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      maintenance:
        enum:
          - enabled
          - disabled
        type: string
      maxconn:
        type: integer
        x-display-name: Max Concurrent Connections
        x-nullable: true
      maxqueue:
        type: integer
        x-display-name: Max Number of Connections
        x-nullable: true
      minconn:
        type: integer
        x-nullable: true
      name:
        readOnly: true
        type: string
      no_sslv3:
        enum:
          - enabled
          - disabled
        type: string
      no_tlsv10:
        enum:
          - enabled
          - disabled
        type: string
      no_tlsv11:
        enum:
          - enabled
          - disabled
        type: string
      no_tlsv12:
        enum:
          - enabled
          - disabled
        type: string
      no_tlsv13:
        enum:
          - enabled
          - disabled
        type: string
      npn:
        type: string
        x-dependency:
          ssl:
            value: enabled
      observe:
        enum:
          - layer4
          - layer7
        type: string
        x-dependency:
          ssl:
            value: enabled
      on-error:
        enum:
          - fastinter
          - fail-check
          - sudden-death
          - mark-down
        type: string
      on-marked-down:
        enum:
          - shutdown-sessions
        type: string
      on-marked-up:
        enum:
          - shutdown-backup-sessions
        type: string
      pool_low_conn:
        type: integer
        x-nullable: true
      pool_max_conn:
        type: integer
        x-nullable: true
      pool_purge_delay:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      port:
        maximum: 65535
        minimum: 1
        readOnly: true
        type: integer
        x-nullable: true
      proto:
        pattern: ^[^\s]+$
        type: string
      proxy-v2-options:
        items:
          enum:
            - authority
            - cert-cn
            - cert-key
            - cert-sig
            - crc32c
            - ssl
            - ssl-cipher
            - unique-id
          type: string
        type: array
        x-omitempty: true
      rise:
        type: integer
        x-nullable: true
      send-proxy:
        enum:
          - enabled
          - disabled
        type: string
      send-proxy-v2:
        enum:
          - enabled
          - disabled
        type: string
      send_proxy_v2_ssl:
        enum:
          - enabled
          - disabled
        type: string
      send_proxy_v2_ssl_cn:
        enum:
          - enabled
          - disabled
        type: string
      slowstart:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      sni:
        pattern: ^[^\s]+$
        type: string
      source:
        type: string
      ssl:
        enum:
          - enabled
          - disabled
        type: string
      ssl_cafile:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          ssl:
            value: enabled
        x-display-name: SSL CA File
      ssl_certificate:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          ssl:
            value: enabled
      ssl_max_ver:
        enum:
          - SSLv3
          - TLSv1.0
          - TLSv1.1
          - TLSv1.2
          - TLSv1.3
        type: string
      ssl_min_ver:
        enum:
          - SSLv3
          - TLSv1.0
          - TLSv1.1
          - TLSv1.2
          - TLSv1.3
        type: string
      ssl_reuse:
        enum:
          - enabled
          - disabled
        type: string
      tfo:
        enum:
          - enabled
          - disabled
        type: string
      tls_tickets:
        enum:
          - enabled
          - disabled
        type: string
        x-dependency:
          ssl:
            value: enabled
      track:
        type: string
      verify:
        enum:
          - none
          - required
        type: string
        x-dependency:
          ssl:
            value: enabled
      verifyhost:
        type: string
        x-dependency:
          ssl:
            value: enabled
          verify:
            value: required
      weight:
        type: integer
        x-nullable: true
      ws:
        enum:
          - auto
          - h1
          - h2
        type: string
        x-display-name: Relaying websocket stream protocol
    title: Runtime Add Server
    type: object
  runtime_server:
    description: Runtime transient server properties
    example:
      address: 127.0.0.5
      admin_state: ready
      operational_state: up
      port: 80
      server_id: 1
      server_name: web_server
    properties:
      address:
        pattern: ^[^\s]+$
        readOnly: true
        type: string
        x-nullable: false
      admin_state:
        enum:
          - ready
          - maint
          - drain
        type: string
      id:
        readOnly: true
        type: string
      name:
        readOnly: true
        type: string
      operational_state:
        enum:
          - up
          - down
          - stopping
        type: string
      port:
        maximum: 65535
        minimum: 1
        readOnly: true
        type: integer
        x-nullable: true
    title: Runtime Server
    type: object
  runtime_servers:
    title: HAProxy Runtime Servers Array
    description: HAProxy runtime servers array
    type: array
    items:
      $ref: "#/definitions/runtime_server"
  stick_table:
    description: Stick Table Information
    properties:
      fields:
        items:
          properties:
            field:
              enum:
                - bytes_in_cnt
                - bytes_in_rate
                - bytes_out_cnt
                - bytes_out_rate
                - conn_cnt
                - conn_cur
                - conn_rate
                - gpc0
                - gpc0_rate
                - gpc1
                - gpc1_rate
                - gpt0
                - http_req_cnt
                - http_req_rate
                - http_err_cnt
                - http_err_rate
                - server_id
                - sess_cnt
                - sess_rate
                - glitch_rate
                - glitch_cnt
              type: string
            period:
              type: integer
              x-dependency:
                type:
                  value: rate
            type:
              enum:
                - rate
                - counter
              type: string
          type: object
          x-go-name: StickTableField
        type: array
        x-omitempty: true
      name:
        type: string
      size:
        type: integer
        x-nullable: true
      type:
        enum:
          - ip
          - ipv6
          - integer
          - string
          - binary
        type: string
      used:
        type: integer
        x-nullable: true
    title: Stick Table
    type: object
  stick_tables:
    title: Stick Tables Array
    description: Array of runtime stick tables
    type: array
    items:
      $ref: "#/definitions/stick_table"
  stick_table_entry:
    description: One entry in stick table
    properties:
      bytes_in_cnt:
        type: integer
        x-nullable: true
      bytes_in_rate:
        type: integer
        x-nullable: true
      bytes_out_cnt:
        type: integer
        x-nullable: true
      bytes_out_rate:
        type: integer
        x-nullable: true
      conn_cnt:
        type: integer
        x-nullable: true
      conn_cur:
        type: integer
        x-nullable: true
      conn_rate:
        type: integer
        x-nullable: true
      exp:
        type: integer
        x-nullable: true
      glitch_cnt:
        type: integer
        x-nullable: true
      glitch_rate:
        type: integer
        x-nullable: true
      gpc0:
        type: integer
        x-nullable: true
      gpc0_rate:
        type: integer
        x-nullable: true
      gpc1:
        type: integer
        x-nullable: true
      gpc1_rate:
        type: integer
        x-nullable: true
      gpt0:
        type: integer
        x-nullable: true
      http_err_cnt:
        type: integer
        x-nullable: true
      http_err_rate:
        type: integer
        x-nullable: true
      http_req_cnt:
        type: integer
        x-nullable: true
      http_req_rate:
        type: integer
        x-nullable: true
      id:
        type: string
      key:
        type: string
      server_id:
        type: integer
        x-nullable: true
      sess_cnt:
        type: integer
        x-nullable: true
      sess_rate:
        type: integer
        x-nullable: true
      use:
        type: boolean
    title: Stick Table Entry
    type: object
  stick_table_entries:
    title: Stick Tables Entries
    description: Entries of one runtime stick table
    type: array
    items:
      $ref: "#/definitions/stick_table_entry"
  cluster_settings:
    description: Settings related to a cluster.
    properties:
      bootstrap_key:
        type: string
      cluster:
        properties:
          address:
            pattern: ^[^\s]+$
            readOnly: true
            type: string
          api_base_path:
            readOnly: true
            type: string
          cluster_id:
            type: string
          description:
            readOnly: true
            type: string
          log_targets:
            items:
              properties:
                address:
                  type: string
                log_format:
                  type: string
                port:
                  maximum: 65535
                  minimum: 1
                  type: integer
                protocol:
                  enum:
                    - tcp
                    - udp
                  type: string
              required:
                - address
                - port
                - protocol
              type: object
              x-go-name: ClusterLogTarget
            type: array
            x-go-name: ClusterLogTargets
            x-omitempty: true
          name:
            readOnly: true
            type: string
          port:
            maximum: 65535
            minimum: 1
            readOnly: true
            type: integer
            x-nullable: true
        title: Cluster controller information
        type: object
      mode:
        enum:
          - single
          - cluster
        type: string
      status:
        enum:
          - active
          - unreachable
          - waiting_approval
        readOnly: true
        type: string
    title: Cluster Settings
    type: object
  map:
    description: Map File
    properties:
      description:
        type: string
      file:
        type: string
      id:
        type: string
      size:
        description: File size in bytes.
        type: integer
        x-nullable: true
      storage_name:
        type: string
    title: Map File
    type: object
  maps:
    title: Map Files Array
    description: Array of runtime map files
    type: array
    items:
      $ref: "#/definitions/map"
  map_entry:
    description: One Map Entry
    properties:
      id:
        readOnly: true
        type: string
      key:
        type: string
      value:
        type: string
    title: One Map Entry
    type: object
  map_entries:
    title: Maps Entries
    description: Entries of one runtime map
    type: array
    items:
      $ref: "#/definitions/map_entry"
  ssl_certificate:
    description: A file containing one or more SSL/TLS certificates and keys
    properties:
      algorithm:
        type: string
      authority_key_id:
        type: string
      description:
        type: string
      domains:
        readOnly: true
        type: string
        x-omitempty: true
      file:
        type: string
      ip_addresses:
        readOnly: true
        type: string
        x-omitempty: true
      issuers:
        readOnly: true
        type: string
        x-omitempty: true
      not_after:
        format: date-time
        readOnly: true
        type: string
        x-go-custom-tag: gorm:"type:timestamp with time zone"
        x-nullable: true
      not_before:
        format: date-time
        readOnly: true
        type: string
        x-go-custom-tag: gorm:"type:timestamp with time zone"
        x-nullable: true
      serial:
        type: string
      sha1_finger_print:
        type: string
      sha256_finger_print:
        type: string
      size:
        description: File size in bytes.
        readOnly: true
        type: integer
        x-nullable: true
      storage_name:
        type: string
      subject:
        type: string
      subject_alternative_names:
        type: string
      subject_key_id:
        type: string
    title: SSL File
    type: object
  ssl_certificates:
    title: SSL Files Array
    description: Array of ssl certificate files
    type: array
    items:
      $ref: "#/definitions/ssl_certificate"
  ssl_cert_entry:
    description: One SSL/TLS certificate
    properties:
      algorithm:
        type: string
      chain_issuer:
        type: string
      chain_subject:
        type: string
      issuer:
        type: string
      not_after:
        format: date
        type: string
      not_before:
        format: date
        type: string
      serial:
        type: string
      sha1_finger_print:
        type: string
      status:
        type: string
      storage_name:
        type: string
      subject:
        type: string
      subject_alternative_names:
        items:
          type: string
        type: array
        x-omitempty: true
    title: One SSL Certificate Entry
    type: object
  acl_file:
    description: ACL File
    properties:
      description:
        type: string
      id:
        type: string
      storage_name:
        type: string
    title: ACL File
    type: object
  acl_files:
    title: ACL Files Array
    description: Array of runtime acl files
    type: array
    items:
      $ref: "#/definitions/acl_file"
  acl_file_entry:
    description: One ACL File Entry
    properties:
      id:
        readOnly: true
        type: string
      value:
        type: string
    title: One ACL File Entry
    type: object
  acl_files_entries:
    title: ACL Files Entries
    description: Array of entries of one runtime acl file
    type: array
    items:
      $ref: "#/definitions/acl_file_entry"
  general_file:
    description: General use file
    properties:
      description:
        type: string
      file:
        type: string
      id:
        type: string
      size:
        description: File size in bytes.
        type: integer
        x-nullable: true
      storage_name:
        type: string
    title: General use file
    type: object
  general_files:
    title: General Files Array
    description: Array of general use files
    type: array
    items:
      $ref: "#/definitions/general_file"
  balance:
    properties:
      algorithm:
        enum:
          - first
          - hash
          - hdr
          - leastconn
          - random
          - rdp-cookie
          - roundrobin
          - source
          - static-rr
          - uri
          - url_param
        type: string
      hash_expression:
        type: string
        x-dependency:
          algorithm:
            value: hash
        x-display-name: Hash Expression
      hdr_name:
        type: string
        x-dependency:
          algorithm:
            required: true
            value: hdr
        x-display-name: Header Name
      hdr_use_domain_only:
        type: boolean
        x-dependency:
          algorithm:
            value: hdr
        x-display-name: Header Use Domain Only
      random_draws:
        type: integer
        x-dependency:
          algorithm:
            value: random
        x-display-name: Random Draws
        x-nullable: false
      rdp_cookie_name:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          algorithm:
            value: rdp-cookie
        x-display-name: Rdp Cookie Name
      uri_depth:
        type: integer
        x-dependency:
          algorithm:
            value: uri
        x-display-name: Uri Depth
      uri_len:
        type: integer
        x-dependency:
          algorithm:
            value: uri
        x-display-name: Uri Len
      uri_path_only:
        type: boolean
        x-dependency:
          algorithm:
            value: uri
        x-display-name: Uri Path Only
      uri_whole:
        type: boolean
        x-dependency:
          algorithm:
            value: uri
        x-display-name: Uri Whole
      url_param:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          algorithm:
            required: true
            value: url_param
        x-display-name: Url Param
      url_param_check_post:
        type: integer
        x-dependency:
          algorithm:
            value: url_param
        x-display-name: Url Param Check Post
      url_param_max_wait:
        type: integer
        x-dependency:
          algorithm:
            value: url_param
        x-display-name: Url Param Max Weight
    required:
      - algorithm
    type: object
  hash_type:
    properties:
      function:
        enum:
          - sdbm
          - djb2
          - wt6
          - crc32
          - none
        type: string
      method:
        enum:
          - map-based
          - consistent
        type: string
      modifier:
        enum:
          - avalanche
        type: string
    type: object
  persist_rule:
    properties:
      rdp_cookie_name:
        pattern: ^[^\s]+$
        type: string
        x-dependency:
          type:
            value: rdp-cookie
        x-display-name: Rdp Cookie Name
      type:
        enum:
          - rdp-cookie
        type: string
    required:
      - type
    type: object
  forwardfor:
    properties:
      enabled:
        enum:
          - enabled
        type: string
      except:
        pattern: ^[^\s]+$
        type: string
      header:
        pattern: ^[^\s]+$
        type: string
      ifnone:
        type: boolean
    required:
      - enabled
    type: object
    x-display-name: ForwardFor
  default_server:
    allOf:
      - $ref: '#/definitions/server_params'
    title: Default Server
  httpchk_params:
    properties:
      host:
        type: string
      method:
        enum:
          - HEAD
          - PUT
          - POST
          - GET
          - TRACE
          - PATCH
          - DELETE
          - CONNECT
          - OPTIONS
        type: string
      uri:
        pattern: ^[^ ]*$
        type: string
      version:
        type: string
    type: object
    x-display-name: HTTP Check
  redispatch:
    properties:
      enabled:
        enum:
          - enabled
          - disabled
        type: string
      interval:
        type: integer
        x-nullable: false
    required:
      - enabled
    type: object
  errorfile:
    properties:
      code:
        enum:
          - 200
          - 400
          - 401
          - 403
          - 404
          - 405
          - 407
          - 408
          - 410
          - 413
          - 425
          - 429
          - 500
          - 501
          - 502
          - 503
          - 504
        type: integer
      file:
        type: string
    type: object
    x-display-name: Error File
  errorfiles:
    properties:
      codes:
        items:
          enum:
            - 200
            - 400
            - 401
            - 403
            - 404
            - 405
            - 407
            - 408
            - 410
            - 413
            - 425
            - 429
            - 500
            - 501
            - 502
            - 503
            - 504
          type: integer
        type: array
        x-omitempty: true
      name:
        type: string
    type: object
  cookie:
    properties:
      attr:
        items:
          properties:
            value:
              pattern: ^[^\s]+$
              type: string
          type: object
          x-go-name: Attr
        type: array
        x-go-name: Attrs
        x-omitempty: true
      domain:
        items:
          properties:
            value:
              pattern: ^[^\s]+$
              type: string
          type: object
          x-go-name: Domain
        type: array
        x-go-name: Domains
        x-omitempty: true
      dynamic:
        type: boolean
      httponly:
        type: boolean
      indirect:
        type: boolean
      maxidle:
        type: integer
      maxlife:
        type: integer
      name:
        pattern: ^[^\s]+$
        type: string
      nocache:
        type: boolean
      postonly:
        type: boolean
      preserve:
        type: boolean
      secure:
        type: boolean
      type:
        enum:
          - rewrite
          - insert
          - prefix
        type: string
    required:
      - name
    type: object
  capture:
    properties:
      length:
        type: integer
        x-nullable: false
      type:
        enum:
          - request
          - response
        type: string
        x-nullable: false
    required:
      - type
      - length
    title: Declare Capture
    type: object
  captures:
    title: Declare capture array
    type: array
    items:
      $ref: "#/definitions/capture"
  resolver:
    allOf:
      - $ref: '#/definitions/resolver_base'
      - properties:
          nameservers:
            additionalProperties:
              $ref: '#/definitions/nameserver'
        type: object
    description: Resolver with all it's children resources
    type: object
    x-go-name: Resolver
  resolver_base:
    description: Runtime DNS configuration
    properties:
      accepted_payload_size:
        maximum: 8192
        minimum: 512
        type: integer
      hold_nx:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      hold_obsolete:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      hold_other:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      hold_refused:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      hold_timeout:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      hold_valid:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      name:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
        x-nullable: false
      parse-resolv-conf:
        type: boolean
      resolve_retries:
        minimum: 1
        type: integer
      timeout_resolve:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: false
      timeout_retry:
        minimum: 0
        type: integer
        x-default-unit: ms
        x-duration: true
        x-nullable: false
    required:
      - name
    title: Resolver Base
    type: object
  resolvers:
    title: Resolvers
    description: HAProxy resolvers array
    type: array
    items:
      $ref: '#/definitions/resolver'
  nameserver:
    description: Nameserver used in Runtime DNS configuration
    example:
      address: 10.0.0.1
      name: ns1
      port: 53
    properties:
      address:
        pattern: ^[^\s]+$
        type: string
      name:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
        x-nullable: false
      port:
        maximum: 65535
        minimum: 1
        type: integer
        x-nullable: true
    required:
      - name
      - address
    title: Nameserver
    type: object
  nameservers:
    title: Nameservers
    description: Nameservers array
    type: array
    items:
      $ref: '#/definitions/nameserver'
  cache:
    description: HAPRoxy Cache section
    properties:
      max_age:
        type: integer
        x-default-unit: s
        x-duration: false
      max_object_size:
        type: integer
        x-size: false
      max_secondary_entries:
        type: integer
      name:
        pattern: ^[A-Za-z0-9-_.:]+$
        type: string
      process_vary:
        type: boolean
        x-nullable: true
      total_max_size:
        maximum: 4095
        minimum: 1
        type: integer
    required:
      - name
    title: Cache
    type: object
  caches:
    title: Cache Sections
    description: HAProxy caches array
    type: array
    items:
      $ref: '#/definitions/cache'
  awsFilters:
    properties:
      key:
        description: Key to use as filter, using the format specified at https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html#options
        type: string
      value:
        description: Value of the filter to use
        type: string
    required:
      - key
      - value
    type: object
  awsRegion:
    description: AWS region configuration
    example:
      access_key_id: '****************L7GT'
      allowlist:
        - key: tag-key
          value: Instance:Having:This:Tag
      denylist:
        - key: tag:Environment
          value: development
      enabled: true
      id: "0"
      ipv4_address: private
      name: frontend-service
      region: us-east-1
      retry_timeout: 1
      secret_access_key: '****************soLl'
    properties:
      access_key_id:
        description: AWS Access Key ID.
        type: string
      allowlist:
        description: Specify the AWS filters used to filter the EC2 instances to add
        items:
          $ref: '#/definitions/awsFilters'
        type: array
        x-omitempty: true
      denylist:
        description: Specify the AWS filters used to filter the EC2 instances to ignore
        items:
          $ref: '#/definitions/awsFilters'
        type: array
        x-omitempty: true
      description:
        type: string
      enabled:
        type: boolean
      id:
        description: Auto generated ID.
        pattern: ^[^\s]+$
        readOnly: true
        type: string
        x-nullable: true
      ipv4_address:
        description: Select which IPv4 address the Service Discovery has to use for the backend server entry
        enum:
          - private
          - public
        type: string
      name:
        type: string
      region:
        type: string
      retry_timeout:
        description: Duration in seconds in-between data pulling requests to the AWS region
        minimum: 1
        type: integer
      secret_access_key:
        description: AWS Secret Access Key.
        type: string
      server_slots_base:
        default: 10
        type: integer
      server_slots_growth_increment:
        type: integer
      server_slots_growth_type:
        default: exponential
        enum:
          - linear
          - exponential
        type: string
    required:
      - name
      - region
      - enabled
      - retry_timeout
      - ipv4_address
    title: AWS region
    type: object
  awsRegions:
    title: AWS
    description: AWS regions array
    type: array
    items:
      $ref: '#/definitions/awsRegion'
  consul:
    additionalProperties: false
    description: Consul server configuration
    example:
      address: 127.0.0.1
      enabled: true
      id: "0"
      port: 90
      retry_timeout: 10
    properties:
      address:
        pattern: ^[^\s]+$
        type: string
      defaults:
        description: Name of the defaults section to be used in backends created by this service
        type: string
      description:
        type: string
      enabled:
        type: boolean
      health_check_policy:
        default: none
        description: |-
          Defines the health check conditions required for each node to be considered valid for the service.
            none: all nodes are considered valid
            any: a node is considered valid if any one health check is 'passing'
            all: a node is considered valid if all health checks are 'passing'
            min: a node is considered valid if the number of 'passing' checks is greater or equal to the 'health_check_policy_min' value.
              If the node has less health checks configured then 'health_check_policy_min' it is considered invalid.
        enum:
          - none
          - any
          - all
          - min
        type: string
      health_check_policy_min:
        type: integer
        x-dependency:
          health_check_policy:
            value: min
      id:
        description: Auto generated ID.
        pattern: ^[^\s]+$
        type: string
        x-nullable: true
      mode:
        default: http
        enum:
          - http
          - https
        type: string
      name:
        type: string
      namespace:
        type: string
      port:
        maximum: 65535
        minimum: 1
        type: integer
      retry_timeout:
        description: Duration in seconds in-between data pulling requests to the consul server
        minimum: 1
        type: integer
      server_slots_base:
        default: 10
        type: integer
      server_slots_growth_increment:
        type: integer
      server_slots_growth_type:
        default: exponential
        enum:
          - linear
          - exponential
        type: string
      service_allowlist:
        items:
          pattern: ^[^\s]+$
          type: string
        type: array
        x-omitempty: true
      service_denylist:
        items:
          pattern: ^[^\s]+$
          type: string
        type: array
        x-omitempty: true
      service_name_regexp:
        description: Regular expression used to filter services by name.
        type: string
      token:
        pattern: ^[^\s]+$
        type: string
    required:
      - address
      - port
      - enabled
      - retry_timeout
    title: Consul server
    type: object
  consuls:
    title: Consuls
    description: Consuls array
    type: array
    items:
      $ref: '#/definitions/consul'
  monitor_uri:
    type: string
  monitor_fail:
    properties:
      cond:
        enum:
          - if
          - unless
        type: string
        x-display-name: Condition
      cond_test:
        type: string
        x-dependency:
          cond:
            required: true
        x-display-name: Condition Test
    required:
      - cond
      - cond_test
    type: object
  originalto:
    properties:
      enabled:
        enum:
          - enabled
        type: string
      except:
        pattern: ^[^\s]+$
        type: string
      header:
        pattern: ^[^\s]+$
        type: string
    required:
      - enabled
    type: object
    x-display-name: OriginalTo
  smtpchk_params:
    properties:
      domain:
        type: string
      hello:
        type: string
    type: object
  mysql_check_params:
    properties:
      client_version:
        enum:
          - pre-41
          - post-41
        type: string
      username:
        type: string
    type: object
  pgsql_check_params:
    properties:
      username:
        type: string
    type: object
  spoe_files:
    description: SPOE files
    items:
      type: string
    title: SPOE files
    type: array
    x-omitempty: true
  spoe_scope:
    description: SPOE scope name
    title: SPOE scope
    type: string
  spoe_scopes:
    title: SPOE Scopes
    description: All SPOE Scopes
    type: array
    items:
      $ref: "#/definitions/spoe_scope"
  spoe_agent:
    description: SPOE agent configuration
    properties:
      async:
        enum:
          - enabled
          - disabled
        type: string
      continue-on-error:
        enum:
          - enabled
        type: string
      dontlog-normal:
        enum:
          - enabled
          - disabled
        type: string
      engine-name:
        type: string
      force-set-var:
        enum:
          - enabled
        type: string
      groups:
        type: string
      hello_timeout:
        type: integer
        x-default-unit: ms
        x-duration: true
      idle_timeout:
        type: integer
        x-default-unit: ms
        x-duration: true
      log:
        $ref: '#/definitions/log_targets'
      max-frame-size:
        type: integer
      max-waiting-frames:
        type: integer
      maxconnrate:
        type: integer
      maxerrrate:
        type: integer
      messages:
        type: string
      name:
        type: string
      option_set-on-error:
        pattern: ^[A-Za-z0-9-_.]+$
        type: string
      option_set-process-time:
        pattern: ^[A-Za-z0-9-_.]+$
        type: string
      option_set-total-time:
        pattern: ^[A-Za-z0-9-_.]+$
        type: string
      option_var-prefix:
        pattern: ^[A-Za-z0-9-_.]+$
        type: string
      pipelining:
        enum:
          - enabled
          - disabled
        type: string
      processing_timeout:
        type: integer
        x-default-unit: ms
        x-duration: true
      register-var-names:
        type: string
      send-frag-payload:
        enum:
          - enabled
          - disabled
        type: string
      use-backend:
        type: string
    required:
      - name
    title: SPOE agent
    type: object
  spoe_agents:
    title: SPOE Agents
    description: SPOE Agents of one scope in SPOE file
    type: array
    items:
      $ref: "#/definitions/spoe_agent"
  spoe_message:
    description: SPOE message section configuration
    properties:
      acl:
        $ref: '#/definitions/acls'
      args:
        type: string
      event:
        properties:
          cond:
            enum:
              - if
              - unless
            type: string
            x-display-name: Condition
          cond_test:
            type: string
            x-dependency:
              cond:
                required: true
            x-display-name: Condition Test
          name:
            enum:
              - on-backend-http-request
              - on-backend-tcp-request
              - on-client-session
              - on-frontend-http-request
              - on-frontend-tcp-request
              - on-http-response
              - on-server-session
              - on-tcp-response
            type: string
        required:
          - name
        type: object
      name:
        type: string
    required:
      - name
    title: SPOE message
    type: object
  spoe_messages:
    title: SPOE Messages
    description: SPOE Messages of one scope in SPOE file
    type: array
    items:
      $ref: "#/definitions/spoe_message"
  spoe_group:
    description: SPOE group section configuration
    properties:
      messages:
        type: string
      name:
        type: string
    required:
      - name
    title: SPOE group
    type: object
  spoe_groups:
    title: SPOE Groups
    description: SPOE Groups of one scope in SPOE file
    type: array
    items:
      $ref: "#/definitions/spoe_group"
  return_header:
    properties:
      fmt:
        type: string
      name:
        type: string
    required:
      - name
      - fmt
    type: object
    x-go-name: ReturnHeader
  compression:
    properties:
      algo-req:
        enum:
          - identity
          - gzip
          - deflate
          - raw-deflate
        type: string
        x-omitempty: true
      algorithms:
        items:
          enum:
            - identity
            - gzip
            - deflate
            - raw-deflate
          type: string
        type: array
        x-omitempty: true
      algos-res:
        items:
          enum:
            - identity
            - gzip
            - deflate
            - raw-deflate
          type: string
        type: array
        x-omitempty: true
      direction:
        enum:
          - request
          - response
          - both
        type: string
        x-omitempty: true
      offload:
        type: boolean
      types:
        items:
          type: string
        type: array
        x-omitempty: true
      types-req:
        items:
          type: string
        type: array
        x-omitempty: true
      types-res:
        items:
          type: string
        type: array
        x-omitempty: true
    type: object
  source:
    properties:
      address:
        type: string
      address_second:
        type: string
      hdr:
        type: string
        x-dependency:
          usesrc:
            value: hdr_ip
      interface:
        type: string
      occ:
        type: string
        x-dependency:
          usesrc:
            value: hdr_ip
      port:
        maximum: 65535
        minimum: 1
        type: integer
      port_second:
        maximum: 65535
        minimum: 1
        type: integer
      usesrc:
        enum:
          - address
          - client
          - clientip
          - hdr_ip
        type: string
    required:
      - address
    type: object
  email_alert:
    description: Send emails for important log messages.
    properties:
      from:
        pattern: ^\S+@\S+$
        type: string
      level:
        enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
        type: string
      mailers:
        type: string
        x-dynamic-enum:
          operation: getMailersSections
          property: name
      myhostname:
        type: string
      to:
        pattern: ^\S+@\S+$
        type: string
    required:
      - from
      - mailers
      - to
    title: Email Alert
    type: object
  email_alerts:
    title: Email Alerts Array
    description: Email Alerts array (corresponds to email-alert directives)
    type: array
    items:
      $ref: '#/definitions/email_alert'
  errorloc:
    properties:
      code:
        enum:
          - 200
          - 400
          - 401
          - 403
          - 404
          - 405
          - 407
          - 408
          - 410
          - 413
          - 425
          - 429
          - 500
          - 501
          - 502
          - 503
          - 504
        type: integer
      url:
        type: string
    required:
      - url
      - code
    type: object
  default_bind:
    allOf:
      - $ref: '#/definitions/bind_params'
    description: HAProxy default bind configuration
    title: Default Bind
  table:
    properties:
      expire:
        pattern: ^\d+(ms|s|m|h|d)?$
        type: string
        x-default-unit: ms
        x-duration: true
        x-nullable: true
      name:
        type: string
        x-nullable: false
      no_purge:
        type: boolean
        x-display-name: No Purge
      size:
        pattern: ^\d+(k|K|m|M|g|G)?$
        type: string
        x-size: true
      store:
        type: string
      type:
        enum:
          - ip
          - integer
          - string
          - binary
        type: string
      type_len:
        type: integer
        x-display-name: Type
        x-nullable: true
      write_to:
        type: string
        x-nullable: true
    type: object
  tables:
    title: Tables
    description: HAProxy table array
    type: array
    items:
      $ref: '#/definitions/table'
  http_codes:
    properties:
      value:
        pattern: ^[a-zA-Z0-9 +\-,]+$
        type: string
        x-display-name: Value
    required:
      - value
    type: object
    x-go-name: HTTPCodes
  crt_store:
    additionalProperties: false
    description: Storage mechanism to load and store certificates used in the configuration
    properties:
      crt_base:
        description: Default directory to fetch SSL certificates from
        type: string
      key_base:
        description: Default directory to fetch SSL private keys from
        type: string
      loads:
        $ref: '#/definitions/crt_loads'
      name:
        pattern: ^[A-Za-z0-9-_]+$
        type: string
        x-nullable: false
    required:
      - name
    title: Certificate Store
    type: object
  crt_stores:
    description: List of Certificate Stores
    type: array
    items:
      $ref: "#/definitions/crt_store"
  crt_load:
    description: Loads a certificate from a store with options
    properties:
      alias:
        description: Certificate alias
        type: string
      certificate:
        description: Certificate filename
        type: string
        x-nullable: false
      issuer:
        description: OCSP issuer filename
        type: string
      key:
        description: Private key filename
        type: string
      ocsp:
        description: OCSP response filename
        type: string
      ocsp_update:
        description: Automatic OCSP response update
        enum:
          - enabled
          - disabled
        type: string
      sctl:
        description: Signed Certificate Timestamp List filename
        type: string
    required:
      - certificate
    title: Certificate load action
    type: object
  crt_loads:
    description: List of certificates to load from a Certificate Store
    type: array
    items:
      $ref: "#/definitions/crt_load"
    x-omitempty: true
  traces:
    additionalProperties: false
    description: Trace events configuration
    properties:
      entries:
        $ref: '#/definitions/trace_entries'
    type: object
    x-go-name: Traces
  trace_entry:
    description: Configure a trace event
    properties:
      trace:
        description: Trace parameters
        minLength: 1
        type: string
        x-nullable: false
    required:
      - trace
    title: Trace event
    type: object
  trace_entries:
    description: list of entries in a traces section
    type: array
    items:
      $ref: "#/definitions/trace_entry"
  log_profile:
    description: Defines a logging profile for one or more steps.
    properties:
      log_tag:
        description: Override syslog log tag set by other "log-tag" directives.
        type: string
      name:
        description: Name of the logging profile.
        minLength: 1
        type: string
        x-nullable: false
      steps:
        $ref: '#/definitions/log_profile_steps'
    required:
      - name
    title: Log Profile
    type: object
  log_profiles:
    description: List of Logging Profiles
    type: array
    items:
      $ref: "#/definitions/log_profile"
  log_profile_step:
    description: Defines what to log for a given step.
    properties:
      drop:
        description: If enabled, no log shall be emitted for the given step.
        enum:
          - enabled
          - disabled
        type: string
      format:
        description: Override "log-format" or "error-log-format" strings depending on the step.
        type: string
      sd:
        description: Override the "log-format-sd" string.
        type: string
      step:
        description: Logging step name.
        enum:
          - accept
          - any
          - close
          - connect
          - error
          - request
          - response
          - http-req
          - http-res
          - http-after-res
          - quic-init
          - tcp-req-conn
          - tcp-req-cont
          - tcp-req-sess
        type: string
        x-nullable: false
    required:
      - step
    title: Log Profile Step
    type: object
  log_profile_steps:
    type: array
    items:
      $ref: "#/definitions/log_profile_step"
    description: List of steps where to override the logging.
    x-omitempty: true
responses:
  BadRequest:
    description: Bad request
    headers:
      Configuration-Version:
        description: Configuration file version
        type: string
    schema:
      $ref: '#/definitions/error'
  NotAcceptable:
    description: The specified resource cannot be handled
    headers:
      Configuration-Version:
        description: Configuration file version
        type: string
    schema:
      $ref: '#/definitions/error'
  NotFound:
    description: The specified resource was not found
    headers:
      Configuration-Version:
        description: Configuration file version
        type: string
    schema:
      $ref: '#/definitions/error'
  AlreadyExists:
    description: The specified resource already exists
    headers:
      Configuration-Version:
        description: Configuration file version
        type: string
    schema:
      $ref: '#/definitions/error'
  DefaultError:
    description: General Error
    headers:
      Configuration-Version:
        description: Configuration file version
        type: string
    schema:
      $ref: '#/definitions/error'
parameters:
  transaction_id:
    name: transaction_id
    in: query
    description: ID of the transaction where we want to add the operation. Cannot be used when version is specified.
    type: string
    required: false
    x-nullable: false
  version:
    name: version
    in: query
    description: Version used for checking configuration version. Cannot be used when transaction is specified, transaction has it's own version.
    type: integer
    required: false
    x-nullable: false
  force_reload:
    name: force_reload
    in: query
    description: If set, do a force reload, do not wait for the configured reload-delay. Cannot be used when transaction is specified, as changes in transaction are not applied directly to configuration.
    type: boolean
    required: false
    default: false
  skip_reload:
    name: skip_reload
    in: query
    description: If set, no reload will be initiated after update
    type: boolean
    required: false
    default: false
  parent_name:
    name: parent_name
    in: path
    description: Parent name
    required: true
    type: string
  full_section:
    name: full_section
    in: query
    description: Indicates if the action affects the specified child resources as well
    type: boolean
    required: false
    default: false
securityDefinitions:
  basic_auth:
    type: basic
basePath: /v3
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: ACL
  - name: Backend
    description: Managing backend configurations (advanced mode)
  - name: BackendSwitchingRule
  - name: Bind
    description: Managing frontend bind configurations (advanced mode)
  - name: Cache
  - name: Cluster
  - name: Configuration
    description: Raw HAProxy configuration management (advanced mode)
  - name: CrtLoad
  - name: CrtStore
  - name: DeclareCapture
  - name: Defaults
    description: Managing defaults configuration (advanced mode)
  - name: DgramBind
  - name: Discovery
    description: API autodiscover endpoints
  - name: FCGIApp
  - name: Filter
  - name: Frontend
    description: Managing frontend configuration (advanced mode)
  - name: Global
    description: Managing global configuration (advanced mode)
  - name: HTTPCheck
  - name: HTTPErrorRule
  - name: HTTPErrors
  - name: HTTPRequestRule
  - name: HTTPResponseRule
  - name: Information
  - name: LogForward
  - name: LogProfile
  - name: LogTarget
  - name: MailerEntry
  - name: Mailers
  - name: Maps
  - name: Nameserver
  - name: Peer
  - name: PeerEntry
  - name: ProcessManager
  - name: Reloads
    description: |
      Checking reload success. To avoid constant reloading we reload in intervals that are configurable when
      with reload-delay option. When a change to configuration is made and force_reload url query string
      parameter is false we issue a request for reload, and return the reload ID in response header. You can
      then use reloads endpoints to check the status of that reload ID. If force_reload is true, we override all
      of this and reload immediately.
  - name: Resolver
  - name: Ring
  - name: Server
    description: Managing backend server configurations (advanced mode)
  - name: ServerSwitchingRule
  - name: ServerTemplate
  - name: ServiceDiscovery
  - name: Sites
    description: |
      Managing sites (simple configuration mode). Sites are considered as one frontend with multiple backends
      connected to it via default_backend or use-backend directives.
  - name: Specification
  - name: SpecificationOpenapiv3
  - name: Spoe
  - name: SpoeTransactions
  - name: Stats
    description: Stats container
  - name: StickRule
  - name: StickTable
  - name: Storage
  - name: TCPCheck
  - name: TCPRequestRule
  - name: TCPResponseRule
  - name: Table
  - name: Traces
  - name: Transactions
    description: |
      Managing transactions. Configuration changes can be grouped in the transaction. You start the
      transaction with trasactions POST, and call the configuration changes you need with parameter
      transaction_id. When you want to commit the transaction, you call the transactions PUT and all changes
      in that transaction is committed. If you call a configuration change without the transaction_id,
      transaction mechanism is implicitly called with one operation in transaction.
  - name: Userlist
security:
  - basic_auth: []
paths:
  /:
    get:
      description: Returns a list of root endpoints.
      operationId: getAPIEndpoints
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/endpoints'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return list of root endpoints
      tags:
        - Discovery
  /specification:
    get:
      description: Return Data Plane API OpenAPI specification
      operationId: getSpecification
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            type: object
        default:
          $ref: '#/responses/DefaultError'
      summary: Data Plane API Specification
      tags:
        - Specification
  /specification_openapiv3:
    get:
      description: Return Data Plane API OpenAPI v3 specification
      operationId: getOpenapiv3Specification
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            type: object
        default:
          $ref: '#/responses/DefaultError'
      summary: Data Plane API v3 Specification
      tags:
        - SpecificationOpenapiv3
  /info:
    get:
      description: Return API, hardware and OS information
      operationId: getInfo
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/info'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return API, hardware and OS information
      tags:
        - Information
  /health:
    get:
      description: Return managed services health
      operationId: getHealth
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/health'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return managed services health
      tags:
        - Health
  /cluster:
    delete:
      description: Delete cluster settings and move the node back to single mode
      operationId: deleteCluster
      parameters:
        - description: In case of moving to single mode do we keep or clean configuration
          enum:
            - keep
          in: query
          name: configuration
          required: false
          type: string
        - $ref: '#/parameters/version'
      responses:
        "204":
          description: Cluster settings deleted and node moved to single mode
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete cluster settings
      tags:
        - Cluster
    get:
      description: Returns cluster data
      operationId: getCluster
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/cluster_settings'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return cluster data
      tags:
        - Cluster
    post:
      description: Post cluster settings
      operationId: postCluster
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/cluster_settings'
        - description: In case of moving to single mode do we keep or clean configuration
          enum:
            - keep
          in: query
          name: configuration
          required: false
          type: string
        - description: Force the advertised address when joining a cluster
          in: query
          name: advertised_address
          required: false
          type: string
        - description: Force the advertised port when joining a cluster
          in: query
          maximum: 65535
          minimum: 1
          name: advertised_port
          required: false
          type: integer
        - $ref: '#/parameters/version'
      responses:
        "200":
          description: Cluster settings changed
          schema:
            $ref: '#/definitions/cluster_settings'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Post cluster settings
      tags:
        - Cluster
    put:
      description: Edit cluster settings
      operationId: editCluster
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/cluster_settings'
        - $ref: '#/parameters/version'
      responses:
        "200":
          description: Cluster settings changed
          schema:
            $ref: '#/definitions/cluster_settings'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Edit cluster settings
      tags:
        - Cluster
  /cluster/certificate:
    post:
      description: Initiates a certificate refresh
      operationId: initiateCertificateRefresh
      responses:
        "200":
          description: refresh activated
        "403":
          description: refresh not possible
        default:
          $ref: '#/responses/DefaultError'
      summary: Initiates a certificate refresh
      tags:
        - Cluster
  /service_discovery/aws:
    get:
      description: Return all configured AWS regions.
      operationId: getAWSRegions
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/awsRegions'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all configured AWS regions
      tags:
        - ServiceDiscovery
    post:
      description: |-
        Add a new AWS region.
        Credentials are not required in case Dataplane API is running in an EC2 instance with proper IAM role attached.
      operationId: createAWSRegion
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/awsRegion'
      responses:
        201:
          description: Resource created
          schema:
            $ref: '#/definitions/awsRegion'
        400:
          $ref: '#/responses/BadRequest'
        409:
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new AWS region
      tags:
        - ServiceDiscovery
  /service_discovery/aws/{id}:
    delete:
      description: Delete an AWS region configuration by it's id.
      operationId: deleteAWSRegion
      parameters:
        - description: AWS region ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: Resource deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete an AWS region
      tags:
        - ServiceDiscovery
    get:
      description: Return one AWS Region configuration by it's id.
      operationId: getAWSRegion
      parameters:
        - description: AWS region id
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/awsRegion'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an AWS region
      tags:
        - ServiceDiscovery
    put:
      description: Replace an AWS region configuration by its id.
      operationId: replaceAWSRegion
      parameters:
        - description: AWS Region ID
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/awsRegion'
      responses:
        "200":
          description: Resource updated
          schema:
            $ref: '#/definitions/awsRegion'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an AWS region
      tags:
        - ServiceDiscovery
  /service_discovery/consul:
    get:
      description: Returns all configured Consul servers.
      operationId: getConsuls
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/consuls'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all configured Consul servers
      tags:
        - ServiceDiscovery
    post:
      description: Adds a new Consul server.
      operationId: createConsul
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/consul'
      responses:
        "201":
          description: Consul created
          schema:
            $ref: '#/definitions/consul'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new Consul server
      tags:
        - ServiceDiscovery
  /service_discovery/consul/{id}:
    delete:
      description: Deletes a Consul server configuration by it's id.
      operationId: deleteConsul
      parameters:
        - description: Consul server Index
          in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: Consul server deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a Consul server
      tags:
        - ServiceDiscovery
    get:
      description: Returns one Consul server configuration by it's id.
      operationId: getConsul
      parameters:
        - description: Consul server id
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/consul'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one Consul server
      tags:
        - ServiceDiscovery
    put:
      description: Replaces a Consul server configuration by it's id.
      operationId: replaceConsul
      parameters:
        - description: Consul Index
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/consul'
      responses:
        "200":
          description: Consul server replaced
          schema:
            $ref: '#/definitions/consul'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Consul server
      tags:
        - ServiceDiscovery
  /services:
    get:
      description: Returns a list of API managed services endpoints.
      operationId: getServicesEndpoints
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/endpoints'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return list of service endpoints
      tags:
        - Discovery
  /services/haproxy:
    get:
      description: Returns a list of HAProxy related endpoints.
      operationId: getHaproxyEndpoints
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/endpoints'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return list of HAProxy related endpoints
      tags:
        - Discovery
  /services/haproxy/sites:
    get:
      description: Returns an array of all configured sites.
      operationId: getSites
      parameters:
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/sites'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of sites
      tags:
        - Sites
    post:
      description: Adds a new site to the configuration file.
      operationId: createSite
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/site'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Site created
          schema:
            $ref: '#/definitions/site'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/site'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a site
      tags:
        - Sites
  /services/haproxy/sites/{name}:
    delete:
      description: Deletes a site from the configuration by it's name.
      operationId: deleteSite
      parameters:
        - description: Site frontend name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Site deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a site
      tags:
        - Sites
    get:
      description: Returns one site configuration by it's name.
      operationId: getSite
      parameters:
        - description: Site frontend name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/site'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a site
      tags:
        - Sites
    put:
      description: Replaces a site configuration by it's name.
      operationId: replaceSite
      parameters:
        - description: Site frontend name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/site'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Site replaced
          schema:
            $ref: '#/definitions/site'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/site'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a site
      tags:
        - Sites
  /services/haproxy/stats:
    get:
      description: Returns a list of HAProxy stats endpoints.
      operationId: getStatsEndpoints
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/endpoints'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return list of HAProxy stats endpoints
      tags:
        - Discovery
  /services/haproxy/stats/native:
    get:
      description: Getting stats from the HAProxy.
      operationId: getStats
      parameters:
        - description: Object type to get stats for (one of frontend, backend, server)
          enum:
            - frontend
            - backend
            - server
          in: query
          name: type
          required: false
          type: string
        - description: Object name to get stats for
          in: query
          name: name
          required: false
          type: string
        - description: Object parent name to get stats for, in case the object is a server
          in: query
          name: parent
          required: false
          type: string
          x-dependency:
            query.type: server
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/native_stats'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/native_stats'
        default:
          $ref: '#/responses/DefaultError'
      summary: Gets stats
      tags:
        - Stats
  /services/haproxy/transactions:
    get:
      description: Returns a list of HAProxy configuration transactions. Transactions can be filtered by their status.
      operationId: getTransactions
      parameters:
        - description: Filter by transaction status
          enum:
            - failed
            - in_progress
          in: query
          name: status
          required: false
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/transactions'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return list of HAProxy configuration transactions.
      tags:
        - Transactions
    post:
      description: Starts a new transaction and returns it's id
      operationId: startTransaction
      parameters:
        - description: Configuration version on which to work on
          in: query
          name: version
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "201":
          description: Transaction started
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/transaction'
        "429":
          description: Too many open transactions
          schema:
            example:
              code: 429
              message: cannot start a new transaction, reached the maximum amount of 20 active transactions available
            properties:
              code:
                type: integer
              message:
                type: string
            type: object
        default:
          $ref: '#/responses/DefaultError'
      summary: Start a new transaction
      tags:
        - Transactions
  /services/haproxy/transactions/{id}:
    delete:
      description: Deletes a transaction.
      operationId: deleteTransaction
      parameters:
        - description: Transaction id
          in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: Transaction deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a transaction
      tags:
        - Transactions
    get:
      description: Returns one HAProxy configuration transactions.
      operationId: getTransaction
      parameters:
        - description: Transaction id
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/transaction'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one HAProxy configuration transactions
      tags:
        - Transactions
    put:
      description: Commit transaction, execute all operations in transaction and return msg
      operationId: commitTransaction
      parameters:
        - description: Transaction id
          in: path
          name: id
          required: true
          type: string
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Transaction successfully committed
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/transaction'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/transaction'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        "406":
          $ref: '#/responses/NotAcceptable'
        default:
          $ref: '#/responses/DefaultError'
      summary: Commit transaction
      tags:
        - Transactions
  /services/haproxy/spoe/spoe_files/{parent_name}/transactions:
    get:
      description: Returns a list of SPOE configuration transactions. Transactions can be filtered by their status.
      operationId: getAllSpoeTransaction
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Filter by transaction status
          enum:
            - failed
            - in_progress
          in: query
          name: status
          required: false
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/spoe_transactions'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return list of SPOE configuration transactions.
      tags:
        - SpoeTransactions
    post:
      description: Starts a new transaction and returns it's id
      operationId: startSpoeTransaction
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Configuration version on which to work on
          in: query
          name: version
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "201":
          description: Transaction started
          schema:
            $ref: '#/definitions/spoe_transaction'
        "429":
          description: Too many open transactions
          schema:
            example:
              code: 429
              message: cannot start a new transaction, reached the maximum amount of 20 active transactions available
            properties:
              code:
                type: integer
              message:
                type: string
            type: object
        default:
          $ref: '#/responses/DefaultError'
      summary: Start a new transaction
      tags:
        - SpoeTransactions
  /services/haproxy/spoe/spoe_files/{parent_name}/transactions/{id}:
    delete:
      description: Deletes a transaction.
      operationId: deleteSpoeTransaction
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Transaction id
          in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: Transaction deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a transaction
      tags:
        - SpoeTransactions
    get:
      description: Returns one SPOE configuration transactions.
      operationId: getSpoeTransaction
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Transaction id
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/spoe_transaction'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one SPOE configuration transactions
      tags:
        - SpoeTransactions
    put:
      description: Commit transaction, execute all operations in transaction and return msg
      operationId: commitSpoeTransaction
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Transaction id
          in: path
          name: id
          required: true
          type: string
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Transaction successfully committed
          schema:
            $ref: '#/definitions/spoe_transaction'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/spoe_transaction'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Commit transaction
      tags:
        - SpoeTransactions
  /services/haproxy/reloads:
    get:
      description: Returns a list of HAProxy reloads.
      operationId: getReloads
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/reloads'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return list of HAProxy Reloads.
      tags:
        - Reloads
  /services/haproxy/reloads/{id}:
    get:
      description: Returns one HAProxy reload status.
      operationId: getReload
      parameters:
        - description: Reload id
          in: path
          name: id
          pattern: ^\d{4}-\d{2}-\d{2}-\d+$
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/reload'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one HAProxy reload status
      tags:
        - Reloads
  /services/haproxy/configuration:
    get:
      description: Returns a list of endpoints to be used for advanced configuration of HAProxy objects.
      operationId: getConfigurationEndpoints
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/endpoints'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return list of HAProxy advanced configuration endpoints
      tags:
        - Discovery
  /services/haproxy/configuration/global:
    get:
      description: Returns global part of configuration.
      operationId: getGlobal
      parameters:
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/global'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a global part of configuration
      tags:
        - Global
    put:
      description: Replace global part of config
      operationId: replaceGlobal
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/global'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Global replaced
          schema:
            $ref: '#/definitions/global'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/global'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace global
      tags:
        - Global
  /services/haproxy/configuration/defaults:
    get:
      description: Returns an array of all configured defaults.
      operationId: getDefaultsSections
      parameters:
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/defaults_sections'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of defaults
      tags:
        - Defaults
    post:
      description: Adds a new defaults section to the configuration file.
      operationId: addDefaultsSection
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/defaults'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "201":
          description: Defaults created
          schema:
            $ref: '#/definitions/defaults'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/defaults'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a defaults section
      tags:
        - Defaults
    put:
      deprecated: true
      description: Adds a new defaults section to the configuration file.
      operationId: createDefaultsSection
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/defaults'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "201":
          description: Defaults created
          schema:
            $ref: '#/definitions/defaults'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/defaults'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a defaults section
      tags:
        - Defaults
  /services/haproxy/configuration/defaults/{name}:
    delete:
      description: Deletes a defaults section from the configuration by it's name.
      operationId: deleteDefaultsSection
      parameters:
        - description: Defaults name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Defaults section deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a defaults section
      tags:
        - Defaults
    get:
      description: Returns one defaults section configuration by it's name.
      operationId: getDefaultsSection
      parameters:
        - description: Defaults name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/defaults'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a defaults section
      tags:
        - Defaults
    put:
      description: Replaces a defatults section configuration by it's name.
      operationId: replaceDefaultsSection
      parameters:
        - description: Defaults name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/defaults'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Defaults section replaced
          schema:
            $ref: '#/definitions/defaults'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/defaults'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a defatults section
      tags:
        - Defaults
  /services/haproxy/configuration/frontends:
    get:
      description: Returns an array of all configured frontends.
      operationId: getFrontends
      parameters:
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/frontends'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of frontends
      tags:
        - Frontend
    post:
      description: Adds a new frontend to the configuration file.
      operationId: createFrontend
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/frontend'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "201":
          description: Frontend created
          schema:
            $ref: '#/definitions/frontend'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/frontend'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a frontend
      tags:
        - Frontend
  /services/haproxy/configuration/frontends/{name}:
    delete:
      description: Deletes a frontend from the configuration by it's name.
      operationId: deleteFrontend
      parameters:
        - description: Frontend name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Frontend deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a frontend
      tags:
        - Frontend
    get:
      description: Returns one frontend configuration by it's name.
      operationId: getFrontend
      parameters:
        - description: Frontend name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/frontend'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a frontend
      tags:
        - Frontend
    put:
      description: Replaces a frontend configuration by it's name.
      operationId: replaceFrontend
      parameters:
        - description: Frontend name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/frontend'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Frontend replaced
          schema:
            $ref: '#/definitions/frontend'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/frontend'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a frontend
      tags:
        - Frontend
  /services/haproxy/configuration/userlists:
    get:
      description: Returns an array of all configured userlists.
      operationId: getUserlists
      parameters:
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/userlists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of userlists
      tags:
        - Userlist
    post:
      description: Adds a new userlist to the configuration file.
      operationId: createUserlist
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/userlist'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "201":
          description: Userlist created
          schema:
            $ref: '#/definitions/userlist'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/userlist'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new userlist
      tags:
        - Userlist
  /services/haproxy/configuration/userlists/{name}:
    delete:
      description: Deletes a userlist configuration by it's name.
      operationId: deleteUserlist
      parameters:
        - description: Userlist name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Userlist deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a userlist
      tags:
        - Userlist
    get:
      description: Returns one userlist configuration by it's name.
      operationId: getUserlist
      parameters:
        - description: Userlist name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/userlist'
        "404":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one userlist
      tags:
        - Userlist
  /services/haproxy/configuration/users:
    get:
      operationId: getUsers
      parameters:
        - description: Parent userlist name
          in: query
          name: userlist
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/users'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of userlist users
      tags:
        - User
    post:
      operationId: createUser
      parameters:
        - description: Parent userlist name
          in: query
          name: userlist
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/user'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: User created
          schema:
            $ref: '#/definitions/user'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/user'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new userlist user
      tags:
        - User
  /services/haproxy/configuration/users/{username}:
    delete:
      operationId: deleteUser
      parameters:
        - description: User username
          in: path
          name: username
          required: true
          type: string
        - description: Parent userlist name
          in: query
          name: userlist
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: User deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a user
      tags:
        - User
    get:
      operationId: getUser
      parameters:
        - description: User username
          in: path
          name: username
          required: true
          type: string
        - description: Parent userlist name
          in: query
          name: userlist
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/user'
        "404":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one userlist user
      tags:
        - User
    put:
      operationId: replaceUser
      parameters:
        - description: User username
          in: path
          name: username
          required: true
          type: string
        - description: Parent userlist name
          in: query
          name: userlist
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/user'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: User replaced
          schema:
            $ref: '#/definitions/user'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/user'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a user
      tags:
        - User
  /services/haproxy/configuration/groups:
    get:
      operationId: getGroups
      parameters:
        - description: Parent userlist name
          in: query
          name: userlist
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/groups'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of userlist groups
      tags:
        - Group
    post:
      operationId: createGroup
      parameters:
        - description: Parent userlist name
          in: query
          name: userlist
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/group'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Group created
          schema:
            $ref: '#/definitions/group'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/group'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new userlist group
      tags:
        - Group
  /services/haproxy/configuration/groups/{name}:
    delete:
      operationId: deleteGroup
      parameters:
        - description: group name
          in: path
          name: name
          required: true
          type: string
        - description: Parent userlist name
          in: query
          name: userlist
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Group deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a group
      tags:
        - Group
    get:
      operationId: getGroup
      parameters:
        - description: Group name
          in: path
          name: name
          required: true
          type: string
        - description: Parent userlist name
          in: query
          name: userlist
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/group'
        "404":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one userlist group
      tags:
        - Group
    put:
      operationId: replaceGroup
      parameters:
        - description: group name
          in: path
          name: name
          required: true
          type: string
        - description: Parent userlist name
          in: query
          name: userlist
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/group'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Group replaced
          schema:
            $ref: '#/definitions/group'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/group'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a group
      tags:
        - Group
  /services/haproxy/configuration/mailers_section:
    get:
      deprecated: true
      description: Returns an array of all the configured mailers in HAProxy
      operationId: getMailersSections
      parameters:
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/mailers_sections'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of mailers sections
      tags:
        - Mailers
    post:
      deprecated: true
      description: Creates a new empty Mailers section
      operationId: createMailersSection
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/mailers_section'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "201":
          description: Mailers created
          schema:
            $ref: '#/definitions/mailers_section'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/mailers_section'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new Mailers section
      tags:
        - Mailers
  /services/haproxy/configuration/mailers_section/{name}:
    delete:
      deprecated: true
      description: Deletes a mailers from the configuration by it's name.
      operationId: deleteMailersSection
      parameters:
        - description: Mailers name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Mailers deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a Mailers section
      tags:
        - Mailers
    get:
      deprecated: true
      description: Returns one mailers configuration by it's name.
      operationId: getMailersSection
      parameters:
        - description: Mailers name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/mailers_section'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a Mailers section
      tags:
        - Mailers
    put:
      deprecated: true
      description: Modifies a mailers configuration by it's name.
      operationId: editMailersSection
      parameters:
        - description: Mailers name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/mailers_section'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Mailers configuration updated
          schema:
            $ref: '#/definitions/mailers_section'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/mailers_section'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Modify a Mailers section
      tags:
        - Mailers
  /services/haproxy/configuration/mailer_entries:
    get:
      deprecated: true
      description: Returns an array of all the mailer_entries configured in the specified mailers section.
      operationId: getMailerEntries
      parameters:
        - description: Parent mailers section name
          in: query
          name: mailers_section
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/mailer_entries'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of mailer_entries
      tags:
        - MailerEntry
    post:
      deprecated: true
      description: Adds a new mailer entry to the specified mailers section in the configuration file.
      operationId: createMailerEntry
      parameters:
        - description: Parent mailers section name
          in: query
          name: mailers_section
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/mailer_entry'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: MailerEntry created
          schema:
            $ref: '#/definitions/mailer_entry'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/mailer_entry'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new mailer_entry
      tags:
        - MailerEntry
  /services/haproxy/configuration/mailer_entries/{name}:
    delete:
      deprecated: true
      description: Deletes a mailer entry configuration by it's name in the specified mailers section.
      operationId: deleteMailerEntry
      parameters:
        - description: MailerEntry name
          in: path
          name: name
          required: true
          type: string
        - description: Parent mailers section name
          in: query
          name: mailers_section
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: MailerEntry deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a mailer_entry
      tags:
        - MailerEntry
    get:
      deprecated: true
      description: Returns one mailer_entry configuration by it's name in the specified mailers section.
      operationId: getMailerEntry
      parameters:
        - description: MailerEntry name
          in: path
          name: name
          required: true
          type: string
        - description: Parent mailers name
          in: query
          name: mailers_section
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/mailer_entry'
        "404":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one mailer_entry
      tags:
        - MailerEntry
    put:
      deprecated: true
      description: Replaces a mailer entry configuration by it's name in the specified mailers section.
      operationId: replaceMailerEntry
      parameters:
        - description: MailerEntry name
          in: path
          name: name
          required: true
          type: string
        - description: Parent mailers section name
          in: query
          name: mailers_section
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/mailer_entry'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: MailerEntry replaced
          schema:
            $ref: '#/definitions/mailer_entry'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/mailer_entry'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a mailer_entry
      tags:
        - MailerEntry
  /services/haproxy/configuration/peer_section:
    get:
      description: Returns an array of all configured peer_section.
      operationId: getPeerSections
      parameters:
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/peer_sections'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of peer_section
      tags:
        - Peer
    post:
      description: Adds a new peer to the configuration file.
      operationId: createPeer
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/peer_section'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "201":
          description: Peer created
          schema:
            $ref: '#/definitions/peer_section'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/peer_section'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a peer
      tags:
        - Peer
  /services/haproxy/configuration/peer_section/{name}:
    delete:
      description: Deletes a peer from the configuration by it's name.
      operationId: deletePeer
      parameters:
        - description: Peer name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Peer deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a peer
      tags:
        - Peer
    get:
      description: Returns one peer configuration by it's name.
      operationId: getPeerSection
      parameters:
        - description: Peer name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/peer_section'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a peer
      tags:
        - Peer
  /services/haproxy/configuration/peer_entries:
    get:
      description: Returns an array of all peer_entries that are configured in specified peer section.
      operationId: getPeerEntries
      parameters:
        - description: Parent peer section name
          in: query
          name: peer_section
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/peer_entries'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of peer_entries
      tags:
        - PeerEntry
    post:
      description: Adds a new peer entry in the specified peer section in the configuration file.
      operationId: createPeerEntry
      parameters:
        - description: Parent peer section name
          in: query
          name: peer_section
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/peer_entry'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: PeerEntry created
          schema:
            $ref: '#/definitions/peer_entry'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/peer_entry'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new peer_entry
      tags:
        - PeerEntry
  /services/haproxy/configuration/peer_entries/{name}:
    delete:
      description: Deletes a peer entry configuration by it's name in the specified peer section.
      operationId: deletePeerEntry
      parameters:
        - description: PeerEntry name
          in: path
          name: name
          required: true
          type: string
        - description: Parent peers name
          in: query
          name: peer_section
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: PeerEntry deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a peer_entry
      tags:
        - PeerEntry
    get:
      description: Returns one peer_entry configuration by it's name in the specified peer section.
      operationId: getPeerEntry
      parameters:
        - description: PeerEntry name
          in: path
          name: name
          required: true
          type: string
        - description: Parent peers name
          in: query
          name: peer_section
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/peer_entry'
        "404":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one peer_entry
      tags:
        - PeerEntry
    put:
      description: Replaces a peer entry configuration by it's name in the specified peer section.
      operationId: replacePeerEntry
      parameters:
        - description: PeerEntry name
          in: path
          name: name
          required: true
          type: string
        - description: Parent peers name
          in: query
          name: peer_section
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/peer_entry'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: PeerEntry replaced
          schema:
            $ref: '#/definitions/peer_entry'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/peer_entry'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a peer_entry
      tags:
        - PeerEntry
  /services/haproxy/configuration/http_errors_sections:
    get:
      description: Returns an array of all configured http-error sections.
      operationId: getHTTPErrorsSections
      parameters:
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_errors_sections'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of http-error sections
      tags:
        - HTTPErrors
    post:
      description: Adds a new http-error section to the configuration.
      operationId: createHTTPErrorsSection
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_errors_section'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: http-error section created
          schema:
            $ref: '#/definitions/http_errors_section'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_errors_section'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new http-error section
      tags:
        - HTTPErrors
  /services/haproxy/configuration/http_errors_sections/{name}:
    delete:
      description: Deletes a http-error section with a given name from the configuration.
      operationId: deleteHTTPErrorsSection
      parameters:
        - description: http-error section name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: http-error section deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a http-error section
      tags:
        - HTTPErrors
    get:
      description: Returns one http-error section with a given name from the configuration.
      operationId: getHTTPErrorsSection
      parameters:
        - description: http-error section name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_errors_section'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a http-error section
      tags:
        - HTTPErrors
    put:
      description: Replaces a http-error section with a given name in the configuration.
      operationId: replaceHTTPErrorsSection
      parameters:
        - description: http-error section name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_errors_section'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: http-error section updated
          schema:
            $ref: '#/definitions/http_errors_section'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_errors_section'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a http-error section
      tags:
        - HTTPErrors
  /services/haproxy/configuration/programs:
    get:
      deprecated: true
      description: Returns an array of all configured programs in the process-manager configuration file.
      operationId: getPrograms
      parameters:
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/programs'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of programs
      tags:
        - ProcessManager
    post:
      deprecated: true
      description: Adds a new program to the process-manager configuration file.
      operationId: createProgram
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/program'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Program created
          schema:
            $ref: '#/definitions/program'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/program'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a program
      tags:
        - ProcessManager
  /services/haproxy/configuration/programs/{name}:
    delete:
      deprecated: true
      description: Deletes a program from the process-manager configuration file by its name.
      operationId: deleteProgram
      parameters:
        - description: Program name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Program deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a program
      tags:
        - ProcessManager
    get:
      deprecated: true
      description: Returns one program by its name from the process-manager configuration file.
      operationId: getProgram
      parameters:
        - description: Program name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/program'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a program
      tags:
        - ProcessManager
    put:
      deprecated: true
      description: Replaces a program from the process-manager configuration by its name.
      operationId: replaceProgram
      parameters:
        - description: Program name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/program'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Program replaced
          schema:
            $ref: '#/definitions/program'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/program'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a program
      tags:
        - ProcessManager
  /services/haproxy/configuration/fcgi_apps:
    get:
      description: Returns an array of all configured FCGI applications.
      operationId: getFCGIApps
      parameters:
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/fcgiApps'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of FCGI apps
      tags:
        - FCGIApp
    post:
      description: Adds a new FCGI application to the configuration file.
      operationId: createFCGIApp
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/fcgiApp'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "201":
          description: Application created
          schema:
            $ref: '#/definitions/fcgiApp'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/fcgiApp'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add an FCGI app
      tags:
        - FCGIApp
  /services/haproxy/configuration/fcgi_apps/{name}:
    delete:
      description: Deletes an FCGI application from the configuration by its name.
      operationId: deleteFCGIApp
      parameters:
        - description: Application name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Application deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete an FCGI app
      tags:
        - FCGIApp
    get:
      description: Returns one FCGI application configuration by its name.
      operationId: getFCGIApp
      parameters:
        - description: Application name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/fcgiApp'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a FCGI app
      tags:
        - FCGIApp
    put:
      description: Replaces a FCGI application configuration by its name.
      operationId: replaceFCGIApp
      parameters:
        - description: Application name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/fcgiApp'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Application replaced
          schema:
            $ref: '#/definitions/fcgiApp'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/fcgiApp'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a FCGI app
      tags:
        - FCGIApp
  /services/haproxy/configuration/backends:
    get:
      description: Returns an array of all configured backends.
      operationId: getBackends
      parameters:
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/backends'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of backends
      tags:
        - Backend
    post:
      description: Adds a new backend to the configuration file.
      operationId: createBackend
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/backend'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "201":
          description: Backend created
          schema:
            $ref: '#/definitions/backend'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/backend'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a backend
      tags:
        - Backend
  /services/haproxy/configuration/backends/{name}:
    delete:
      description: Deletes a backend from the configuration by it's name.
      operationId: deleteBackend
      parameters:
        - description: Backend name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Backend deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a backend
      tags:
        - Backend
    get:
      description: Returns one backend configuration by it's name.
      operationId: getBackend
      parameters:
        - description: Backend name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/backend'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a backend
      tags:
        - Backend
    put:
      description: Replaces a backend configuration by it's name.
      operationId: replaceBackend
      parameters:
        - description: Backend name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/backend'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Backend replaced
          schema:
            $ref: '#/definitions/backend'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/backend'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a backend
      tags:
        - Backend
  /services/haproxy/configuration/backends/{parent_name}/servers:
    get:
      description: Returns an array of all servers that are configured in specified backend.
      operationId: getAllServerBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/servers'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of servers
      tags:
        - Server
    post:
      description: Adds a new server in the specified backend in the configuration file.
      operationId: createServerBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/server'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Server created
          schema:
            $ref: '#/definitions/server'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/server'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new server
      tags:
        - Server
  /services/haproxy/configuration/peers/{parent_name}/servers:
    get:
      description: Returns an array of all servers that are configured in specified backend.
      operationId: getAllServerPeer
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/servers'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of servers
      tags:
        - Server
    post:
      description: Adds a new server in the specified backend in the configuration file.
      operationId: createServerPeer
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/server'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Server created
          schema:
            $ref: '#/definitions/server'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/server'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new server
      tags:
        - Server
  /services/haproxy/configuration/rings/{parent_name}/servers:
    get:
      description: Returns an array of all servers that are configured in specified backend.
      operationId: getAllServerRing
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/servers'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of servers
      tags:
        - Server
    post:
      description: Adds a new server in the specified backend in the configuration file.
      operationId: createServerRing
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/server'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Server created
          schema:
            $ref: '#/definitions/server'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/server'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new server
      tags:
        - Server
  /services/haproxy/configuration/backends/{parent_name}/servers/{name}:
    delete:
      description: Deletes a server configuration by it's name in the specified backend.
      operationId: deleteServerBackend
      parameters:
        - description: Server name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Server deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a server
      tags:
        - Server
    get:
      description: Returns one server configuration by it's name in the specified backend.
      operationId: getServerBackend
      parameters:
        - description: Server name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/server'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one server
      tags:
        - Server
    put:
      description: Replaces a server configuration by it's name in the specified backend.
      operationId: replaceServerBackend
      parameters:
        - description: Server name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/server'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Server replaced
          schema:
            $ref: '#/definitions/server'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/server'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a server
      tags:
        - Server
  /services/haproxy/configuration/peers/{parent_name}/servers/{name}:
    delete:
      description: Deletes a server configuration by it's name in the specified backend.
      operationId: deleteServerPeer
      parameters:
        - description: Server name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Server deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a server
      tags:
        - Server
    get:
      description: Returns one server configuration by it's name in the specified backend.
      operationId: getServerPeer
      parameters:
        - description: Server name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/server'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one server
      tags:
        - Server
    put:
      description: Replaces a server configuration by it's name in the specified backend.
      operationId: replaceServerPeer
      parameters:
        - description: Server name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/server'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Server replaced
          schema:
            $ref: '#/definitions/server'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/server'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a server
      tags:
        - Server
  /services/haproxy/configuration/rings/{parent_name}/servers/{name}:
    delete:
      description: Deletes a server configuration by it's name in the specified backend.
      operationId: deleteServerRing
      parameters:
        - description: Server name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Server deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a server
      tags:
        - Server
    get:
      description: Returns one server configuration by it's name in the specified backend.
      operationId: getServerRing
      parameters:
        - description: Server name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/server'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one server
      tags:
        - Server
    put:
      description: Replaces a server configuration by it's name in the specified backend.
      operationId: replaceServerRing
      parameters:
        - description: Server name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/server'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Server replaced
          schema:
            $ref: '#/definitions/server'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/server'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a server
      tags:
        - Server
  /services/haproxy/configuration/rings:
    get:
      description: Returns an array of all configured rings.
      operationId: getRings
      parameters:
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/rings'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of rings
      tags:
        - Ring
    post:
      description: Adds a new ring to the configuration file.
      operationId: createRing
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/ring'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "201":
          description: Ring created
          schema:
            $ref: '#/definitions/ring'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/ring'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a ring
      tags:
        - Ring
  /services/haproxy/configuration/rings/{name}:
    delete:
      description: Deletes a ring from the configuration by it's name.
      operationId: deleteRing
      parameters:
        - description: Ring name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Ring deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a ring
      tags:
        - Ring
    get:
      description: Returns one ring configuration by it's name.
      operationId: getRing
      parameters:
        - description: Ring name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/ring'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a ring
      tags:
        - Ring
    put:
      description: Replaces a ring configuration by it's name.
      operationId: replaceRing
      parameters:
        - description: Ring name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/ring'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Ring replaced
          schema:
            $ref: '#/definitions/ring'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/ring'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a ring
      tags:
        - Ring
  /services/haproxy/configuration/frontends/{parent_name}/binds:
    get:
      description: Returns an array of all binds that are configured in specified frontend.
      operationId: getAllBindFrontend
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/binds'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of binds
      tags:
        - Bind
    post:
      description: Adds a new bind in the specified frontend in the configuration file.
      operationId: createBindFrontend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/bind'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Bind created
          schema:
            $ref: '#/definitions/bind'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/bind'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new bind
      tags:
        - Bind
  /services/haproxy/configuration/log_forwards/{parent_name}/binds:
    get:
      description: Returns an array of all binds that are configured in specified frontend.
      operationId: getAllBindLogForward
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/binds'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of binds
      tags:
        - Bind
    post:
      description: Adds a new bind in the specified frontend in the configuration file.
      operationId: createBindLogForward
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/bind'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Bind created
          schema:
            $ref: '#/definitions/bind'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/bind'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new bind
      tags:
        - Bind
  /services/haproxy/configuration/peers/{parent_name}/binds:
    get:
      description: Returns an array of all binds that are configured in specified frontend.
      operationId: getAllBindPeer
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/binds'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of binds
      tags:
        - Bind
    post:
      description: Adds a new bind in the specified frontend in the configuration file.
      operationId: createBindPeer
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/bind'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Bind created
          schema:
            $ref: '#/definitions/bind'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/bind'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new bind
      tags:
        - Bind
  /services/haproxy/configuration/frontends/{parent_name}/binds/{name}:
    delete:
      description: Deletes a bind configuration by it's name in the specified frontend.
      operationId: deleteBindFrontend
      parameters:
        - description: Bind name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Bind deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a bind
      tags:
        - Bind
    get:
      description: Returns one bind configuration by it's name in the specified frontend.
      operationId: getBindFrontend
      parameters:
        - description: Bind name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/bind'
        "404":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one bind
      tags:
        - Bind
    put:
      description: Replaces a bind configuration by it's name in the specified frontend.
      operationId: replaceBindFrontend
      parameters:
        - description: Bind name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/bind'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Bind replaced
          schema:
            $ref: '#/definitions/bind'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/bind'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a bind
      tags:
        - Bind
  /services/haproxy/configuration/log_forwards/{parent_name}/binds/{name}:
    delete:
      description: Deletes a bind configuration by it's name in the specified frontend.
      operationId: deleteBindLogForward
      parameters:
        - description: Bind name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Bind deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a bind
      tags:
        - Bind
    get:
      description: Returns one bind configuration by it's name in the specified frontend.
      operationId: getBindLogForward
      parameters:
        - description: Bind name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/bind'
        "404":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one bind
      tags:
        - Bind
    put:
      description: Replaces a bind configuration by it's name in the specified frontend.
      operationId: replaceBindLogForward
      parameters:
        - description: Bind name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/bind'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Bind replaced
          schema:
            $ref: '#/definitions/bind'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/bind'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a bind
      tags:
        - Bind
  /services/haproxy/configuration/peers/{parent_name}/binds/{name}:
    delete:
      description: Deletes a bind configuration by it's name in the specified frontend.
      operationId: deleteBindPeer
      parameters:
        - description: Bind name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Bind deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a bind
      tags:
        - Bind
    get:
      description: Returns one bind configuration by it's name in the specified frontend.
      operationId: getBindPeer
      parameters:
        - description: Bind name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/bind'
        "404":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one bind
      tags:
        - Bind
    put:
      description: Replaces a bind configuration by it's name in the specified frontend.
      operationId: replaceBindPeer
      parameters:
        - description: Bind name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/bind'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Bind replaced
          schema:
            $ref: '#/definitions/bind'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/bind'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a bind
      tags:
        - Bind
  /services/haproxy/configuration/log_forwards/{parent_name}/dgram_binds:
    get:
      description: Returns an array of all dgram binds that are configured in specified log forward.
      operationId: getDgramBinds
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/dgram_binds'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of dgram binds
      tags:
        - DgramBind
    post:
      description: Adds a new dgram bind in the specified log forward in the configuration file.
      operationId: createDgramBind
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/dgram_bind'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Bind created
          schema:
            $ref: '#/definitions/dgram_bind'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/dgram_bind'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new dgram bind
      tags:
        - DgramBind
  /services/haproxy/configuration/log_forwards/{parent_name}/dgram_binds/{name}:
    delete:
      description: Deletes a dgram bind configuration by it's name in the specified log forward.
      operationId: deleteDgramBind
      parameters:
        - description: Bind name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Bind deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a dgram bind
      tags:
        - DgramBind
    get:
      description: Returns one dgram bind configuration by it's name in the specified log forward.
      operationId: getDgramBind
      parameters:
        - description: Bind name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/dgram_bind'
        "404":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one dgram bind
      tags:
        - DgramBind
    put:
      description: Replaces a dgram bind configuration by it's name in the specified log forward.
      operationId: replaceDgramBind
      parameters:
        - description: Bind name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/dgram_bind'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Bind replaced
          schema:
            $ref: '#/definitions/dgram_bind'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/dgram_bind'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a dgram bind
      tags:
        - DgramBind
  /services/haproxy/configuration/log_forwards:
    get:
      description: Returns an array of all configured log forwards.
      operationId: getLogForwards
      parameters:
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/log_forwards'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of log forwards
      tags:
        - LogForward
    post:
      description: Adds a new log_forward to the configuration file.
      operationId: createLogForward
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_forward'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "201":
          description: Log Forward created
          schema:
            $ref: '#/definitions/log_forward'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_forward'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a log forward
      tags:
        - LogForward
  /services/haproxy/configuration/log_forwards/{name}:
    delete:
      description: Deletes a log forward from the configuration by it's name.
      operationId: deleteLogForward
      parameters:
        - description: Log Forward name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Log Forward deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a log forward
      tags:
        - LogForward
    get:
      description: Returns one log forward configuration by it's name.
      operationId: getLogForward
      parameters:
        - description: Log Forward name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/log_forward'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a log forward
      tags:
        - LogForward
    put:
      description: Replaces a log forward configuration by it's name.
      operationId: replaceLogForward
      parameters:
        - description: Log Forward name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_forward'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Log Forward replaced
          schema:
            $ref: '#/definitions/log_forward'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_forward'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a log forward
      tags:
        - LogForward
  /services/haproxy/configuration/backends/{parent_name}/server_templates:
    get:
      description: Returns an array of all server templates that are configured in specified backend.
      operationId: getServerTemplates
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
              x-nullable: false
          schema:
            $ref: '#/definitions/server_templates'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of server templates
      tags:
        - ServerTemplate
    post:
      description: Adds a new server template in the specified backend in the configuration file.
      operationId: createServerTemplate
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/server_template'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Server template created
          schema:
            $ref: '#/definitions/server_template'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/server_template'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new server template
      tags:
        - ServerTemplate
  /services/haproxy/configuration/backends/{parent_name}/server_templates/{prefix}:
    delete:
      description: Deletes a server template configuration by it's prefix in the specified backend.
      operationId: deleteServerTemplate
      parameters:
        - description: Server template prefix
          in: path
          name: prefix
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Server template deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a server template
      tags:
        - ServerTemplate
    get:
      description: Returns one server template configuration by it's prefix in the specified backend.
      operationId: getServerTemplate
      parameters:
        - description: Server template prefix
          in: path
          name: prefix
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
              x-nullable: false
          schema:
            $ref: '#/definitions/server_template'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one server template
      tags:
        - ServerTemplate
    put:
      description: Replaces a server template configuration by it's prefix in the specified backend.
      operationId: replaceServerTemplate
      parameters:
        - description: Server template prefix
          in: path
          name: prefix
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/server_template'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Server template replaced
          schema:
            $ref: '#/definitions/server_template'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/server_template'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a server template
      tags:
        - ServerTemplate
  /services/haproxy/configuration/backends/{parent_name}/http_checks:
    get:
      description: Returns all HTTP checks that are configured in specified parent.
      operationId: getAllHTTPCheckBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_checks'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of HTTP checks
      tags:
        - HTTPCheck
    put:
      description: Replaces a whole list of HTTP checks with the list given in parameter
      operationId: replaceAllHTTPCheckBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_checks'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All HTTP checks lines replaced
          schema:
            $ref: '#/definitions/http_checks'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_checks'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an HTTP checks list
      tags:
        - HTTPCheck
  /services/haproxy/configuration/defaults/{parent_name}/http_checks:
    get:
      description: Returns all HTTP checks that are configured in specified parent.
      operationId: getAllHTTPCheckDefaults
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_checks'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of HTTP checks
      tags:
        - HTTPCheck
    put:
      description: Replaces a whole list of HTTP checks with the list given in parameter
      operationId: replaceAllHTTPCheckDefaults
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_checks'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All HTTP checks lines replaced
          schema:
            $ref: '#/definitions/http_checks'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_checks'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an HTTP checks list
      tags:
        - HTTPCheck
  /services/haproxy/configuration/backends/{parent_name}/http_checks/{index}:
    delete:
      description: Deletes a HTTP check configuration by it's index from the specified parent.
      operationId: deleteHTTPCheckBackend
      parameters:
        - description: HTTP check Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: HTTP check deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a HTTP check
      tags:
        - HTTPCheck
    get:
      description: Returns one HTTP check configuration by it's index in the specified parent.
      operationId: getHTTPCheckBackend
      parameters:
        - description: HTTP Check Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_check'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one HTTP check
      tags:
        - HTTPCheck
    post:
      description: Adds a new HTTP check of the specified type in the specified parent.
      operationId: createHTTPCheckBackend
      parameters:
        - description: HTTP check Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_check'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: HTTP check created
          schema:
            $ref: '#/definitions/http_check'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_check'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new HTTP check
      tags:
        - HTTPCheck
    put:
      description: Replaces a HTTP Check configuration by it's index in the specified parent.
      operationId: replaceHTTPCheckBackend
      parameters:
        - description: HTTP Check Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_check'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: HTTP check replaced
          schema:
            $ref: '#/definitions/http_check'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_check'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a HTTP check
      tags:
        - HTTPCheck
  /services/haproxy/configuration/defaults/{parent_name}/http_checks/{index}:
    delete:
      description: Deletes a HTTP check configuration by it's index from the specified parent.
      operationId: deleteHTTPCheckDefaults
      parameters:
        - description: HTTP check Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: HTTP check deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a HTTP check
      tags:
        - HTTPCheck
    get:
      description: Returns one HTTP check configuration by it's index in the specified parent.
      operationId: getHTTPCheckDefaults
      parameters:
        - description: HTTP Check Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_check'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one HTTP check
      tags:
        - HTTPCheck
    post:
      description: Adds a new HTTP check of the specified type in the specified parent.
      operationId: createHTTPCheckDefaults
      parameters:
        - description: HTTP check Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_check'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: HTTP check created
          schema:
            $ref: '#/definitions/http_check'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_check'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new HTTP check
      tags:
        - HTTPCheck
    put:
      description: Replaces a HTTP Check configuration by it's index in the specified parent.
      operationId: replaceHTTPCheckDefaults
      parameters:
        - description: HTTP Check Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_check'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: HTTP check replaced
          schema:
            $ref: '#/definitions/http_check'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_check'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a HTTP check
      tags:
        - HTTPCheck
  /services/haproxy/configuration/backends/{parent_name}/http_request_rules:
    get:
      description: Returns all HTTP Request Rules that are configured in specified parent.
      operationId: getAllHTTPRequestRuleBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_request_rules'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all HTTP Request Rules
      tags:
        - HTTPRequestRule
    put:
      description: Replaces a whole list of HTTP Request Rules with the list given in parameter
      operationId: replaceAllHTTPRequestRuleBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_request_rules'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All HTTP Request Rule lines replaced
          schema:
            $ref: '#/definitions/http_request_rules'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_request_rules'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an HTTP Request Rule list
      tags:
        - HTTPRequestRule
  /services/haproxy/configuration/frontends/{parent_name}/http_request_rules:
    get:
      description: Returns all HTTP Request Rules that are configured in specified parent.
      operationId: getAllHTTPRequestRuleFrontend
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_request_rules'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all HTTP Request Rules
      tags:
        - HTTPRequestRule
    put:
      description: Replaces a whole list of HTTP Request Rules with the list given in parameter
      operationId: replaceAllHTTPRequestRuleFrontend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_request_rules'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All HTTP Request Rule lines replaced
          schema:
            $ref: '#/definitions/http_request_rules'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_request_rules'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an HTTP Request Rule list
      tags:
        - HTTPRequestRule
  /services/haproxy/configuration/backends/{parent_name}/http_request_rules/{index}:
    delete:
      description: Deletes a HTTP Request Rule configuration by it's index from the specified parent.
      operationId: deleteHTTPRequestRuleBackend
      parameters:
        - description: HTTP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: HTTP Request Rule deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a HTTP Request Rule
      tags:
        - HTTPRequestRule
    get:
      description: Returns one HTTP Request Rule configuration by it's index in the specified parent.
      operationId: getHTTPRequestRuleBackend
      parameters:
        - description: HTTP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_request_rule'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one HTTP Request Rule
      tags:
        - HTTPRequestRule
    post:
      description: Adds a new HTTP Request Rule of the specified type in the specified parent.
      operationId: createHTTPRequestRuleBackend
      parameters:
        - description: HTTP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_request_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: HTTP Request Rule created
          schema:
            $ref: '#/definitions/http_request_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_request_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new HTTP Request Rule
      tags:
        - HTTPRequestRule
    put:
      description: Replaces a HTTP Request Rule configuration by it's index in the specified parent.
      operationId: replaceHTTPRequestRuleBackend
      parameters:
        - description: HTTP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_request_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: HTTP Request Rule replaced
          schema:
            $ref: '#/definitions/http_request_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_request_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a HTTP Request Rule
      tags:
        - HTTPRequestRule
  /services/haproxy/configuration/frontends/{parent_name}/http_request_rules/{index}:
    delete:
      description: Deletes a HTTP Request Rule configuration by it's index from the specified parent.
      operationId: deleteHTTPRequestRuleFrontend
      parameters:
        - description: HTTP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: HTTP Request Rule deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a HTTP Request Rule
      tags:
        - HTTPRequestRule
    get:
      description: Returns one HTTP Request Rule configuration by it's index in the specified parent.
      operationId: getHTTPRequestRuleFrontend
      parameters:
        - description: HTTP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_request_rule'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one HTTP Request Rule
      tags:
        - HTTPRequestRule
    post:
      description: Adds a new HTTP Request Rule of the specified type in the specified parent.
      operationId: createHTTPRequestRuleFrontend
      parameters:
        - description: HTTP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_request_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: HTTP Request Rule created
          schema:
            $ref: '#/definitions/http_request_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_request_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new HTTP Request Rule
      tags:
        - HTTPRequestRule
    put:
      description: Replaces a HTTP Request Rule configuration by it's index in the specified parent.
      operationId: replaceHTTPRequestRuleFrontend
      parameters:
        - description: HTTP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_request_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: HTTP Request Rule replaced
          schema:
            $ref: '#/definitions/http_request_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_request_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a HTTP Request Rule
      tags:
        - HTTPRequestRule
  /services/haproxy/configuration/backends/{parent_name}/http_response_rules:
    get:
      description: Returns all HTTP Response Rules that are configured in specified parent.
      operationId: getAllHTTPResponseRuleBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_response_rules'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all HTTP Response Rules
      tags:
        - HTTPResponseRule
    put:
      description: Replaces a whole list of HTTP Response Rules with the list given in parameter
      operationId: replaceAllHTTPResponseRuleBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_response_rules'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All HTTP Response Rule lines replaced
          schema:
            $ref: '#/definitions/http_response_rules'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_response_rules'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an HTTP Response Rule list
      tags:
        - HTTPResponseRule
  /services/haproxy/configuration/frontends/{parent_name}/http_response_rules:
    get:
      description: Returns all HTTP Response Rules that are configured in specified parent.
      operationId: getAllHTTPResponseRuleFrontend
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_response_rules'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all HTTP Response Rules
      tags:
        - HTTPResponseRule
    put:
      description: Replaces a whole list of HTTP Response Rules with the list given in parameter
      operationId: replaceAllHTTPResponseRuleFrontend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_response_rules'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All HTTP Response Rule lines replaced
          schema:
            $ref: '#/definitions/http_response_rules'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_response_rules'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an HTTP Response Rule list
      tags:
        - HTTPResponseRule
  /services/haproxy/configuration/backends/{parent_name}/http_response_rules/{index}:
    delete:
      description: Deletes a HTTP Response Rule configuration by it's index from the specified parent.
      operationId: deleteHTTPResponseRuleBackend
      parameters:
        - description: HTTP Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: HTTP Response Rule deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a HTTP Response Rule
      tags:
        - HTTPResponseRule
    get:
      description: Returns one HTTP Response Rule configuration by it's index in the specified parent.
      operationId: getHTTPResponseRuleBackend
      parameters:
        - description: HTTP Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_response_rule'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one HTTP Response Rule
      tags:
        - HTTPResponseRule
    post:
      description: Adds a new HTTP Response Rule of the specified type in the specified parent.
      operationId: createHTTPResponseRuleBackend
      parameters:
        - description: HTTP Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_response_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: HTTP Response Rule created
          schema:
            $ref: '#/definitions/http_response_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_response_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new HTTP Response Rule
      tags:
        - HTTPResponseRule
    put:
      description: Replaces a HTTP Response Rule configuration by it's index in the specified parent.
      operationId: replaceHTTPResponseRuleBackend
      parameters:
        - description: HTTP Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_response_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: HTTP Response Rule replaced
          schema:
            $ref: '#/definitions/http_response_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_response_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a HTTP Response Rule
      tags:
        - HTTPResponseRule
  /services/haproxy/configuration/frontends/{parent_name}/http_response_rules/{index}:
    delete:
      description: Deletes a HTTP Response Rule configuration by it's index from the specified parent.
      operationId: deleteHTTPResponseRuleFrontend
      parameters:
        - description: HTTP Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: HTTP Response Rule deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a HTTP Response Rule
      tags:
        - HTTPResponseRule
    get:
      description: Returns one HTTP Response Rule configuration by it's index in the specified parent.
      operationId: getHTTPResponseRuleFrontend
      parameters:
        - description: HTTP Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_response_rule'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one HTTP Response Rule
      tags:
        - HTTPResponseRule
    post:
      description: Adds a new HTTP Response Rule of the specified type in the specified parent.
      operationId: createHTTPResponseRuleFrontend
      parameters:
        - description: HTTP Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_response_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: HTTP Response Rule created
          schema:
            $ref: '#/definitions/http_response_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_response_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new HTTP Response Rule
      tags:
        - HTTPResponseRule
    put:
      description: Replaces a HTTP Response Rule configuration by it's index in the specified parent.
      operationId: replaceHTTPResponseRuleFrontend
      parameters:
        - description: HTTP Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_response_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: HTTP Response Rule replaced
          schema:
            $ref: '#/definitions/http_response_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_response_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a HTTP Response Rule
      tags:
        - HTTPResponseRule
  /services/haproxy/configuration/backends/{parent_name}/http_after_response_rules:
    get:
      description: Returns all HTTP After Response Rules that are configured in specified parent.
      operationId: getAllHTTPAfterResponseRuleBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_after_response_rules'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all HTTP After Response Rules
      tags:
        - HTTPAfterResponseRule
    put:
      description: Replaces a whole list of HTTP After Response Rules with the list given in parameter
      operationId: replaceAllHTTPAfterResponseRuleBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_after_response_rules'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All TTP After Response Rules lines replaced
          schema:
            $ref: '#/definitions/http_after_response_rules'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_after_response_rules'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an HTTP After Response Rules list
      tags:
        - HTTPAfterResponseRule
  /services/haproxy/configuration/frontends/{parent_name}/http_after_response_rules:
    get:
      description: Returns all HTTP After Response Rules that are configured in specified parent.
      operationId: getAllHTTPAfterResponseRuleFrontend
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_after_response_rules'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all HTTP After Response Rules
      tags:
        - HTTPAfterResponseRule
    put:
      description: Replaces a whole list of HTTP After Response Rules with the list given in parameter
      operationId: replaceAllHTTPAfterResponseRuleFrontend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_after_response_rules'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All TTP After Response Rules lines replaced
          schema:
            $ref: '#/definitions/http_after_response_rules'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_after_response_rules'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an HTTP After Response Rules list
      tags:
        - HTTPAfterResponseRule
  /services/haproxy/configuration/backends/{parent_name}/http_after_response_rules/{index}:
    delete:
      description: Deletes a HTTP After Response Rule configuration by it's index from the specified parent.
      operationId: deleteHTTPAfterResponseRuleBackend
      parameters:
        - description: HTTP After Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: HTTP After Response Rule deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a HTTP After Response Rule
      tags:
        - HTTPAfterResponseRule
    get:
      description: Returns one HTTP After Response Rule configuration by it's index in the specified parent.
      operationId: getHTTPAfterResponseRuleBackend
      parameters:
        - description: HTTP After Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_after_response_rule'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one HTTP After Response Rule
      tags:
        - HTTPAfterResponseRule
    post:
      description: Adds a new HTTP After Response Rule of the specified type in the specified parent.
      operationId: createHTTPAfterResponseRuleBackend
      parameters:
        - description: HTTP After Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_after_response_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: HTTP Response Rule created
          schema:
            $ref: '#/definitions/http_after_response_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_after_response_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new HTTP After Response Rule
      tags:
        - HTTPAfterResponseRule
    put:
      description: Replaces a HTTP After Response Rule configuration by it's index in the specified parent.
      operationId: replaceHTTPAfterResponseRuleBackend
      parameters:
        - description: HTTP After Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_after_response_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: HTTP After Response Rule replaced
          schema:
            $ref: '#/definitions/http_after_response_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_after_response_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a HTTP After Response Rule
      tags:
        - HTTPAfterResponseRule
  /services/haproxy/configuration/frontends/{parent_name}/http_after_response_rules/{index}:
    delete:
      description: Deletes a HTTP After Response Rule configuration by it's index from the specified parent.
      operationId: deleteHTTPAfterResponseRuleFrontend
      parameters:
        - description: HTTP After Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: HTTP After Response Rule deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a HTTP After Response Rule
      tags:
        - HTTPAfterResponseRule
    get:
      description: Returns one HTTP After Response Rule configuration by it's index in the specified parent.
      operationId: getHTTPAfterResponseRuleFrontend
      parameters:
        - description: HTTP After Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_after_response_rule'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one HTTP After Response Rule
      tags:
        - HTTPAfterResponseRule
    post:
      description: Adds a new HTTP After Response Rule of the specified type in the specified parent.
      operationId: createHTTPAfterResponseRuleFrontend
      parameters:
        - description: HTTP After Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_after_response_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: HTTP Response Rule created
          schema:
            $ref: '#/definitions/http_after_response_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_after_response_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new HTTP After Response Rule
      tags:
        - HTTPAfterResponseRule
    put:
      description: Replaces a HTTP After Response Rule configuration by it's index in the specified parent.
      operationId: replaceHTTPAfterResponseRuleFrontend
      parameters:
        - description: HTTP After Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_after_response_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: HTTP After Response Rule replaced
          schema:
            $ref: '#/definitions/http_after_response_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_after_response_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a HTTP After Response Rule
      tags:
        - HTTPAfterResponseRule
  /services/haproxy/configuration/backends/{parent_name}/http_error_rules:
    get:
      description: Returns all HTTP Error Rules that are configured in the specified parent.
      operationId: getAllHTTPErrorRuleBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_error_rules'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all HTTP Error Rules
      tags:
        - HTTPErrorRule
    put:
      description: Replaces a whole list of HTTP Error Rules with the list given in parameter
      operationId: replaceAllHTTPErrorRuleBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_error_rules'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All HTTP Error Rules lines replaced
          schema:
            $ref: '#/definitions/http_error_rules'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_error_rules'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an HTTP Error Rules list
      tags:
        - HTTPErrorRule
  /services/haproxy/configuration/frontends/{parent_name}/http_error_rules:
    get:
      description: Returns all HTTP Error Rules that are configured in the specified parent.
      operationId: getAllHTTPErrorRuleFrontend
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_error_rules'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all HTTP Error Rules
      tags:
        - HTTPErrorRule
    put:
      description: Replaces a whole list of HTTP Error Rules with the list given in parameter
      operationId: replaceAllHTTPErrorRuleFrontend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_error_rules'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All HTTP Error Rules lines replaced
          schema:
            $ref: '#/definitions/http_error_rules'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_error_rules'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an HTTP Error Rules list
      tags:
        - HTTPErrorRule
  /services/haproxy/configuration/defaults/{parent_name}/http_error_rules:
    get:
      description: Returns all HTTP Error Rules that are configured in the specified parent.
      operationId: getAllHTTPErrorRuleDefaults
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_error_rules'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all HTTP Error Rules
      tags:
        - HTTPErrorRule
    put:
      description: Replaces a whole list of HTTP Error Rules with the list given in parameter
      operationId: replaceAllHTTPErrorRuleDefaults
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_error_rules'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All HTTP Error Rules lines replaced
          schema:
            $ref: '#/definitions/http_error_rules'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_error_rules'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an HTTP Error Rules list
      tags:
        - HTTPErrorRule
  /services/haproxy/configuration/backends/{parent_name}/http_error_rules/{index}:
    delete:
      description: Deletes a HTTP Error Rule configuration by its index from the specified parent.
      operationId: deleteHTTPErrorRuleBackend
      parameters:
        - description: HTTP Error Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: HTTP Error Rule deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a HTTP Error Rule
      tags:
        - HTTPErrorRule
    get:
      description: Returns one HTTP Error Rule configuration by its index in the specified parent.
      operationId: getHTTPErrorRuleBackend
      parameters:
        - description: HTTP Error Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_error_rule'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one HTTP Error Rule
      tags:
        - HTTPErrorRule
    post:
      description: Adds a new HTTP Error Rule of the specified type in the specified parent.
      operationId: createHTTPErrorRuleBackend
      parameters:
        - description: HTTP Error Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_error_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: HTTP Error Rule created
          schema:
            $ref: '#/definitions/http_error_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_error_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new HTTP Error Rule
      tags:
        - HTTPErrorRule
    put:
      description: Replaces a HTTP Error Rule configuration by its index in the specified parent.
      operationId: replaceHTTPErrorRuleBackend
      parameters:
        - description: HTTP Error Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_error_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: HTTP Error Rule replaced
          schema:
            $ref: '#/definitions/http_error_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_error_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a HTTP Error Rule
      tags:
        - HTTPErrorRule
  /services/haproxy/configuration/frontends/{parent_name}/http_error_rules/{index}:
    delete:
      description: Deletes a HTTP Error Rule configuration by its index from the specified parent.
      operationId: deleteHTTPErrorRuleFrontend
      parameters:
        - description: HTTP Error Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: HTTP Error Rule deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a HTTP Error Rule
      tags:
        - HTTPErrorRule
    get:
      description: Returns one HTTP Error Rule configuration by its index in the specified parent.
      operationId: getHTTPErrorRuleFrontend
      parameters:
        - description: HTTP Error Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_error_rule'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one HTTP Error Rule
      tags:
        - HTTPErrorRule
    post:
      description: Adds a new HTTP Error Rule of the specified type in the specified parent.
      operationId: createHTTPErrorRuleFrontend
      parameters:
        - description: HTTP Error Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_error_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: HTTP Error Rule created
          schema:
            $ref: '#/definitions/http_error_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_error_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new HTTP Error Rule
      tags:
        - HTTPErrorRule
    put:
      description: Replaces a HTTP Error Rule configuration by its index in the specified parent.
      operationId: replaceHTTPErrorRuleFrontend
      parameters:
        - description: HTTP Error Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_error_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: HTTP Error Rule replaced
          schema:
            $ref: '#/definitions/http_error_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_error_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a HTTP Error Rule
      tags:
        - HTTPErrorRule
  /services/haproxy/configuration/defaults/{parent_name}/http_error_rules/{index}:
    delete:
      description: Deletes a HTTP Error Rule configuration by its index from the specified parent.
      operationId: deleteHTTPErrorRuleDefaults
      parameters:
        - description: HTTP Error Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: HTTP Error Rule deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a HTTP Error Rule
      tags:
        - HTTPErrorRule
    get:
      description: Returns one HTTP Error Rule configuration by its index in the specified parent.
      operationId: getHTTPErrorRuleDefaults
      parameters:
        - description: HTTP Error Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/http_error_rule'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one HTTP Error Rule
      tags:
        - HTTPErrorRule
    post:
      description: Adds a new HTTP Error Rule of the specified type in the specified parent.
      operationId: createHTTPErrorRuleDefaults
      parameters:
        - description: HTTP Error Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_error_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: HTTP Error Rule created
          schema:
            $ref: '#/definitions/http_error_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_error_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new HTTP Error Rule
      tags:
        - HTTPErrorRule
    put:
      description: Replaces a HTTP Error Rule configuration by its index in the specified parent.
      operationId: replaceHTTPErrorRuleDefaults
      parameters:
        - description: HTTP Error Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/http_error_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: HTTP Error Rule replaced
          schema:
            $ref: '#/definitions/http_error_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/http_error_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a HTTP Error Rule
      tags:
        - HTTPErrorRule
  /services/haproxy/configuration/frontends/{parent_name}/quic_initial_rules:
    get:
      description: Returns all QUIC Initial rules that are configured in specified parent.
      operationId: getAllQUICInitialRuleFrontend
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/quic_initial_rules'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all QUIC Initial rules
      tags:
        - QUICInitialRule
    put:
      description: Replaces a whole list of QUIC Initial rules with the list given in parameter
      operationId: replaceAllQUICInitialRuleFrontend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/quic_initial_rules'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All TTP After Response Rules lines replaced
          schema:
            $ref: '#/definitions/quic_initial_rules'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/quic_initial_rules'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an QUIC Initial rules list
      tags:
        - QUICInitialRule
  /services/haproxy/configuration/defaults/{parent_name}/quic_initial_rules:
    get:
      description: Returns all QUIC Initial rules that are configured in specified parent.
      operationId: getAllQUICInitialRuleDefaults
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/quic_initial_rules'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all QUIC Initial rules
      tags:
        - QUICInitialRule
    put:
      description: Replaces a whole list of QUIC Initial rules with the list given in parameter
      operationId: replaceAllQUICInitialRuleDefaults
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/quic_initial_rules'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All TTP After Response Rules lines replaced
          schema:
            $ref: '#/definitions/quic_initial_rules'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/quic_initial_rules'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an QUIC Initial rules list
      tags:
        - QUICInitialRule
  /services/haproxy/configuration/frontends/{parent_name}/quic_initial_rules/{index}:
    delete:
      description: Deletes a QUIC Initial Rule configuration by it's index from the specified parent.
      operationId: deleteQUICInitialRuleFrontend
      parameters:
        - description: QUIC Initial Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: QUIC Initial Rule deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a QUIC Initial Rule
      tags:
        - QUICInitialRule
    get:
      description: Returns one QUIC Initial Rule configuration by it's index in the specified parent.
      operationId: getQUICInitialRuleFrontend
      parameters:
        - description: QUIC Initial Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/quic_initial_rule'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one QUIC Initial Rule
      tags:
        - QUICInitialRule
    post:
      description: Adds a new QUIC Initial Rule of the specified type in the specified parent.
      operationId: createQUICInitialRuleFrontend
      parameters:
        - description: QUIC Initial Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/quic_initial_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: HTTP Response Rule created
          schema:
            $ref: '#/definitions/quic_initial_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/quic_initial_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new QUIC Initial Rule
      tags:
        - QUICInitialRule
    put:
      description: Replaces a QUIC Initial Rule configuration by it's index in the specified parent.
      operationId: replaceQUICInitialRuleFrontend
      parameters:
        - description: QUIC Initial Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/quic_initial_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: QUIC Initial Rule replaced
          schema:
            $ref: '#/definitions/quic_initial_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/quic_initial_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a QUIC Initial Rule
      tags:
        - QUICInitialRule
  /services/haproxy/configuration/defaults/{parent_name}/quic_initial_rules/{index}:
    delete:
      description: Deletes a QUIC Initial Rule configuration by it's index from the specified parent.
      operationId: deleteQUICInitialRuleDefaults
      parameters:
        - description: QUIC Initial Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: QUIC Initial Rule deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a QUIC Initial Rule
      tags:
        - QUICInitialRule
    get:
      description: Returns one QUIC Initial Rule configuration by it's index in the specified parent.
      operationId: getQUICInitialRuleDefaults
      parameters:
        - description: QUIC Initial Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/quic_initial_rule'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one QUIC Initial Rule
      tags:
        - QUICInitialRule
    post:
      description: Adds a new QUIC Initial Rule of the specified type in the specified parent.
      operationId: createQUICInitialRuleDefaults
      parameters:
        - description: QUIC Initial Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/quic_initial_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: HTTP Response Rule created
          schema:
            $ref: '#/definitions/quic_initial_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/quic_initial_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new QUIC Initial Rule
      tags:
        - QUICInitialRule
    put:
      description: Replaces a QUIC Initial Rule configuration by it's index in the specified parent.
      operationId: replaceQUICInitialRuleDefaults
      parameters:
        - description: QUIC Initial Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/quic_initial_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: QUIC Initial Rule replaced
          schema:
            $ref: '#/definitions/quic_initial_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/quic_initial_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a QUIC Initial Rule
      tags:
        - QUICInitialRule
  /services/haproxy/configuration/peers/{parent_name}/tables:
    get:
      description: Returns an array of all tables that are configured in specified peer section.
      operationId: getTables
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/tables'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of tables
      tags:
        - Table
    post:
      description: Adds a new table in the specified peer section in the configuration file.
      operationId: createTable
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/table'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Table created
          schema:
            $ref: '#/definitions/table'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/table'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new table
      tags:
        - Table
  /services/haproxy/configuration/peers/{parent_name}/tables/{name}:
    delete:
      description: Deletes a table configuration by it's name in the specified peer section.
      operationId: deleteTable
      parameters:
        - description: Table name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Table deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a table
      tags:
        - Table
    get:
      description: Returns one table configuration by it's name in the specified peer section.
      operationId: getTable
      parameters:
        - description: Table name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/table'
        "404":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one table
      tags:
        - Table
    put:
      description: Replaces a table configuration by it's name in the specified peer section.
      operationId: replaceTable
      parameters:
        - description: Table name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/table'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Table replaced
          schema:
            $ref: '#/definitions/table'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/table'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a table
      tags:
        - Table
  /services/haproxy/configuration/backends/{parent_name}/tcp_checks:
    get:
      description: Returns all TCP checks that are configured in specified parent.
      operationId: getAllTCPCheckBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/tcp_checks'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of TCP checks
      tags:
        - TCPCheck
    put:
      description: Replaces a whole list of TCP Checks with the list given in parameter
      operationId: replaceAllTCPCheckBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/tcp_checks'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All TCP Check lines replaced
          schema:
            $ref: '#/definitions/tcp_checks'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/tcp_checks'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an TCP Check list
      tags:
        - TCPCheck
  /services/haproxy/configuration/defaults/{parent_name}/tcp_checks:
    get:
      description: Returns all TCP checks that are configured in specified parent.
      operationId: getAllTCPCheckDefaults
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/tcp_checks'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of TCP checks
      tags:
        - TCPCheck
    put:
      description: Replaces a whole list of TCP Checks with the list given in parameter
      operationId: replaceAllTCPCheckDefaults
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/tcp_checks'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All TCP Check lines replaced
          schema:
            $ref: '#/definitions/tcp_checks'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/tcp_checks'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an TCP Check list
      tags:
        - TCPCheck
  /services/haproxy/configuration/backends/{parent_name}/tcp_checks/{index}:
    delete:
      description: Deletes a TCP check configuration by it's index from the specified parent.
      operationId: deleteTCPCheckBackend
      parameters:
        - description: TCP check Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: TCP check deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a TCP check
      tags:
        - TCPCheck
    get:
      description: Returns one TCP check configuration by it's index in the specified parent.
      operationId: getTCPCheckBackend
      parameters:
        - description: TCP Check Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/tcp_check'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one TCP check
      tags:
        - TCPCheck
    post:
      description: Adds a new TCP check of the specified type in the specified parent.
      operationId: createTCPCheckBackend
      parameters:
        - description: TCP check Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/tcp_check'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: TCP check created
          schema:
            $ref: '#/definitions/tcp_check'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/tcp_check'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new TCP check
      tags:
        - TCPCheck
    put:
      description: Replaces a TCP Check configuration by it's index in the specified parent.
      operationId: replaceTCPCheckBackend
      parameters:
        - description: TCP Check Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/tcp_check'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: TCP check replaced
          schema:
            $ref: '#/definitions/tcp_check'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/tcp_check'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a TCP check
      tags:
        - TCPCheck
  /services/haproxy/configuration/defaults/{parent_name}/tcp_checks/{index}:
    delete:
      description: Deletes a TCP check configuration by it's index from the specified parent.
      operationId: deleteTCPCheckDefaults
      parameters:
        - description: TCP check Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: TCP check deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a TCP check
      tags:
        - TCPCheck
    get:
      description: Returns one TCP check configuration by it's index in the specified parent.
      operationId: getTCPCheckDefaults
      parameters:
        - description: TCP Check Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/tcp_check'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one TCP check
      tags:
        - TCPCheck
    post:
      description: Adds a new TCP check of the specified type in the specified parent.
      operationId: createTCPCheckDefaults
      parameters:
        - description: TCP check Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/tcp_check'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: TCP check created
          schema:
            $ref: '#/definitions/tcp_check'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/tcp_check'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new TCP check
      tags:
        - TCPCheck
    put:
      description: Replaces a TCP Check configuration by it's index in the specified parent.
      operationId: replaceTCPCheckDefaults
      parameters:
        - description: TCP Check Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/tcp_check'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: TCP check replaced
          schema:
            $ref: '#/definitions/tcp_check'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/tcp_check'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a TCP check
      tags:
        - TCPCheck
  /services/haproxy/configuration/backends/{parent_name}/tcp_request_rules:
    get:
      description: Returns all TCP Request Rules that are configured in specified parent and parent type.
      operationId: getAllTCPRequestRuleBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/tcp_request_rules'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all TCP Request Rules
      tags:
        - TCPRequestRule
    put:
      description: Replaces a whole list of TCP Request Rules with the list given in parameter
      operationId: replaceAllTCPRequestRuleBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/tcp_request_rules'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All TCP Request Rule lines replaced
          schema:
            $ref: '#/definitions/tcp_request_rules'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/tcp_request_rules'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an TCP Request Rule list
      tags:
        - TCPRequestRule
  /services/haproxy/configuration/frontends/{parent_name}/tcp_request_rules:
    get:
      description: Returns all TCP Request Rules that are configured in specified parent and parent type.
      operationId: getAllTCPRequestRuleFrontend
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/tcp_request_rules'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all TCP Request Rules
      tags:
        - TCPRequestRule
    put:
      description: Replaces a whole list of TCP Request Rules with the list given in parameter
      operationId: replaceAllTCPRequestRuleFrontend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/tcp_request_rules'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All TCP Request Rule lines replaced
          schema:
            $ref: '#/definitions/tcp_request_rules'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/tcp_request_rules'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an TCP Request Rule list
      tags:
        - TCPRequestRule
  /services/haproxy/configuration/backends/{parent_name}/tcp_request_rules/{index}:
    delete:
      description: Deletes a TCP Request Rule configuration by it's index from the specified parent.
      operationId: deleteTCPRequestRuleBackend
      parameters:
        - description: TCP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: TCP Request Rule deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a TCP Request Rule
      tags:
        - TCPRequestRule
    get:
      description: Returns one TCP Request Rule configuration by it's index in the specified parent.
      operationId: getTCPRequestRuleBackend
      parameters:
        - description: TCP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/tcp_request_rule'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one TCP Request Rule
      tags:
        - TCPRequestRule
    post:
      description: Adds a new TCP Request Rule of the specified type in the specified parent.
      operationId: createTCPRequestRuleBackend
      parameters:
        - description: TCP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/tcp_request_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: TCP Request Rule created
          schema:
            $ref: '#/definitions/tcp_request_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/tcp_request_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new TCP Request Rule
      tags:
        - TCPRequestRule
    put:
      description: Replaces a TCP Request Rule configuration by it's index in the specified parent.
      operationId: replaceTCPRequestRuleBackend
      parameters:
        - description: TCP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/tcp_request_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: TCP Request Rule replaced
          schema:
            $ref: '#/definitions/tcp_request_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/tcp_request_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a TCP Request Rule
      tags:
        - TCPRequestRule
  /services/haproxy/configuration/frontends/{parent_name}/tcp_request_rules/{index}:
    delete:
      description: Deletes a TCP Request Rule configuration by it's index from the specified parent.
      operationId: deleteTCPRequestRuleFrontend
      parameters:
        - description: TCP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: TCP Request Rule deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a TCP Request Rule
      tags:
        - TCPRequestRule
    get:
      description: Returns one TCP Request Rule configuration by it's index in the specified parent.
      operationId: getTCPRequestRuleFrontend
      parameters:
        - description: TCP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/tcp_request_rule'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one TCP Request Rule
      tags:
        - TCPRequestRule
    post:
      description: Adds a new TCP Request Rule of the specified type in the specified parent.
      operationId: createTCPRequestRuleFrontend
      parameters:
        - description: TCP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/tcp_request_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: TCP Request Rule created
          schema:
            $ref: '#/definitions/tcp_request_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/tcp_request_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new TCP Request Rule
      tags:
        - TCPRequestRule
    put:
      description: Replaces a TCP Request Rule configuration by it's index in the specified parent.
      operationId: replaceTCPRequestRuleFrontend
      parameters:
        - description: TCP Request Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/tcp_request_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: TCP Request Rule replaced
          schema:
            $ref: '#/definitions/tcp_request_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/tcp_request_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a TCP Request Rule
      tags:
        - TCPRequestRule
  /services/haproxy/configuration/backends/{parent_name}/tcp_response_rules:
    get:
      description: Returns all TCP Response Rules that are configured in specified backend.
      operationId: getAllTCPResponseRuleBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/tcp_response_rules'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all TCP Response Rules
      tags:
        - TCPResponseRule
    put:
      description: Replaces a whole list of TCP Response Rules with the list given in parameter
      operationId: replaceAllTCPResponseRuleBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/tcp_response_rules'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All TCP Response Rule lines replaced
          schema:
            $ref: '#/definitions/tcp_response_rules'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/tcp_response_rules'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a TCP Response Rule list
      tags:
        - TCPResponseRule
  /services/haproxy/configuration/backends/{parent_name}/tcp_response_rules/{index}:
    delete:
      description: Deletes a TCP Response Rule configuration by it's index from the specified backend.
      operationId: deleteTCPResponseRuleBackend
      parameters:
        - description: TCP Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: TCP Response Rule deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a TCP Response Rule
      tags:
        - TCPResponseRule
    get:
      description: Returns one TCP Response Rule configuration by it's index in the specified backend.
      operationId: getTCPResponseRuleBackend
      parameters:
        - description: TCP Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/tcp_response_rule'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one TCP Response Rule
      tags:
        - TCPResponseRule
    post:
      description: Adds a new TCP Response Rule of the specified type in the specified backend.
      operationId: createTCPResponseRuleBackend
      parameters:
        - description: TCP Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/tcp_response_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: TCP Response Rule created
          schema:
            $ref: '#/definitions/tcp_response_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/tcp_response_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new TCP Response Rule
      tags:
        - TCPResponseRule
    put:
      description: Replaces a TCP Response Rule configuration by it's Index in the specified backend.
      operationId: replaceTCPResponseRuleBackend
      parameters:
        - description: TCP Response Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/tcp_response_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: TCP Response Rule replaced
          schema:
            $ref: '#/definitions/tcp_response_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/tcp_response_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a TCP Response Rule
      tags:
        - TCPResponseRule
  /services/haproxy/configuration/frontends/{parent_name}/backend_switching_rules:
    get:
      description: Returns all Backend Switching Rules that are configured in specified frontend.
      operationId: getBackendSwitchingRules
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/backend_switching_rules'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all Backend Switching Rules
      tags:
        - BackendSwitchingRule
    put:
      description: Replaces a whole list of Backend Switching Rules with the list given in parameter
      operationId: replaceBackendSwitchingRules
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/backend_switching_rules'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All Backend Switching Rule lines replaced
          schema:
            $ref: '#/definitions/backend_switching_rules'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/backend_switching_rules'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an Backend Switching Rule list
      tags:
        - BackendSwitchingRule
  /services/haproxy/configuration/frontends/{parent_name}/backend_switching_rules/{index}:
    delete:
      description: Deletes a Backend Switching Rule configuration by it's index from the specified frontend.
      operationId: deleteBackendSwitchingRule
      parameters:
        - description: Switching Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Backend Switching Rule deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a Backend Switching Rule
      tags:
        - BackendSwitchingRule
    get:
      description: Returns one Backend Switching Rule configuration by it's index in the specified frontend.
      operationId: getBackendSwitchingRule
      parameters:
        - description: Switching Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/backend_switching_rule'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one Backend Switching Rule
      tags:
        - BackendSwitchingRule
    post:
      description: Adds a new Backend Switching Rule of the specified type in the specified frontend.
      operationId: createBackendSwitchingRule
      parameters:
        - description: Switching Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/backend_switching_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Backend Switching Rule created
          schema:
            $ref: '#/definitions/backend_switching_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/backend_switching_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new Backend Switching Rule
      tags:
        - BackendSwitchingRule
    put:
      description: Replaces a Backend Switching Rule configuration by it's index in the specified frontend.
      operationId: replaceBackendSwitchingRule
      parameters:
        - description: Switching Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/backend_switching_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Backend Switching Rule replaced
          schema:
            $ref: '#/definitions/backend_switching_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/backend_switching_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Backend Switching Rule
      tags:
        - BackendSwitchingRule
  /services/haproxy/configuration/backends/{parent_name}/server_switching_rules:
    get:
      description: Returns all Backend Switching Rules that are configured in specified backend.
      operationId: getServerSwitchingRules
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/server_switching_rules'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all Server Switching Rules
      tags:
        - ServerSwitchingRule
    put:
      description: Replaces a whole list of Server Switching Rules with the list given in parameter
      operationId: replaceServerSwitchingRules
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/server_switching_rules'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All Server Switching Rule lines replaced
          schema:
            $ref: '#/definitions/server_switching_rules'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/server_switching_rules'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an Server Switching Rule list
      tags:
        - ServerSwitchingRule
  /services/haproxy/configuration/backends/{parent_name}/server_switching_rules/{index}:
    delete:
      description: Deletes a Server Switching Rule configuration by it's index from the specified backend.
      operationId: deleteServerSwitchingRule
      parameters:
        - description: Switching Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Server Switching Rule deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a Server Switching Rule
      tags:
        - ServerSwitchingRule
    get:
      description: Returns one Server Switching Rule configuration by it's index in the specified backend.
      operationId: getServerSwitchingRule
      parameters:
        - description: Switching Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/server_switching_rule'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one Server Switching Rule
      tags:
        - ServerSwitchingRule
    post:
      description: Adds a new Server Switching Rule of the specified type in the specified backend.
      operationId: createServerSwitchingRule
      parameters:
        - description: Switching Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/server_switching_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Server Switching Rule created
          schema:
            $ref: '#/definitions/server_switching_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/server_switching_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new Server Switching Rule
      tags:
        - ServerSwitchingRule
    put:
      description: Replaces a Server Switching Rule configuration by it's index in the specified backend.
      operationId: replaceServerSwitchingRule
      parameters:
        - description: Switching Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/server_switching_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Server Switching Rule replaced
          schema:
            $ref: '#/definitions/server_switching_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/server_switching_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Server Switching Rule
      tags:
        - ServerSwitchingRule
  /services/haproxy/configuration/backends/{parent_name}/filters:
    get:
      description: Returns all Filters that are configured in specified parent.
      operationId: getAllFilterBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/filters'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all Filters
      tags:
        - Filter
    put:
      description: Replaces a whole list of Filters with the list given in parameter
      operationId: replaceAllFilterBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/filters'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All Filter lines replaced
          schema:
            $ref: '#/definitions/filters'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/filters'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Filter list
      tags:
        - Filter
  /services/haproxy/configuration/frontends/{parent_name}/filters:
    get:
      description: Returns all Filters that are configured in specified parent.
      operationId: getAllFilterFrontend
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/filters'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all Filters
      tags:
        - Filter
    put:
      description: Replaces a whole list of Filters with the list given in parameter
      operationId: replaceAllFilterFrontend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/filters'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All Filter lines replaced
          schema:
            $ref: '#/definitions/filters'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/filters'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Filter list
      tags:
        - Filter
  /services/haproxy/configuration/backends/{parent_name}/filters/{index}:
    delete:
      description: Deletes a Filter configuration by it's index from the specified parent.
      operationId: deleteFilterBackend
      parameters:
        - description: Filter Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Filter deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a Filter
      tags:
        - Filter
    get:
      description: Returns one Filter configuration by it's index in the specified parent.
      operationId: getFilterBackend
      parameters:
        - description: Filter Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/filter'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one Filter
      tags:
        - Filter
    post:
      description: Adds a new Filter of the specified type in the specified parent.
      operationId: createFilterBackend
      parameters:
        - description: Filter Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/filter'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Filter created
          schema:
            $ref: '#/definitions/filter'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/filter'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new Filter
      tags:
        - Filter
    put:
      description: Replaces a Filter configuration by it's index in the specified parent.
      operationId: replaceFilterBackend
      parameters:
        - description: Filter Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/filter'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Filter replaced
          schema:
            $ref: '#/definitions/filter'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/filter'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Filter
      tags:
        - Filter
  /services/haproxy/configuration/frontends/{parent_name}/filters/{index}:
    delete:
      description: Deletes a Filter configuration by it's index from the specified parent.
      operationId: deleteFilterFrontend
      parameters:
        - description: Filter Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Filter deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a Filter
      tags:
        - Filter
    get:
      description: Returns one Filter configuration by it's index in the specified parent.
      operationId: getFilterFrontend
      parameters:
        - description: Filter Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/filter'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one Filter
      tags:
        - Filter
    post:
      description: Adds a new Filter of the specified type in the specified parent.
      operationId: createFilterFrontend
      parameters:
        - description: Filter Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/filter'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Filter created
          schema:
            $ref: '#/definitions/filter'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/filter'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new Filter
      tags:
        - Filter
    put:
      description: Replaces a Filter configuration by it's index in the specified parent.
      operationId: replaceFilterFrontend
      parameters:
        - description: Filter Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/filter'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Filter replaced
          schema:
            $ref: '#/definitions/filter'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/filter'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Filter
      tags:
        - Filter
  /services/haproxy/configuration/backends/{parent_name}/stick_rules:
    get:
      description: Returns all Stick Rules that are configured in specified backend.
      operationId: getStickRules
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/stick_rules'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all Stick Rules
      tags:
        - StickRule
    put:
      description: Replaces a whole list of Stick Rules with the list given in parameter
      operationId: replaceStickRules
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/stick_rules'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All Stick Rule lines replaced
          schema:
            $ref: '#/definitions/stick_rules'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/stick_rules'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Stick Rule list
      tags:
        - StickRule
  /services/haproxy/configuration/backends/{parent_name}/stick_rules/{index}:
    delete:
      description: Deletes a Stick Rule configuration by it's index from the specified backend.
      operationId: deleteStickRule
      parameters:
        - description: Stick Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Stick Rule deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a Stick Rule
      tags:
        - StickRule
    get:
      description: Returns one Stick Rule configuration by it's index in the specified backend.
      operationId: getStickRule
      parameters:
        - description: Stick Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/stick_rule'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one Stick Rule
      tags:
        - StickRule
    post:
      description: Adds a new Stick Rule of the specified type in the specified backend.
      operationId: createStickRule
      parameters:
        - description: Stick Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/stick_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Stick Rule created
          schema:
            $ref: '#/definitions/stick_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/stick_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new Stick Rule
      tags:
        - StickRule
    put:
      description: Replaces a Stick Rule configuration by it's index in the specified backend.
      operationId: replaceStickRule
      parameters:
        - description: Stick Rule Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/stick_rule'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Stick Rule replaced
          schema:
            $ref: '#/definitions/stick_rule'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/stick_rule'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Stick Rule
      tags:
        - StickRule
  /services/haproxy/configuration/global/log_targets:
    get:
      description: Returns all Log Targets that are configured in specified parent.
      operationId: getAllLogTargetGlobal
      parameters:
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/log_targets'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all Log Targets
      tags:
        - LogTarget
    put:
      description: Replaces a whole list of Log Targets with the list given in parameter
      operationId: replaceAllLogTargetGlobal
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_targets'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All Log Target lines replaced
          schema:
            $ref: '#/definitions/log_targets'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_targets'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Log Target list
      tags:
        - LogTarget
  /services/haproxy/configuration/global/log_targets/{index}:
    delete:
      description: Deletes a Log Target configuration by it's index from the specified parent.
      operationId: deleteLogTargetGlobal
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Log Target deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a Log Target
      tags:
        - LogTarget
    get:
      description: Returns one Log Target configuration by it's index in the specified parent.
      operationId: getLogTargetGlobal
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/log_target'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one Log Target
      tags:
        - LogTarget
    post:
      description: Adds a new Log Target of the specified type in the specified parent.
      operationId: createLogTargetGlobal
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_target'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Log Target created
          schema:
            $ref: '#/definitions/log_target'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_target'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new Log Target
      tags:
        - LogTarget
    put:
      description: Replaces a Log Target configuration by it's index in the specified parent.
      operationId: replaceLogTargetGlobal
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_target'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Log Target replaced
          schema:
            $ref: '#/definitions/log_target'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_target'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Log Target
      tags:
        - LogTarget
  /services/haproxy/configuration/backends/{parent_name}/log_targets:
    get:
      description: Returns all Log Targets that are configured in specified parent.
      operationId: getAllLogTargetBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/log_targets'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all Log Targets
      tags:
        - LogTarget
    put:
      description: Replaces a whole list of Log Targets with the list given in parameter
      operationId: replaceAllLogTargetBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_targets'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All Log Target lines replaced
          schema:
            $ref: '#/definitions/log_targets'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_targets'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Log Target list
      tags:
        - LogTarget
  /services/haproxy/configuration/frontends/{parent_name}/log_targets:
    get:
      description: Returns all Log Targets that are configured in specified parent.
      operationId: getAllLogTargetFrontend
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/log_targets'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all Log Targets
      tags:
        - LogTarget
    put:
      description: Replaces a whole list of Log Targets with the list given in parameter
      operationId: replaceAllLogTargetFrontend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_targets'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All Log Target lines replaced
          schema:
            $ref: '#/definitions/log_targets'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_targets'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Log Target list
      tags:
        - LogTarget
  /services/haproxy/configuration/defaults/{parent_name}/log_targets:
    get:
      description: Returns all Log Targets that are configured in specified parent.
      operationId: getAllLogTargetDefaults
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/log_targets'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all Log Targets
      tags:
        - LogTarget
    put:
      description: Replaces a whole list of Log Targets with the list given in parameter
      operationId: replaceAllLogTargetDefaults
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_targets'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All Log Target lines replaced
          schema:
            $ref: '#/definitions/log_targets'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_targets'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Log Target list
      tags:
        - LogTarget
  /services/haproxy/configuration/peers/{parent_name}/log_targets:
    get:
      description: Returns all Log Targets that are configured in specified parent.
      operationId: getAllLogTargetPeer
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/log_targets'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all Log Targets
      tags:
        - LogTarget
    put:
      description: Replaces a whole list of Log Targets with the list given in parameter
      operationId: replaceAllLogTargetPeer
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_targets'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All Log Target lines replaced
          schema:
            $ref: '#/definitions/log_targets'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_targets'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Log Target list
      tags:
        - LogTarget
  /services/haproxy/configuration/log_forwards/{parent_name}/log_targets:
    get:
      description: Returns all Log Targets that are configured in specified parent.
      operationId: getAllLogTargetLogForward
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/log_targets'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all Log Targets
      tags:
        - LogTarget
    put:
      description: Replaces a whole list of Log Targets with the list given in parameter
      operationId: replaceAllLogTargetLogForward
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_targets'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All Log Target lines replaced
          schema:
            $ref: '#/definitions/log_targets'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_targets'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Log Target list
      tags:
        - LogTarget
  /services/haproxy/configuration/backends/{parent_name}/log_targets/{index}:
    delete:
      description: Deletes a Log Target configuration by it's index from the specified parent.
      operationId: deleteLogTargetBackend
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Log Target deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a Log Target
      tags:
        - LogTarget
    get:
      description: Returns one Log Target configuration by it's index in the specified parent.
      operationId: getLogTargetBackend
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/log_target'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one Log Target
      tags:
        - LogTarget
    post:
      description: Adds a new Log Target of the specified type in the specified parent.
      operationId: createLogTargetBackend
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_target'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Log Target created
          schema:
            $ref: '#/definitions/log_target'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_target'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new Log Target
      tags:
        - LogTarget
    put:
      description: Replaces a Log Target configuration by it's index in the specified parent.
      operationId: replaceLogTargetBackend
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_target'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Log Target replaced
          schema:
            $ref: '#/definitions/log_target'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_target'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Log Target
      tags:
        - LogTarget
  /services/haproxy/configuration/frontends/{parent_name}/log_targets/{index}:
    delete:
      description: Deletes a Log Target configuration by it's index from the specified parent.
      operationId: deleteLogTargetFrontend
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Log Target deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a Log Target
      tags:
        - LogTarget
    get:
      description: Returns one Log Target configuration by it's index in the specified parent.
      operationId: getLogTargetFrontend
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/log_target'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one Log Target
      tags:
        - LogTarget
    post:
      description: Adds a new Log Target of the specified type in the specified parent.
      operationId: createLogTargetFrontend
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_target'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Log Target created
          schema:
            $ref: '#/definitions/log_target'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_target'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new Log Target
      tags:
        - LogTarget
    put:
      description: Replaces a Log Target configuration by it's index in the specified parent.
      operationId: replaceLogTargetFrontend
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_target'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Log Target replaced
          schema:
            $ref: '#/definitions/log_target'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_target'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Log Target
      tags:
        - LogTarget
  /services/haproxy/configuration/defaults/{parent_name}/log_targets/{index}:
    delete:
      description: Deletes a Log Target configuration by it's index from the specified parent.
      operationId: deleteLogTargetDefaults
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Log Target deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a Log Target
      tags:
        - LogTarget
    get:
      description: Returns one Log Target configuration by it's index in the specified parent.
      operationId: getLogTargetDefaults
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/log_target'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one Log Target
      tags:
        - LogTarget
    post:
      description: Adds a new Log Target of the specified type in the specified parent.
      operationId: createLogTargetDefaults
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_target'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Log Target created
          schema:
            $ref: '#/definitions/log_target'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_target'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new Log Target
      tags:
        - LogTarget
    put:
      description: Replaces a Log Target configuration by it's index in the specified parent.
      operationId: replaceLogTargetDefaults
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_target'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Log Target replaced
          schema:
            $ref: '#/definitions/log_target'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_target'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Log Target
      tags:
        - LogTarget
  /services/haproxy/configuration/peers/{parent_name}/log_targets/{index}:
    delete:
      description: Deletes a Log Target configuration by it's index from the specified parent.
      operationId: deleteLogTargetPeer
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Log Target deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a Log Target
      tags:
        - LogTarget
    get:
      description: Returns one Log Target configuration by it's index in the specified parent.
      operationId: getLogTargetPeer
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/log_target'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one Log Target
      tags:
        - LogTarget
    post:
      description: Adds a new Log Target of the specified type in the specified parent.
      operationId: createLogTargetPeer
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_target'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Log Target created
          schema:
            $ref: '#/definitions/log_target'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_target'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new Log Target
      tags:
        - LogTarget
    put:
      description: Replaces a Log Target configuration by it's index in the specified parent.
      operationId: replaceLogTargetPeer
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_target'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Log Target replaced
          schema:
            $ref: '#/definitions/log_target'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_target'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Log Target
      tags:
        - LogTarget
  /services/haproxy/configuration/log_forwards/{parent_name}/log_targets/{index}:
    delete:
      description: Deletes a Log Target configuration by it's index from the specified parent.
      operationId: deleteLogTargetLogForward
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Log Target deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a Log Target
      tags:
        - LogTarget
    get:
      description: Returns one Log Target configuration by it's index in the specified parent.
      operationId: getLogTargetLogForward
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/log_target'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one Log Target
      tags:
        - LogTarget
    post:
      description: Adds a new Log Target of the specified type in the specified parent.
      operationId: createLogTargetLogForward
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_target'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Log Target created
          schema:
            $ref: '#/definitions/log_target'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_target'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new Log Target
      tags:
        - LogTarget
    put:
      description: Replaces a Log Target configuration by it's index in the specified parent.
      operationId: replaceLogTargetLogForward
      parameters:
        - description: Log Target Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_target'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Log Target replaced
          schema:
            $ref: '#/definitions/log_target'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_target'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a Log Target
      tags:
        - LogTarget
  /services/haproxy/configuration/backends/{parent_name}/acls:
    get:
      description: Returns all ACL lines that are configured in specified parent.
      operationId: getAllAclBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: ACL name
          in: query
          name: acl_name
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/acls'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all ACL lines
      tags:
        - ACL
    put:
      description: Replaces a whole list of ACLs with the list given in parameter
      operationId: replaceAllAclBackend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/acls'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All ACL lines replaced
          schema:
            $ref: '#/definitions/acls'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/acls'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an ACL list
      tags:
        - ACL
  /services/haproxy/configuration/frontends/{parent_name}/acls:
    get:
      description: Returns all ACL lines that are configured in specified parent.
      operationId: getAllAclFrontend
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: ACL name
          in: query
          name: acl_name
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/acls'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all ACL lines
      tags:
        - ACL
    put:
      description: Replaces a whole list of ACLs with the list given in parameter
      operationId: replaceAllAclFrontend
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/acls'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All ACL lines replaced
          schema:
            $ref: '#/definitions/acls'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/acls'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an ACL list
      tags:
        - ACL
  /services/haproxy/configuration/fcgi_apps/{parent_name}/acls:
    get:
      description: Returns all ACL lines that are configured in specified parent.
      operationId: getAllAclFCGIApp
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: ACL name
          in: query
          name: acl_name
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/acls'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all ACL lines
      tags:
        - ACL
    put:
      description: Replaces a whole list of ACLs with the list given in parameter
      operationId: replaceAllAclFCGIApp
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/acls'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All ACL lines replaced
          schema:
            $ref: '#/definitions/acls'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/acls'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace an ACL list
      tags:
        - ACL
  /services/haproxy/configuration/backends/{parent_name}/acls/{index}:
    delete:
      description: Deletes a ACL line configuration by it's index from the specified parent.
      operationId: deleteAclBackend
      parameters:
        - description: ACL line Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: ACL line deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a ACL line
      tags:
        - ACL
    get:
      description: Returns one ACL line configuration by it's index in the specified parent.
      operationId: getAclBackend
      parameters:
        - description: ACL line Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/acl'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one ACL line
      tags:
        - ACL
    post:
      description: Adds a new ACL line of the specified type in the specified parent.
      operationId: createAclBackend
      parameters:
        - description: ACL line Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/acl'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: ACL line created
          schema:
            $ref: '#/definitions/acl'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/acl'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new ACL line
      tags:
        - ACL
    put:
      description: Replaces a ACL line configuration by it's index in the specified parent.
      operationId: replaceAclBackend
      parameters:
        - description: ACL line Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/acl'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: ACL line replaced
          schema:
            $ref: '#/definitions/acl'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/acl'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a ACL line
      tags:
        - ACL
  /services/haproxy/configuration/frontends/{parent_name}/acls/{index}:
    delete:
      description: Deletes a ACL line configuration by it's index from the specified parent.
      operationId: deleteAclFrontend
      parameters:
        - description: ACL line Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: ACL line deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a ACL line
      tags:
        - ACL
    get:
      description: Returns one ACL line configuration by it's index in the specified parent.
      operationId: getAclFrontend
      parameters:
        - description: ACL line Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/acl'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one ACL line
      tags:
        - ACL
    post:
      description: Adds a new ACL line of the specified type in the specified parent.
      operationId: createAclFrontend
      parameters:
        - description: ACL line Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/acl'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: ACL line created
          schema:
            $ref: '#/definitions/acl'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/acl'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new ACL line
      tags:
        - ACL
    put:
      description: Replaces a ACL line configuration by it's index in the specified parent.
      operationId: replaceAclFrontend
      parameters:
        - description: ACL line Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/acl'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: ACL line replaced
          schema:
            $ref: '#/definitions/acl'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/acl'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a ACL line
      tags:
        - ACL
  /services/haproxy/configuration/fcgi_apps/{parent_name}/acls/{index}:
    delete:
      description: Deletes a ACL line configuration by it's index from the specified parent.
      operationId: deleteAclFCGIApp
      parameters:
        - description: ACL line Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: ACL line deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a ACL line
      tags:
        - ACL
    get:
      description: Returns one ACL line configuration by it's index in the specified parent.
      operationId: getAclFCGIApp
      parameters:
        - description: ACL line Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/acl'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one ACL line
      tags:
        - ACL
    post:
      description: Adds a new ACL line of the specified type in the specified parent.
      operationId: createAclFCGIApp
      parameters:
        - description: ACL line Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/acl'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: ACL line created
          schema:
            $ref: '#/definitions/acl'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/acl'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new ACL line
      tags:
        - ACL
    put:
      description: Replaces a ACL line configuration by it's index in the specified parent.
      operationId: replaceAclFCGIApp
      parameters:
        - description: ACL line Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/acl'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: ACL line replaced
          schema:
            $ref: '#/definitions/acl'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/acl'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a ACL line
      tags:
        - ACL
  /services/haproxy/configuration/caches:
    get:
      description: Returns an array of all configured caches.
      operationId: getCaches
      parameters:
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/caches'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of caches
      tags:
        - Cache
    post:
      description: Adds a new cache section to the configuration file.
      operationId: createCache
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/cache'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Cache created
          schema:
            $ref: '#/definitions/cache'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/cache'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a cache
      tags:
        - Cache
  /services/haproxy/configuration/caches/{name}:
    delete:
      description: Deletes a cache from the configuration by it's name.
      operationId: deleteCache
      parameters:
        - description: Cache name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Cache deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a cache
      tags:
        - Cache
    get:
      description: Returns one cache section configuration by it's name.
      operationId: getCache
      parameters:
        - description: Cache name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/cache'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a cache
      tags:
        - Cache
    put:
      description: Replaces a cache configuration by it's name.
      operationId: replaceCache
      parameters:
        - description: Cache name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/cache'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Cache replaced
          schema:
            $ref: '#/definitions/cache'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/cache'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a cache
      tags:
        - Cache
  /services/haproxy/configuration/resolvers:
    get:
      description: Returns an array of all configured resolvers.
      operationId: getResolvers
      parameters:
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/resolvers'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of resolvers
      tags:
        - Resolver
    post:
      description: Adds a new resolver section to the configuration file.
      operationId: createResolver
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/resolver'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "201":
          description: Resolver created
          schema:
            $ref: '#/definitions/resolver'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/resolver'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a resolver
      tags:
        - Resolver
  /services/haproxy/configuration/resolvers/{name}:
    delete:
      description: Deletes a resolver from the configuration by it's name.
      operationId: deleteResolver
      parameters:
        - description: Resolver name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Resolver deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a resolver
      tags:
        - Resolver
    get:
      description: Returns one resolver section configuration by it's name.
      operationId: getResolver
      parameters:
        - description: Resolver name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/resolver'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a resolver
      tags:
        - Resolver
    put:
      description: Replaces a resolver configuration by it's name.
      operationId: replaceResolver
      parameters:
        - description: Resolver name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/resolver'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Resolver replaced
          schema:
            $ref: '#/definitions/resolver'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/resolver'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a resolver
      tags:
        - Resolver
  /services/haproxy/configuration/nameservers:
    get:
      description: Returns an array of all configured nameservers.
      operationId: getNameservers
      parameters:
        - description: Parent resolver name
          in: query
          name: resolver
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/nameservers'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of nameservers
      tags:
        - Nameserver
    post:
      description: Adds a new nameserver to the resolvers section.
      operationId: createNameserver
      parameters:
        - description: Parent resolver name
          in: query
          name: resolver
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/nameserver'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Nameserver created
          schema:
            $ref: '#/definitions/nameserver'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/nameserver'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a nameserver
      tags:
        - Nameserver
  /services/haproxy/configuration/nameservers/{name}:
    delete:
      description: Deletes a nameserver from the resolvers section by it's name.
      operationId: deleteNameserver
      parameters:
        - description: Nameserver name
          in: path
          name: name
          required: true
          type: string
        - description: Parent resolver name
          in: query
          name: resolver
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Nameserver deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a nameserver
      tags:
        - Nameserver
    get:
      description: Returns one nameserver configuration by it's name.
      operationId: getNameserver
      parameters:
        - description: Nameserver name
          in: path
          name: name
          required: true
          type: string
        - description: Parent resolver name
          in: query
          name: resolver
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/nameserver'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a nameserver
      tags:
        - Nameserver
    put:
      description: Replaces a nameserver configuration by it's name.
      operationId: replaceNameserver
      parameters:
        - description: Nameserver name
          in: path
          name: name
          required: true
          type: string
        - description: Parent resolver name
          in: query
          name: resolver
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/nameserver'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Nameserver replaced
          schema:
            $ref: '#/definitions/nameserver'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/nameserver'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a nameserver
      tags:
        - Nameserver
  /services/haproxy/configuration/raw:
    get:
      description: Returns HAProxy configuration file in plain text
      operationId: getHAProxyConfiguration
      parameters:
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
      produces:
        - text/plain
      responses:
        "200":
          description: Operation successful
          headers:
            Cluster-Version:
              description: Cluster configuration version
              type: string
            Configuration-Checksum:
              description: Configuration file md5 checksum
              type: string
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            type: string
        default:
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            type: string
      summary: Return HAProxy configuration
      tags:
        - Configuration
    post:
      consumes:
        - text/plain
      description: Push a new haproxy configuration file in plain text
      operationId: postHAProxyConfiguration
      parameters:
        - in: body
          name: data
          required: true
          schema:
            type: string
        - default: false
          description: If set, no version check will be done and the pushed config will be enforced
          in: query
          name: skip_version
          required: false
          type: boolean
        - default: false
          description: If set, no reload will be initiated and runtime actions from X-Runtime-Actions will be applied
          in: query
          name: skip_reload
          required: false
          type: boolean
        - default: false
          description: If set, only validates configuration, without applying it
          in: query
          name: only_validate
          required: false
          type: boolean
        - description: List of Runtime API commands with parameters separated by ';'
          in: header
          name: X-Runtime-Actions
          required: false
          type: string
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      produces:
        - text/plain
      responses:
        "201":
          description: New HAProxy configuration pushed
          headers:
            Cluster-Version:
              description: Cluster configuration version
              type: string
            Configuration-Checksum:
              description: Configuration file md5 checksum
              type: string
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            type: string
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Cluster-Version:
              description: Cluster configuration version
              type: string
            Configuration-Checksum:
              description: Configuration file md5 checksum
              type: string
            Configuration-Version:
              description: Configuration file version
              type: string
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            type: string
        "400":
          description: Bad request
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            type: string
        default:
          description: General Error
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            type: string
      summary: Push new haproxy configuration
      tags:
        - Configuration
  /services/haproxy/configuration/crt_stores:
    get:
      description: Returns an array of all the configured crt_store sections in HAProxy
      operationId: getCrtStores
      parameters:
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/crt_stores'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return all the Certificate Stores
      tags:
        - CrtStore
    post:
      description: Creates a new crt_store section
      operationId: createCrtStore
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/crt_store'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Certificate Store created
          schema:
            $ref: '#/definitions/crt_store'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/crt_store'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new Certificate Store
      tags:
        - CrtStore
  /services/haproxy/configuration/crt_stores/{name}:
    delete:
      description: Deletes a crt_store section from the configuration
      operationId: deleteCrtStore
      parameters:
        - description: crt_store name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: crt_store deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a Certificate Store
      tags:
        - CrtStore
    get:
      description: Returns crt_store section by its name
      operationId: getCrtStore
      parameters:
        - description: crt_store name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/crt_store'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a Certificate Store
      tags:
        - CrtStore
    put:
      description: Modifies a crt_store's configuration by its name
      operationId: editCrtStore
      parameters:
        - description: crt_store name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/crt_store'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: crt_store configuration updated
          schema:
            $ref: '#/definitions/crt_store'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/crt_store'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Modify a Certificate Store
      tags:
        - CrtStore
  /services/haproxy/configuration/crt_loads:
    get:
      description: Returns the list of loaded certificates from the specified crt_store
      operationId: getCrtLoads
      parameters:
        - description: Parent crt_store name
          in: query
          name: crt_store
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/crt_loads'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of loaded certificates
      tags:
        - CrtLoad
    post:
      description: Adds a new load entry to the specified crt_store section in the configuration
      operationId: createCrtLoad
      parameters:
        - description: Parent crt_store section name
          in: query
          name: crt_store
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/crt_load'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Certificate load entry created
          schema:
            $ref: '#/definitions/crt_load'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/crt_load'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new certificate to load
      tags:
        - CrtLoad
  /services/haproxy/configuration/crt_loads/{certificate}:
    delete:
      description: Deletes a load entry by its certificate name in the specified crt_store section
      operationId: deleteCrtLoad
      parameters:
        - description: Certificate filename
          in: path
          name: certificate
          required: true
          type: string
        - description: Parent crt_store section name
          in: query
          name: crt_store
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Certificate load entry deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a certificate load entry
      tags:
        - CrtLoad
    get:
      description: Returns one load entry by its certificate name in the specified crt_store
      operationId: getCrtLoad
      parameters:
        - description: Certificate filename
          in: path
          name: certificate
          required: true
          type: string
        - description: Parent crt_store name
          in: query
          name: crt_store
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/crt_load'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one certificate load entry
      tags:
        - CrtLoad
    put:
      description: Replaces a load entry by its certificate name in the specified crt_store section
      operationId: replaceCrtLoad
      parameters:
        - description: Certificate filename
          in: path
          name: certificate
          required: true
          type: string
        - description: Parent crt_store section name
          in: query
          name: crt_store
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/crt_load'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Certificate load entry replaced
          schema:
            $ref: '#/definitions/crt_load'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/crt_load'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a certificate load entry
      tags:
        - CrtLoad
  /services/haproxy/configuration/traces:
    delete:
      description: Delete the whole traces section.
      operationId: deleteTraces
      parameters:
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Traces section deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete the traces section
      tags:
        - Traces
    get:
      description: Return the traces section contents.
      operationId: getTraces
      parameters:
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/traces'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return the traces section contents
      tags:
        - Traces
    post:
      description: Create the traces section.
      operationId: createTraces
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/traces'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Traces section created
          schema:
            $ref: '#/definitions/traces'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/traces'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Create the traces section
      tags:
        - Traces
    put:
      description: Replace the traces section contents
      operationId: replaceTraces
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/traces'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
        - $ref: '#/parameters/full_section'
      responses:
        "200":
          description: Traces replaced
          schema:
            $ref: '#/definitions/traces'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/traces'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace traces
      tags:
        - Traces
  /services/haproxy/configuration/traces/entries:
    delete:
      description: Deletes a trace entry from the traces section.
      operationId: deleteTraceEntry
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/trace_entry'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Trace entry deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a trace entry
      tags:
        - Traces
    post:
      description: Adds a new trace entry into the traces section. The traces section will be created if needed.
      operationId: createTraceEntry
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/trace_entry'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Trace entry added
          schema:
            $ref: '#/definitions/trace_entry'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/trace_entry'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new trace entry
      tags:
        - Traces
  /services/haproxy/configuration/log_profiles:
    get:
      description: Returns an array of all the configured log_profile sections in HAProxy
      operationId: getLogProfiles
      parameters:
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/log_profiles'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return all the Log Profiles
      tags:
        - LogProfile
    post:
      description: Creates a new log_profile section
      operationId: createLogProfile
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_profile'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Log Profile created
          schema:
            $ref: '#/definitions/log_profile'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_profile'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new Log Profile
      tags:
        - LogProfile
  /services/haproxy/configuration/log_profiles/{name}:
    delete:
      description: Deletes a log_profile section from the configuration
      operationId: deleteLogProfile
      parameters:
        - description: log_profile name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: log_profile deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a Log Profile
      tags:
        - LogProfile
    get:
      description: Find a log_profile section by its name
      operationId: getLogProfile
      parameters:
        - description: log_profile name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/log_profile'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a Log Profile
      tags:
        - LogProfile
    put:
      description: Modifies a log_profile's configuration by its name
      operationId: editLogProfile
      parameters:
        - description: log_profile name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/log_profile'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: log_profile configuration updated
          schema:
            $ref: '#/definitions/log_profile'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/log_profile'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Modify a Log Profile
      tags:
        - LogProfile
  /services/haproxy/runtime:
    get:
      description: Returns a list of endpoints to be used for advanced runtime settings of HAProxy objects.
      operationId: getRuntimeEndpoints
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/endpoints'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return list of HAProxy advanced runtime endpoints
      tags:
        - Discovery
  /services/haproxy/runtime/acls:
    get:
      description: Returns all ACL files using the runtime socket.
      produces:
        - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/acl_files'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of all ACL files
      tags:
        - ACL Runtime
  /services/haproxy/runtime/acls/{id}:
    get:
      description: Returns an ACL file by id using the runtime socket.
      parameters:
        - description: ACL file entry ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/acl_file'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an ACL file
      tags:
        - ACL Runtime
  /services/haproxy/runtime/acls/{parent_name}/entries:
    get:
      description: Returns an ACL runtime setting using the runtime socket.
      parameters:
        - $ref: '#/parameters/parent_name'
      produces:
        - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/acl_files_entries'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an ACL entries
      tags:
        - ACL Runtime
    post:
      description: Adds an entry into the ACL file using the runtime socket.
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/acl_file_entry'
      produces:
        - application/json
      responses:
        "201":
          description: ACL entry created
          schema:
            $ref: '#/definitions/acl_file_entry'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add entry to an ACL file
      tags:
        - ACL Runtime
    put:
      description: Adds a new ACL payload.
      operationId: addPayloadRuntimeACL
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/acl_files_entries'
      responses:
        "201":
          description: ACL payload added
          schema:
            $ref: '#/definitions/acl_files_entries'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new ACL payload
      tags:
        - ACL Runtime
  /services/haproxy/runtime/acls/{parent_name}/entries/{id}:
    delete:
      description: Deletes the entry from the ACL by its value using the runtime socket.
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: File entry ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "204":
          description: Successful operation
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete an ACL entry
      tags:
        - ACL Runtime
    get:
      description: Returns the ACL entry by its ID using the runtime socket.
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: File entry ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/acl_file_entry'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an ACL entry
      tags:
        - ACL Runtime
  /services/haproxy/runtime/info:
    get:
      description: Return HAProxy process information
      operationId: getHaproxyProcessInfo
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/process_info'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return HAProxy process information
      tags:
        - Information
  /services/haproxy/runtime/backends/{parent_name}/servers:
    get:
      description: Returns an array of all servers' runtime settings.
      operationId: getAllRuntimeServer
      parameters:
        - $ref: '#/parameters/parent_name'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/runtime_servers'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of runtime servers' settings
      tags:
        - Server
    post:
      description: Adds a new server to the specified backend
      operationId: addRuntimeServer
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/runtime_add_server'
      responses:
        "201":
          description: Server added
          schema:
            $ref: '#/definitions/runtime_add_server'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Adds a new server to a backend
      tags:
        - Server
  /services/haproxy/runtime/backends/{parent_name}/servers/{name}:
    delete:
      description: Deletes a server from the specified backend
      operationId: deleteRuntimeServer
      parameters:
        - description: Server name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
      responses:
        "204":
          description: Server deleted
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Deletes a server from a backend
      tags:
        - Server
    get:
      description: Returns one server runtime settings by it's name in the specified backend.
      operationId: getRuntimeServer
      parameters:
        - description: Server name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/runtime_server'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one server runtime settings
      tags:
        - Server
    put:
      description: Replaces a server transient settings by it's name in the specified backend.
      operationId: replaceRuntimeServer
      parameters:
        - description: Server name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/runtime_server'
      responses:
        "200":
          description: Server transient settings replaced
          schema:
            $ref: '#/definitions/runtime_server'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace server transient settings
      tags:
        - Server
  /services/haproxy/runtime/stick_tables:
    get:
      description: Returns an array of all stick tables.
      operationId: getStickTables
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/stick_tables'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return Stick Tables
      tags:
        - StickTable
  /services/haproxy/runtime/stick_tables/{name}:
    get:
      description: Returns one stick table from runtime.
      operationId: getStickTable
      parameters:
        - description: Stick table name
          in: path
          name: name
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/stick_table'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return Stick Table
      tags:
        - StickTable
  /services/haproxy/runtime/stick_tables/{parent_name}/entries:
    get:
      description: Returns an array of all entries in a given stick tables.
      operationId: getStickTableEntries
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: A list of filters in format data.<type> <operator> <value> separated by comma
          in: query
          name: filter
          type: string
        - description: Key which we want the entries for
          in: query
          name: key
          type: string
        - description: Max number of entries to be returned for pagination
          in: query
          name: count
          type: integer
        - description: Offset which indicates how many items we skip in pagination
          in: query
          name: offset
          type: integer
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/stick_table_entries'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return Stick Table Entries
      tags:
        - StickTable
    post:
      description: Create or update a stick-table entry in the table.
      operationId: setStickTableEntries
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Stick table entry
          in: body
          name: stick_table_entry
          schema:
            properties:
              data_type:
                $ref: '#/definitions/stick_table_entry'
              key:
                type: string
            required:
              - key
              - data_type
            type: object
      responses:
        "204":
          description: Successful operation
        default:
          $ref: '#/responses/DefaultError'
      summary: Set Entry to Stick Table
      tags:
        - StickTable
  /services/haproxy/runtime/maps:
    get:
      description: Returns runtime map files.
      operationId: getAllRuntimeMapFiles
      parameters:
        - default: false
          description: If true, also show unmanaged map files loaded in haproxy
          in: query
          name: include_unmanaged
          required: false
          type: boolean
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/maps'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return runtime map files
      tags:
        - Maps
  /services/haproxy/runtime/maps/{name}:
    delete:
      description: Remove all map entries from the map file.
      operationId: clearRuntimeMap
      parameters:
        - description: Map file name
          in: path
          name: name
          required: true
          type: string
        - description: If true, deletes file from disk
          in: query
          name: forceDelete
          type: boolean
        - default: false
          description: If true, immediately syncs changes to disk
          in: query
          name: force_sync
          type: boolean
      responses:
        "204":
          description: All map entries deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Remove all map entries from the map file
      tags:
        - Maps
    get:
      description: Returns one runtime map file.
      operationId: getOneRuntimeMap
      parameters:
        - description: Map file name
          in: path
          name: name
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/map'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one runtime map file
      tags:
        - Maps
    put:
      description: Adds a new map payload.
      operationId: addPayloadRuntimeMap
      parameters:
        - description: Map file name
          in: path
          name: name
          required: true
          type: string
        - default: false
          description: If true, immediately syncs changes to disk
          in: query
          name: force_sync
          type: boolean
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/map_entries'
      responses:
        "201":
          description: Map payload added
          schema:
            $ref: '#/definitions/map_entries'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new map payload
      tags:
        - Maps
  /services/haproxy/runtime/maps/{parent_name}/entries:
    get:
      description: Returns an array of all entries in a given runtime map file.
      operationId: showRuntimeMap
      parameters:
        - $ref: '#/parameters/parent_name'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/map_entries'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one map runtime entries
      tags:
        - Maps
    post:
      description: Adds an entry into the map file.
      operationId: addMapEntry
      parameters:
        - $ref: '#/parameters/parent_name'
        - default: false
          description: If true, immediately syncs changes to disk
          in: query
          name: force_sync
          type: boolean
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/map_entry'
      responses:
        "201":
          description: Map entry created
          schema:
            $ref: '#/definitions/map_entry'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Adds an entry into the map file
      tags:
        - Maps
  /services/haproxy/runtime/maps/{parent_name}/entries/{id}:
    delete:
      description: Delete all the map entries from the map by its id.
      operationId: deleteRuntimeMapEntry
      parameters:
        - description: Map id
          in: path
          name: id
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - default: false
          description: If true, immediately syncs changes to disk
          in: query
          name: force_sync
          type: boolean
      responses:
        "204":
          description: Map key/value deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Deletes all the map entries from the map by its id
      tags:
        - Maps
    get:
      description: Returns one map runtime setting by it's id.
      operationId: getRuntimeMapEntry
      parameters:
        - description: Map id
          in: path
          name: id
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/map_entry'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one map runtime setting
      tags:
        - Maps
    put:
      description: Replaces the value corresponding to each id in a map.
      operationId: replaceRuntimeMapEntry
      parameters:
        - description: Map id
          in: path
          name: id
          required: true
          type: string
        - $ref: '#/parameters/parent_name'
        - default: false
          description: If true, immediately syncs changes to disk
          in: query
          name: force_sync
          type: boolean
        - in: body
          name: data
          required: true
          schema:
            properties:
              value:
                description: Map value
                type: string
            required:
              - value
            type: object
      responses:
        "200":
          description: Map value replaced
          schema:
            $ref: '#/definitions/map_entry'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace the value corresponding to each id in a map
      tags:
        - Maps
  /services/haproxy/configuration/version:
    get:
      description: Returns configuration version.
      operationId: getConfigurationVersion
      parameters:
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Configuration version
          schema:
            type: integer
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a configuration version
      tags:
        - Configuration
  /services/haproxy/storage:
    get:
      description: Returns a list of endpoints that use HAProxy storage for persistency, e.g. maps, ssl certificates...
      operationId: getStorageEndpoints
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/endpoints'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return list of HAProxy storage endpoints
      tags:
        - Discovery
  /services/haproxy/storage/maps:
    get:
      description: Returns a list of all managed map files
      operationId: getAllStorageMapFiles
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/maps'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a list of all managed map files
      tags:
        - Storage
    post:
      consumes:
        - multipart/form-data
      description: Creates a managed storage map file with its entries.
      operationId: createStorageMapFile
      parameters:
        - description: The map file contents
          in: formData
          name: file_upload
          type: file
          x-mimetype: text/plain
      responses:
        "201":
          description: Map file created with its entries
          schema:
            $ref: '#/definitions/map'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Creates a managed storage map file with its entries
      tags:
        - Storage
  /services/haproxy/storage/maps/{name}:
    delete:
      description: Deletes a managed map file from disk.
      operationId: deleteStorageMap
      parameters:
        - description: Map file storage_name
          in: path
          name: name
          required: true
          type: string
      responses:
        "204":
          description: Map file deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Deletes a managed map file from disk
      tags:
        - Storage
    get:
      description: Returns the contents of one managed map file from disk
      operationId: getOneStorageMap
      parameters:
        - description: Map file storage_name
          in: path
          name: name
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        "200":
          description: Successful operation
          schema:
            type: file
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return the contents of one managed map file from disk
      tags:
        - Storage
    put:
      consumes:
        - text/plain
      description: Replaces the contents of a managed map file on disk
      operationId: replaceStorageMapFile
      parameters:
        - description: Map file storage_name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            type: string
        - $ref: '#/parameters/skip_reload'
        - $ref: '#/parameters/force_reload'
      produces:
        - application/json
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Map file replaced
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace contents of a managed map file on disk
      tags:
        - Storage
  /services/haproxy/storage/ssl_certificates:
    get:
      description: Returns all available SSL certificates on disk.
      operationId: getAllStorageSSLCertificates
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/ssl_certificates'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return all available SSL certificates on disk
      tags:
        - Storage
    post:
      consumes:
        - multipart/form-data
      description: Creates SSL certificate.
      operationId: createStorageSSLCertificate
      parameters:
        - description: The SSL certificate to upload
          in: formData
          name: file_upload
          type: file
          x-mimetype: text/plain
        - $ref: '#/parameters/skip_reload'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: SSL certificate created
          schema:
            $ref: '#/definitions/ssl_certificate'
        "202":
          description: SSL certificate created requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/ssl_certificate'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Create SSL certificate
      tags:
        - Storage
  /services/haproxy/storage/ssl_certificates/{name}:
    delete:
      description: Deletes SSL certificate from disk.
      operationId: deleteStorageSSLCertificate
      parameters:
        - description: SSL certificate name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/skip_reload'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: SSL certificate deleted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: SSL certificate deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete SSL certificate from disk
      tags:
        - Storage
    get:
      description: Returns one SSL certificate from disk.
      operationId: getOneStorageSSLCertificate
      parameters:
        - description: SSL certificate name
          in: path
          name: name
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/ssl_certificate'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one SSL certificate from disk
      tags:
        - Storage
    put:
      consumes:
        - text/plain
      description: Replaces SSL certificate on disk.
      operationId: replaceStorageSSLCertificate
      parameters:
        - description: SSL certificate name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            type: string
        - $ref: '#/parameters/skip_reload'
        - $ref: '#/parameters/force_reload'
      produces:
        - application/json
      responses:
        "200":
          description: SSL certificate replaced
          schema:
            $ref: '#/definitions/ssl_certificate'
        "202":
          description: SSL certificate replaced and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/ssl_certificate'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace SSL certificates on disk
      tags:
        - Storage
  /services/haproxy/storage/general:
    get:
      description: Returns a list of all managed general use files
      operationId: getAllStorageGeneralFiles
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/general_files'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a list of all managed general use files
      tags:
        - Storage
    post:
      consumes:
        - multipart/form-data
      description: Creates a managed storage general use file with contents.
      operationId: createStorageGeneralFile
      parameters:
        - description: General use file content
          in: formData
          name: file_upload
          type: file
          x-mimetype: application/octet-stream
      responses:
        "201":
          description: General use file created with its contents
          schema:
            $ref: '#/definitions/general_file'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Creates a managed storage general use file with contents
      tags:
        - Storage
  /services/haproxy/storage/general/{name}:
    delete:
      description: Deletes a managed general use file from disk.
      operationId: deleteStorageGeneralFile
      parameters:
        - description: General use file storage_name
          in: path
          name: name
          required: true
          type: string
      responses:
        "204":
          description: General use file deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Deletes a managed general use file from disk
      tags:
        - Storage
    get:
      description: Returns the contents of one managed general use file from disk
      operationId: getOneStorageGeneralFile
      parameters:
        - description: General use file storage_name
          in: path
          name: name
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        "200":
          description: Successful operation
          schema:
            type: file
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return the contents of one managed general use file from disk
      tags:
        - Storage
    put:
      consumes:
        - multipart/form-data
      description: Replaces the contents of a managed general use file on disk
      operationId: replaceStorageGeneralFile
      parameters:
        - description: General use file storage_name
          in: path
          name: name
          required: true
          type: string
        - description: General use file content
          in: formData
          name: file_upload
          type: file
          x-mimetype: application/octet-stream
        - $ref: '#/parameters/skip_reload'
        - $ref: '#/parameters/force_reload'
      produces:
        - application/json
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: General use file replaced
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace contents of a managed general use file on disk
      tags:
        - Storage
  /services/haproxy/spoe:
    get:
      description: Returns a list of endpoints to be used for SPOE settings of HAProxy.
      operationId: getSpoeEndpoints
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/endpoints'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return list of HAProxy SPOE endpoints
      tags:
        - Discovery
  /services/haproxy/spoe/spoe_files:
    get:
      description: Returns all available SPOE files.
      operationId: getAllSpoeFiles
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/spoe_files'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return all available SPOE files
      tags:
        - Spoe
    post:
      consumes:
        - multipart/form-data
      description: Creates SPOE file with its entries.
      operationId: createSpoe
      parameters:
        - description: The spoe file to upload
          in: formData
          name: file_upload
          type: file
          x-mimetype: text/plain
      responses:
        "201":
          description: SPOE file created with its entries
          schema:
            type: string
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Creates SPOE file with its entries
      tags:
        - Spoe
  /services/haproxy/spoe/spoe_files/{name}:
    delete:
      description: Deletes SPOE file.
      operationId: deleteSpoeFile
      parameters:
        - description: SPOE file name
          in: path
          name: name
          required: true
          type: string
      responses:
        "204":
          description: SPOE file deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete SPOE file
      tags:
        - Spoe
    get:
      description: Returns one SPOE file.
      operationId: getOneSpoeFile
      parameters:
        - description: SPOE file name
          in: path
          name: name
          required: true
          type: string
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Spoe configuration file version
              type: string
          schema:
            properties:
              data:
                type: string
            type: object
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one SPOE file
      tags:
        - Spoe
  /services/haproxy/spoe/spoe_files/{parent_name}/scopes:
    get:
      description: Returns an array of all configured spoe scopes.
      operationId: getAllSpoeScope
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Spoe configuration file version
              type: string
          schema:
            $ref: '#/definitions/spoe_scopes'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of spoe scopes
      tags:
        - Spoe
    post:
      description: Adds a new spoe scope.
      operationId: createSpoeScope
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/spoe_scope'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
      responses:
        "201":
          description: Spoe scope created
          schema:
            $ref: '#/definitions/spoe_scope'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new spoe scope
      tags:
        - Spoe
  /services/haproxy/spoe/spoe_files/{parent_name}/scopes/{name}:
    delete:
      description: Deletes a SPOE scope from the configuration file.
      operationId: deleteSpoeScope
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Spoe scope name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
      responses:
        "204":
          description: Spoe scope deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a SPOE scope
      tags:
        - Spoe
    get:
      description: Returns one SPOE scope in one SPOE file.
      operationId: getSpoeScope
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Spoe scope
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Spoe configuration file version
              type: string
          schema:
            $ref: '#/definitions/spoe_scope'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one SPOE scope
      tags:
        - Spoe
  /services/haproxy/spoe/spoe_files/{parent_name}/scopes/{scope_name}/agents:
    get:
      description: Returns an array of all configured spoe agents in one scope.
      operationId: getAllSpoeAgent
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Spoe scope name
          in: path
          name: scope_name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Spoe configuration file version
              type: string
          schema:
            $ref: '#/definitions/spoe_agents'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of spoe agents in one scope
      tags:
        - Spoe
    post:
      description: Adds a new spoe agent to the spoe scope.
      operationId: createSpoeAgent
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Spoe scope name
          in: path
          name: scope_name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/spoe_agent'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
      responses:
        "201":
          description: Spoe agent created
          schema:
            $ref: '#/definitions/spoe_agent'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new spoe agent to scope
      tags:
        - Spoe
  /services/haproxy/spoe/spoe_files/{parent_name}/scopes/{scope_name}/agents/{name}:
    delete:
      description: Deletes a SPOE agent from the configuration in one SPOE scope.
      operationId: deleteSpoeAgent
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Spoe scope name
          in: path
          name: scope_name
          required: true
          type: string
        - description: Spoe agent name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
      responses:
        "204":
          description: Spoe agent deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a SPOE agent
      tags:
        - Spoe
    get:
      description: Returns one spoe agent configuration in one SPOE scope.
      operationId: getSpoeAgent
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Spoe scope name
          in: path
          name: scope_name
          required: true
          type: string
        - description: Spoe agent name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Spoe configuration file version
              type: string
          schema:
            $ref: '#/definitions/spoe_agent'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a spoe agent
      tags:
        - Spoe
    put:
      description: Replaces a SPOE agent configuration in one SPOE scope.
      operationId: replaceSpoeAgent
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Spoe scope name
          in: path
          name: scope_name
          required: true
          type: string
        - description: Spoe agent name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/spoe_agent'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
      responses:
        "200":
          description: Spoe agent replaced
          schema:
            $ref: '#/definitions/spoe_agent'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a SPOE agent
      tags:
        - Spoe
  /services/haproxy/spoe/spoe_files/{parent_name}/scopes/{scope_name}/messages:
    get:
      description: Returns an array of all configured spoe messages in one scope.
      operationId: getAllSpoeMessage
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Spoe scope name
          in: path
          name: scope_name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Spoe configuration file version
              type: string
          schema:
            $ref: '#/definitions/spoe_messages'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of spoe messages in one scope
      tags:
        - Spoe
    post:
      description: Adds a new spoe message to the spoe scope.
      operationId: createSpoeMessage
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Spoe scope name
          in: path
          name: scope_name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/spoe_message'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
      responses:
        "201":
          description: Spoe message created
          schema:
            $ref: '#/definitions/spoe_message'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new spoe message to scope
      tags:
        - Spoe
  /services/haproxy/spoe/spoe_files/{parent_name}/scopes/{scope_name}/messages/{name}:
    delete:
      description: Deletes a spoe message from the SPOE scope.
      operationId: deleteSpoeMessage
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Spoe scope name
          in: path
          name: scope_name
          required: true
          type: string
        - description: Spoe message name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
      responses:
        "204":
          description: Spoe message deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a spoe message
      tags:
        - Spoe
    get:
      description: Returns one spoe message configuration in SPOE scope.
      operationId: getSpoeMessage
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Spoe scope name
          in: path
          name: scope_name
          required: true
          type: string
        - description: Spoe message name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Spoe configuration file version
              type: string
          schema:
            $ref: '#/definitions/spoe_message'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a spoe message
      tags:
        - Spoe
    put:
      description: Replaces a spoe message configuration in one SPOE scope.
      operationId: replaceSpoeMessage
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Spoe scope name
          in: path
          name: scope_name
          required: true
          type: string
        - description: Spoe message name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/spoe_message'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
      responses:
        "200":
          description: Spoe message replaced
          schema:
            $ref: '#/definitions/spoe_message'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a spoe message
      tags:
        - Spoe
  /services/haproxy/spoe/spoe_files/{parent_name}/scopes/{scope_name}/groups:
    get:
      description: Returns an array of all configured SPOE groups in one SPOE scope.
      operationId: getAllSpoeGroup
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Spoe scope name
          in: path
          name: scope_name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Spoe configuration file version
              type: string
          schema:
            $ref: '#/definitions/spoe_groups'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of SPOE groups
      tags:
        - Spoe
    post:
      description: Adds a new SPOE groups to the SPOE scope.
      operationId: createSpoeGroup
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Spoe scope name
          in: path
          name: scope_name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/spoe_group'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
      responses:
        "201":
          description: Spoe groups created
          schema:
            $ref: '#/definitions/spoe_group'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new SPOE groups
      tags:
        - Spoe
  /services/haproxy/spoe/spoe_files/{parent_name}/scopes/{scope_name}/groups/{name}:
    delete:
      description: Deletes a SPOE groups from the one SPOE scope.
      operationId: deleteSpoeGroup
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Spoe scope name
          in: path
          name: scope_name
          required: true
          type: string
        - description: Spoe group name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
      responses:
        "204":
          description: Spoe group deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a SPOE groups
      tags:
        - Spoe
    get:
      description: Returns one SPOE groups configuration in one SPOE scope.
      operationId: getSpoeGroup
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Spoe scope name
          in: path
          name: scope_name
          required: true
          type: string
        - description: Spoe group name
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Spoe configuration file version
              type: string
          schema:
            $ref: '#/definitions/spoe_group'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a SPOE groups
      tags:
        - Spoe
    put:
      description: Replaces a SPOE groups configuration in one SPOE scope.
      operationId: replaceSpoeGroup
      parameters:
        - $ref: '#/parameters/parent_name'
        - description: Spoe scope name
          in: path
          name: scope_name
          required: true
          type: string
        - description: Spoe group name
          in: path
          name: name
          required: true
          type: string
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/spoe_group'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
      responses:
        "200":
          description: Spoe groups replaced
          schema:
            $ref: '#/definitions/spoe_group'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a SPOE groups
      tags:
        - Spoe
  /services/haproxy/spoe/{parent_name}/version:
    get:
      description: Returns SPOE configuration version.
      operationId: getSpoeConfigurationVersion
      parameters:
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/parent_name'
      responses:
        "200":
          description: SPOE configuration version
          schema:
            type: integer
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return a SPOE configuration version
      tags:
        - Spoe
  /services/haproxy/configuration/frontends/{parent_name}/captures:
    get:
      description: Returns an array of all declare capture records that are configured in specified frontend.
      operationId: getDeclareCaptures
      parameters:
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/captures'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return an array of declare captures
      tags:
        - DeclareCapture
    put:
      description: Replaces a whole list of declare capture with the list given in parameter
      operationId: replaceDeclareCaptures
      parameters:
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/captures'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: All Declare capture lines replaced
          schema:
            $ref: '#/definitions/captures'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/captures'
        "400":
          $ref: '#/responses/BadRequest'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a declare capture list
      tags:
        - DeclareCapture
  /services/haproxy/configuration/frontends/{parent_name}/captures/{index}:
    delete:
      description: Deletes a declare capture configuration by it's index in the specified frontend.
      operationId: deleteDeclareCapture
      parameters:
        - description: Declare Capture Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
        "204":
          description: Declare Capture deleted
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Delete a declare capture
      tags:
        - DeclareCapture
    get:
      description: Returns one declare capture configuration by it's index in the specified frontend.
      operationId: getDeclareCapture
      parameters:
        - description: Declare Capture Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - $ref: '#/parameters/transaction_id'
      responses:
        "200":
          description: Successful operation
          headers:
            Configuration-Version:
              description: Configuration file version
              type: string
          schema:
            $ref: '#/definitions/capture'
        "404":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Return one declare capture
      tags:
        - DeclareCapture
    post:
      description: Adds a new declare capture in the specified frontend in the configuration file.
      operationId: createDeclareCapture
      parameters:
        - description: Declare Capture Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/capture'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "201":
          description: Declare capture created
          schema:
            $ref: '#/definitions/capture'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/capture'
        "400":
          $ref: '#/responses/BadRequest'
        "409":
          $ref: '#/responses/AlreadyExists'
        default:
          $ref: '#/responses/DefaultError'
      summary: Add a new declare capture
      tags:
        - DeclareCapture
    put:
      description: Replaces a declare capture configuration by it's index in the specified frontend.
      operationId: replaceDeclareCapture
      parameters:
        - description: Declare Capture Index
          in: path
          name: index
          required: true
          type: integer
        - $ref: '#/parameters/parent_name'
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/capture'
        - $ref: '#/parameters/transaction_id'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/force_reload'
      responses:
        "200":
          description: Declare Capture replaced
          schema:
            $ref: '#/definitions/capture'
        "202":
          description: Configuration change accepted and reload requested
          headers:
            Reload-ID:
              description: ID of the requested reload
              type: string
          schema:
            $ref: '#/definitions/capture'
        "400":
          $ref: '#/responses/BadRequest'
        "404":
          $ref: '#/responses/NotFound'
        default:
          $ref: '#/responses/DefaultError'
      summary: Replace a declare capture
      tags:
        - DeclareCapture
