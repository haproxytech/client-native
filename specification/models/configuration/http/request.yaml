---
http_request_rule:
  title: HTTP Request Rule
  description: HAProxy HTTP request rule configuration (corresponds to http-request directives)
  type: object
  required:
    - index
    - type
  properties:
    index:
      type: integer
      x-nullable: true
    type:
      type: string
      enum:
        - add-acl
        - add-header
        - allow
        - auth
        - cache-use
        - capture
        - del-acl
        - del-header
        - del-map
        - deny
        - disable-l7-retry
        - do-resolve
        - early-hint
        - normalize-uri
        - redirect
        - reject
        - replace-header
        - replace-path
        - replace-pathq
        - replace-uri
        - replace-value
        - return
        - sc-inc-gpc0
        - sc-inc-gpc1
        - sc-set-gpt0
        - send-spoe-group
        - set-dst
        - set-dst-port
        - set-header
        - set-log-level
        - set-map
        - set-mark
        - set-method
        - set-nice
        - set-path
        - set-pathq
        - set-priority-class
        - set-priority-offset
        - set-query
        - set-src
        - set-src-port
        - set-timeout
        - set-tos
        - set-uri
        - set-var
        - silent-drop
        - strict-mode
        - tarpit
        - track-sc0
        - track-sc1
        - track-sc2
        - unset-var
        - use-service
        - wait-for-body
        - wait-for-handshake
      x-nullable: false
    capture_sample:
      pattern: '^[^\s]+$'
      x-display-name: Capture Sample
      type: string
      x-dependency:
        type:
          value: capture
    capture_len:
      type: integer
      x-display-name: Capture Len
      x-dependency:
        type:
          value: capture
          required: true
    capture_id:
      type: integer
      x-nullable: true
      x-display-name: Capture SlotID
      x-dependency:
        type:
          value: capture
    track-sc0-key:
      type: string
      pattern: '^[^\s]+$'
      x-display-name: track-sc0 Key
      x-dependency:
        type:
          value: track-sc0
          required: true
    track-sc0-table:
      type: string
      pattern: '^[^\s]+$'
      x-display-name: track-sc0 Table
      x-dependency:
        type:
          value: track-sc0
    track-sc1-key:
      type: string
      pattern: '^[^\s]+$'
      x-display-name: track-sc1 Key
      x-dependency:
        type:
          value: track-sc1
          required: true
    track-sc1-table:
      type: string
      pattern: '^[^\s]+$'
      x-display-name: track-sc1 Table
      x-dependency:
        type:
          value: track-sc1
    track-sc2-key:
      type: string
      pattern: '^[^\s]+$'
      x-display-name: track-sc2 Key
      x-dependency:
        type:
          value: track-sc2
          required: true
    track-sc2-table:
      type: string
      pattern: '^[^\s]+$'
      x-display-name: track-sc2 Table
      x-dependency:
        type:
          value: track-sc2
    auth_realm:
      type: string
      x-display-name: Authentication Realm
      pattern: '^[^\s]+$'
      x-dependency:
        type:
          value: auth
    redir_type:
      type: string
      x-display-name: Redirect Type
      enum: [location, prefix, scheme]
      x-dependency:
        type:
          value: redirect
          required: true
    redir_value:
      type: string
      x-display-name: Redirect Value
      pattern: '^[^\s]+$'
      x-dependency:
        type:
          value: redirect
          required: true
    redir_code:
      type: integer
      x-nullable: true
      x-display-name: Redirect Code
      enum: [301, 302, 303, 307, 308]
      x-dependency:
        type:
          value: redirect
    redir_option:
      type: string
      x-display-name: Redirect Option
      x-dependency:
        type:
          value: redirect
          required: true
    deny_status:
      type: integer
      minimum: 200
      maximum: 599
      x-nullable: true
      x-dependency:
        type:
          value: [deny, tarpit]
    normalizer:
      type: string
      enum: [fragment-encode, fragment-strip, path-merge-slashes, path-strip-dot, path-strip-dotdot, percent-decode-unreserved, percent-to-upercase, query-sort-by-name]
      x-dependency:
        type:
          value: normalize-uri
          required: true
    normalizer_strict:
      type: boolean
      x-dependency:
        type:
          value: normalize-uri
        normalizer:
          value: [percent-decode-unreserved, percent-to-upercase]
    normalizer_full:
      type: boolean
      x-dependency:
        type:
          value: normalize-uri
        normalizer:
          value: path-strip-dotdot
    timeout_type:
      type: string
      enum: [server, tunnel]
      x-dependency:
        type:
          value: set-timeout
          required: true
    timeout:
      type: string
      x-dependency:
        type:
          value: set-timeout
          required: true
    hdr_name:
      type: string
      x-display-name: Header Name
      x-dependency:
        type:
          value: [add-header, replace-header, del-header, set-header, replace-value]
          required: true
    hdr_match:
      type: string
      x-display-name: Header Match
      x-dependency:
        type:
          value: [replace-header, replace-value]
          required: true
    hdr_format:
      type: string
      x-display-name: Header Format
      x-dependency:
        type:
          value: [replace-header, replace-value, set-header, add-header]
          required: true
    hdr_method:
      type: string
      x-display-name: Header Match Method
      x-dependency:
        type:
          value: [del-header]
    log_level:
      type: string
      enum: [emerg, alert, crit, err, warning, notice, info, debug, silent]
      x-dependency:
        type:
          value: set-log-level
          required: true
    path_match:
      type: string
      pattern: '^[^\s]+$'
      x-dependency:
        type:
          value: [set-path, set-pathq, replace-path, replace-pathq]
          required: true
    path_fmt:
      type: string
      pattern: '^[^\s]+$'
      x-dependency:
        type:
          value: [set-path, set-pathq, replace-path, replace-pathq]
          required: true
    var_name:
      type: string
      pattern: '^[^\s]+$'
      x-dependency:
        type:
          value: [set-var, set-var-fmt, do-resolve, unset-var]
          required: true
    var_scope:
      type: string
      pattern: '^[^\s]+$'
      x-dependency:
        type:
          value: [set-var, set-var-fmt, unset-var]
          required: true
    var_expr:
      type: string
      x-display-name: Var Expression
      x-dependency:
        type:
          value: set-var
          required: true
    var_format:
      type: string
      x-display-name: Var Format
      x-dependency:
        type:
          value: set-var-fmt
          required: true
    query-fmt:
      type: string
      x-dependency:
        type:
          required: true
          value: set-query
    uri-match:
      type: string
      x-dependency:
        type:
          required: true
          value: replace-uri
    uri-fmt:
      type: string
      x-dependency:
        type:
          required: true
          value: [set-uri, replace-uri]
    spoe_engine:
      type: string
      x-display-name: SPOE Engine
      pattern: '^[^\s]+$'
      x-dependency:
        type:
          value: send-spoe-group
          required: true
    spoe_group:
      type: string
      x-display-name: SPOE Group
      pattern: '^[^\s]+$'
      x-dependency:
        type:
          value: send-spoe-group
          required: true
    acl_file:
      type: string
      x-display-name: ACL File
      pattern: '^[^\s]+$'
      x-dependency:
        type:
          value: [add-acl, del-acl]
          required: true
    acl_keyfmt:
      type: string
      x-display-name: ACL Key Format
      pattern: '^[^\s]+$'
      x-dependency:
        type:
          value: [add-acl, del-acl]
          required: true
    map_file:
      type: string
      pattern: '^[^\s]+$'
      x-dependency:
        type:
          value: [set-map, del-map]
          required: true
    map_keyfmt:
      type: string
      x-display-name: Map Key Format
      pattern: '^[^\s]+$'
      x-dependency:
        type:
          value: [set-map, del-map]
          required: true
    map_valuefmt:
      type: string
      x-display-name: Map Value Format
      pattern: '^[^\s]+$'
      x-dependency:
        type:
          value: set-map
          required: true
    cache_name:
      type: string
      x-display-name: Cache Name
      pattern: '^[^\s]+$'
      x-dependency:
        type:
          value: cache-use
          required: true
    hint_name:
      type: string
      x-display-name: Hint Name
      pattern: '^[^\s]+$'
      x-dependency:
        type:
          value: early-hint
          required: true
    hint_format:
      type: string
      x-display-name: Hint Format
      pattern: '^[^\s]+$'
      x-dependency:
        type:
          value: early-hint
          required: true
    sc_id:
      type: integer
      x-dependency:
        type:
          value: [sc-inc-gpc0, sc-inc-gpc1, sc-set-gpt0]
          required: true
    resolvers:
      type: string
      x-display-name: Resolvers
      x-dependency:
        type:
          value: do-resolve
          required: true
    protocol:
      type: string
      enum: [ipv4, ipv6]
      x-display-name: Protocol
      x-dependency:
        type:
          value: do-resolve
          required: false
    expr:
      type: string
      x-display-name: Standard HAProxy expression
      x-dependency:
        type:
          value: [do-resolve, set-dst, set-dst-port, set-priority-class, set-priority-offset, set-src, set-src-port]
          required: true
    sc_expr:
      type: string
      x-display-name: ScSet Expression Value
      x-dependency:
        type:
          value: sc-set-gpt0
          required: true
    sc_int:
      type: integer
      x-nullable: true
      x-display-name: ScSet Integer Value
      x-dependency:
        type:
          value: sc-set-gpt0
          required: true
    mark_value:
      type: string
      pattern: '^(0x[0-9A-Fa-f]+|[0-9]+)$'
      x-display-name: Mark Value
      x-dependency:
        type:
          value: set-mark
          required: true
    nice_value:
      type: integer
      minimum: -1024
      maximum: 1024
      x-nullable: false
      x-display-name: Nice Value
      x-dependency:
        type:
          value: set-nice
          required: true
    method_fmt:
      type: string
      pattern: '^[^\s]+$'
      x-dependency:
        type:
          value: set-method
          required: true
    tos_value:
      type: string
      pattern: '^(0x[0-9A-Fa-f]+|[0-9]+)$'
      x-display-name: Tos Value
      x-dependency:
        type:
          value: set-tos
          required: true
    strict_mode:
      type: string
      enum: ['on', 'off']
      x-dependency:
        type:
          value: strict-mode
          required: true
    lua_action:
      type: string
      pattern: '^[^\s]+$'
      x-dependency:
        type:
          value: lua
          required: true
    lua_params:
      type: string
      x-dependency:
        type:
          value: lua
    service_name:
      type: string
      x-dependency:
        type:
          value: use-service
          required: true
    cond:
      type: string
      x-display-name: Condition
      enum: [if, unless]
    cond_test:
      type: string
      x-display-name: Condition Test
      x-dynamic-enum:
        operation: getACLs
        property: acl_name
        freeFormat: true
      x-dependency:
        cond:
          required: true
    return_status_code:
      type: integer
      minimum: 200
      maximum: 599
      x-dependency:
        type:
          value: return
      x-display-name: Return Error Code
      x-nullable: true
    return_content_type:
      type: string
      x-dependency:
        type:
          value: [deny, tarpit, return]
      x-display-name: Return content type
      x-nullable: true
    return_content_format:
      type: string
      enum: [default-errorfile, errorfile, errorfiles, file, lf-file, string, lf-string]
      x-dependency:
        type:
          value: [deny, tarpit, return]
    return_content:
      type: string
      x-dependency:
        return_content_format:
          value: [errofile, errorfiles, file, lf-file, string, lf-string]
          required: true
    return_hdrs:
      type: array
      x-go-name: ReturnHeaders
      x-dependency:
        return_content_format:
          value: [file, lf-file, string, lf-string]
      items:
        $ref: "#/definitions/return_header"
    wait_time:
      type: integer
      x-nullable: true
      x-dependency:
        type:
          value: wait-for-body
          required: true
    wait_at_least:
      type: integer
      x-nullable: true
      x-dependency:
        type:
          value: wait-for-body
  additionalProperties: false
  example:
    index: 0
    type: add-header
    hdr_name: X-Haproxy-Current-Date
    hdr_format: "%T"
    cond: unless
    cond_test: "{ src 192.168.0.0/16 }"
