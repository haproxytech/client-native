---
backend:
  title: Backend
  description: HAProxy backend configuration
  type: object
  required:
    - name
  properties:
    name:
      type: string
      pattern: '^[A-Za-z0-9-_.:]+$'
      x-nullable: false
    from:
      type: string
      pattern: '^[A-Za-z0-9-_.:]+$'
    balance:
      $ref: "#/definitions/balance"
    persist_rule:
      $ref: "#/definitions/persist_rule"
    hash_type:
      $ref: "#/definitions/hash_type"
    http-check:
      $ref: "#/definitions/http_check"
    bind_process:
      type: string
      pattern: '^[^\s]+$'
    mode:
      type: string
      enum: [http, tcp]
    allbackups:
      type: string
      enum: [enabled, disabled]
      x-display-name: All Backups
    http-keep-alive:
      type: string
      enum: [enabled, disabled]
      x-deprecated: true
      x-display-name: HTTP keep-alive
      x-dependency:
        mode:
          value: http
    http-buffer-request:
      type: string
      enum: [enabled, disabled]
      x-display-name: HTTP bufferrequest
      x-dependency:
        mode:
          value: http
    http-no-delay:
      type: string
      enum: [enabled, disabled]
      x-display-name: HTTP low interactive delays
      x-dependency:
        mode:
          value: http
    http-server-close:
      type: string
      enum: [enabled, disabled]
      x-deprecated: true
      x-display-name: HTTP server close
      x-dependency:
        mode:
          value: http
    httpclose:
      type: string
      enum: [enabled, disabled]
      x-deprecated: true
      x-display-name: HTTP connection closing
      x-dependency:
        mode:
          value: http
    http_proxy:
      type: string
      enum: [enabled, disabled]
      x-display-name: HTTP proxy mode
      x-dependency:
        mode:
          value: http
    http_restrict_req_hdr_names:
      type: string
      enum: [preserve, delete, reject]
      x-display-name: Restrict HTTP Request Header Names
    log_tag:
      type: string
      pattern: '^[^\s]+$'
    log_health_checks:
      type: string
      enum: [enabled, disabled]
      x-display-name: Log Health Checks
    tcpka:
      type: string
      enum: [enabled, disabled]
      x-display-name: TCP Keep Alive
      x-dependency:
        mode:
          value: tcp
    srvtcpka:
      type: string
      enum: [enabled, disabled]
      x-display-name: Server TCP Keep Alive
      x-dependency:
        mode:
          value: tcp
    http_connection_mode:
      type: string
      enum: [httpclose, http-server-close, http-keep-alive]
      x-dependency:
        mode:
          value: http
    http_pretend_keepalive:
      type: string
      enum: [enabled, disabled]
      x-dependency:
        mode:
          value: http
    abortonclose:
      type: string
      enum: [enabled, disabled]
    forwardfor:
      $ref: "#/definitions/forwardfor"
      x-dependency:
        mode:
          value: http
    cookie:
      $ref: '#/definitions/cookie'
      x-dependency:
        mode:
          value: http
    dynamic_cookie_key:
      type: string
      pattern: '^[^\s]+$'
      x-dependency:
        cookie:
          dynamic:
            value: true
    default_server:
      $ref: "#/definitions/default_server"
    check_timeout:
      type: integer
      x-nullable: true
    adv_check:
      type: string
      x-display-name: Advanced Check
      enum: [ssl-hello-chk, smtpchk, ldap-check, mysql-check, pgsql-check, tcp-check, redis-check, httpchk]
    smtpchk_params:
      $ref: "#/definitions/smtpchk_params"
      x-dependency:
        adv_check:
          value: smtpchk
    mysql_check_params:
      $ref: "#/definitions/mysql_check_params"
      x-dependency:
        adv_check:
          value: mysql-check
    pgsql_check_params:
      $ref: "#/definitions/pgsql_check_params"
      x-dependency:
        adv_check:
          value: pgsql-check
    external_check:
      type: string
      enum: [enabled, disabled]
      x-display-name: External Check
    external_check_path:
      type: string
      pattern: '^[^\s]+$'
      x-display-name: External Check Path
    external_check_command:
      type: string
      pattern: '^[^\s]+$'
      x-display-name: External Check Command
    queue_timeout:
      type: integer
      x-nullable: true
    connect_timeout:
      type: integer
      x-nullable: true
    http_request_timeout:
      type: integer
      x-nullable: true
      x-dependency:
        mode:
          value: http
    http_keep_alive_timeout:
      type: integer
      x-nullable: true
      x-dependency:
        mode:
          value: http
    tarpit_timeout:
      type: integer
      x-nullable: true
    retries:
      type: integer
      x-nullable: true
    redispatch:
      $ref: "#/definitions/redispatch"
    server_timeout:
      type: integer
      x-nullable: true
    server_fin_timeout:
      type: integer
      x-nullable: true
    tunnel_timeout:
      type: integer
      x-nullable: true
    httpchk_params:
      $ref: "#/definitions/httpchk_params"
      x-dependency:
        mode:
          value: http
        adv_check:
          value: httpchk
    http_reuse:
      type: string
      enum: [aggressive, always, never, safe]
      x-dependency:
        mode:
          value: http
    stick_table:
      $ref: "#/definitions/config_stick_table"
    http-use-htx:
      type: string
      enum: [enabled, disabled]
      x-dependency:
        mode:
          value: http
      pattern: '^[^\s]+$'
    accept_invalid_http_response:
      type: string
      enum: [enabled, disabled]
      x-display-name: Accept Invalid HTTP Response
    h1_case_adjust_bogus_server:
      type: string
      enum: [enabled, disabled]
      x-display-name: H1 Adjust Bogus Server
      x-dependency:
        mode:
          value: http
    compression:
      $ref: "#/definitions/compression"
    stats_options:
      $ref: "#/definitions/stats_options"
    checkcache:
      type: string
      enum: [enabled, disabled]
      x-display-name: Checkcache
    independent_streams:
      type: string
      enum: [enabled, disabled]
      x-display-name: Independent Streams
    nolinger:
      type: string
      enum: [enabled, disabled]
      x-display-name: Nolinger
    originalto:
      $ref: "#/definitions/originalto"
    persist:
      type: string
      enum: [enabled, disabled]
      x-display-name: Persist
    prefer_last_server:
      type: string
      enum: [enabled, disabled]
      x-display-name: Prefer Last Server
    spop_check:
      type: string
      enum: [enabled, disabled]
      x-display-name: Spop Check
    tcp_smart_connect:
      type: string
      enum: [enabled, disabled]
      x-display-name: Tcp Smart Connect
    transparent:
      type: string
      enum: [enabled, disabled]
      x-display-name: Transparent
    splice_auto:
      type: string
      enum: [enabled, disabled]
      x-display-name: Splice Auto
    splice_request:
      type: string
      enum: [enabled, disabled]
      x-display-name: Splice Request
    splice_response:
      type: string
      enum: [enabled, disabled]
      x-display-name: Splice Response
    srvtcpka_cnt:
      type: integer
      x-nullable: true
      x-display-name: Srvtcpka Cnt
    srvtcpka_idle:
      type: integer
      x-nullable: true
      x-display-name: Srvtcpka Idle
    srvtcpka_intvl:
      type: integer
      x-nullable: true
      x-display-name: Srvtcpka Intvl
    email_alert:
      $ref: "#/definitions/email_alert"
    load_server_state_from_file:
      type: string
      enum: [global, local, none]
    server_state_file_name:
      type: string
      x-display-name: Server state file
    description:
      type: string
      x-display-name: Description
    id:
      type: integer
      x-nullable: true
    enabled:
      type: boolean
    disabled:
      type: boolean
    use_fcgi_app:
      type: string
      x-display-name: FastCGI application
    error_files:
      type: array
      x-omitempty: true
      x-go-name: ErrorFiles
      items:
        $ref: "#/definitions/errorfile"
    errorfiles_from_http_errors:
      type: array
      x-omitempty: true
      x-go-name: ErrorFilesFromHTTPErrors
      items:
        $ref: "#/definitions/errorfiles"
    errorloc302:
      $ref: "#/definitions/errorloc"
    errorloc303:
      $ref: "#/definitions/errorloc"
    fullconn:
      type: integer
      x-nullable: true
    force_persist:
      type: object
      required:
        - cond
        - cond_test
      properties:
        cond:
          type: string
          x-display-name: Condition
          enum: [if, unless]
        cond_test:
          type: string
          x-display-name: Condition Test
          x-dependency:
            cond:
              required: true
    ignore_persist:
      type: object
      required:
        - cond
        - cond_test
      properties:
        cond:
          type: string
          x-display-name: Condition
          enum: [if, unless]
        cond_test:
          type: string
          x-display-name: Condition Test
          x-dependency:
            cond:
              required: true
    http_send_name_header:
      type: string
      x-nullable: true
      x-display-name: The header string to use to send the server name
    max_keep_alive_queue:
      type: integer
      x-nullable: true
      x-display-name: Maximum keep alive queue
    retry_on:
      type: string
      x-display-name: Retry on
    source:
      $ref: "#/definitions/source"
  additionalProperties: false
  example:
    name: test_backend
    mode: http
    balance:
      algorithm: roundrobin
    forwardfor:
      enabled: enabled
    adv_check: httpchk
    httpchk_params:
      uri: "/check"
      method: GET
      version: HTTP/1.1
