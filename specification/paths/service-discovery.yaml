---
aws:
  get:
    summary: Return an array of all configured AWS regions
    description: Return all configured AWS regions.
    operationId: getAWSRegions
    tags:
      - ServiceDiscovery
    responses:
      200:
        description: Successful operation
        schema:
          $ref: "#/definitions/awsRegions"
      'default':
        $ref: '#/responses/DefaultError'
  post:
    summary: Add a new AWS region
    description: |-
      Add a new AWS region.
      Credentials are not required in case Dataplane API is running in an EC2 instance with proper IAM role attached.
    operationId: createAWSRegion
    tags:
      - ServiceDiscovery
    parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/awsRegion'
    responses:
      201:
        description: Resource created
        schema:
          $ref: '#/definitions/awsRegion'
      409:
        $ref: '#/responses/AlreadyExists'
      400:
        $ref: '#/responses/BadRequest'
      default:
        $ref: '#/responses/DefaultError'
aws_one:
  get:
    summary: Return an AWS region
    description: Return one AWS Region configuration by it's id.
    operationId: getAWSRegion
    tags:
      - ServiceDiscovery
    parameters:
      - name: id
        in: path
        description: AWS region id
        required: true
        type: string
    responses:
      '200':
        description: Successful operation
        schema:
          $ref: "#/definitions/awsRegion"
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'
  put:
    summary: Replace an AWS region
    description: Replace an AWS region configuration by its id.
    operationId: replaceAWSRegion
    tags:
      - ServiceDiscovery
    parameters:
      - name: id
        in: path
        description: AWS Region ID
        required: true
        type: string
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/awsRegion'
    responses:
      '200':
        description: Resource updated
        schema:
          $ref: '#/definitions/awsRegion'
      '400':
        $ref: '#/responses/BadRequest'
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'
  delete:
    summary: Delete an AWS region
    description: Delete an AWS region configuration by it's id.
    operationId: deleteAWSRegion
    tags:
      - ServiceDiscovery
    parameters:
      - name: id
        in: path
        description: AWS region ID
        required: true
        type: string
    responses:
      '204':
        description: Resource deleted
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'

opennebula:
  get:
    summary: Return an array of all configured OpenNebula servers
    description: Returns all configured OpenNebula servers.
    operationId: getOpenNebulas
    tags:
      - ServiceDiscovery
    responses:
      '200':
        description: Successful operation
        schema:
          type: object
          required:
            - data
          properties:
            data:
              $ref: "#/definitions/opennebulas"
      'default':
        $ref: '#/responses/DefaultError'
  post:
    summary: Add a new OpenNebula server
    description: Adds a new OpenNebula server.
    operationId: createOpenNebula
    tags:
      - ServiceDiscovery
    parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/opennebula'
    responses:
      '201':
        description: OpenNebula created
        schema:
          $ref: '#/definitions/opennebula'
      '409':
        $ref: '#/responses/AlreadyExists'
      '400':
        $ref: '#/responses/BadRequest'
      'default':
        $ref: '#/responses/DefaultError'
opennebula_one:
  get:
    summary: Return one OpenNebula server
    description: Returns one OpenNebula server configuration by it's id.
    operationId: getOpenNebula
    tags:
      - ServiceDiscovery
    parameters:
      - name: id
        in: path
        description: OpenNebula server id
        required: true
        type: string
    responses:
      '200':
        description: Successful operation
        schema:
          type: object
          properties:
            data:
              $ref: "#/definitions/opennebula"
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'
  put:
    summary: Replace an OpenNebula server
    description: Replaces an OpenNebula server configuration by it's id.
    operationId: replaceOpenNebula
    tags:
      - ServiceDiscovery
    parameters:
      - name: id
        in: path
        description: OpenNebula Index
        required: true
        type: string
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/opennebula'
    responses:
      '200':
        description: OpenNebula server replaced
        schema:
          $ref: '#/definitions/opennebula'
      '400':
        $ref: '#/responses/BadRequest'
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'
  delete:
    summary: Delete an OpenNebula server
    description: Deletes an OpenNebula server configuration by it's id.
    operationId: deleteOpenNebula
    tags:
      - ServiceDiscovery
    parameters:
      - name: id
        in: path
        description: OpenNebula server Index
        required: true
        type: string
    responses:
      '204':
        description: OpenNebula server deleted
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'

consul:
  get:
    summary: Return an array of all configured Consul servers
    description: Returns all configured Consul servers.
    operationId: getConsuls
    tags:
      - ServiceDiscovery
    responses:
      '200':
        description: Successful operation
        schema:
          $ref: "#/definitions/consuls"
      'default':
        $ref: '#/responses/DefaultError'
  post:
    summary: Add a new Consul server
    description: Adds a new Consul server.
    operationId: createConsul
    tags:
      - ServiceDiscovery
    parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/consul'
    responses:
      '201':
        description: Consul created
        schema:
          $ref: '#/definitions/consul'
      '409':
        $ref: '#/responses/AlreadyExists'
      '400':
        $ref: '#/responses/BadRequest'
      'default':
        $ref: '#/responses/DefaultError'
consul_one:
  get:
    summary: Return one Consul server
    description: Returns one Consul server configuration by it's id.
    operationId: getConsul
    tags:
      - ServiceDiscovery
    parameters:
      - name: id
        in: path
        description: Consul server id
        required: true
        type: string
    responses:
      '200':
        description: Successful operation
        schema:
          $ref: "#/definitions/consul"
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'
  put:
    summary: Replace a Consul server
    description: Replaces a Consul server configuration by it's id.
    operationId: replaceConsul
    tags:
      - ServiceDiscovery
    parameters:
      - name: id
        in: path
        description: Consul Index
        required: true
        type: string
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/consul'
    responses:
      '200':
        description: Consul server replaced
        schema:
          $ref: '#/definitions/consul'
      '400':
        $ref: '#/responses/BadRequest'
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'
  delete:
    summary: Delete a Consul server
    description: Deletes a Consul server configuration by it's id.
    operationId: deleteConsul
    tags:
      - ServiceDiscovery
    parameters:
      - name: id
        in: path
        description: Consul server Index
        required: true
        type: string
    responses:
      '204':
        description: Consul server deleted
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'
