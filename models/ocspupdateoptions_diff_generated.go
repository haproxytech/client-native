// Code generated by go-method-gen. DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package models

import (
	"github.com/haproxytech/go-method-gen/pkg/eqdiff"
)

func (rec OcspUpdateOptions) Diff(obj OcspUpdateOptions, opts ...eqdiff.GoMethodGenOptions) map[string][]interface{} {
	diff := make(map[string][]interface{})
	for diffKey, diffValue := range DiffPointerBool(rec.Disable, obj.Disable, opts...) {
		diff["Disable."+diffKey] = diffValue
	}
	for diffKey, diffValue := range DiffPointerOcspUpdateOptionsHttpproxy(rec.Httpproxy, obj.Httpproxy, opts...) {
		diff["Httpproxy."+diffKey] = diffValue
	}
	for diffKey, diffValue := range DiffPointerInt64(rec.Maxdelay, obj.Maxdelay, opts...) {
		diff["Maxdelay."+diffKey] = diffValue
	}
	for diffKey, diffValue := range DiffPointerInt64(rec.Mindelay, obj.Mindelay, opts...) {
		diff["Mindelay."+diffKey] = diffValue
	}
	if rec.Mode != obj.Mode {
		diff["Mode"] = []interface{}{rec.Mode, obj.Mode}
	}
	return diff
}

func DiffPointerOcspUpdateOptionsHttpproxy(x, y *OcspUpdateOptionsHttpproxy, opts ...eqdiff.GoMethodGenOptions) map[string][]interface{} {
	diff := make(map[string][]interface{})
	if x == nil && y == nil {
		return diff
	}

	key := "Httpproxy"

	switch {
	case x == nil:
		diff[key] = []interface{}{x, *y}
		return diff
	case y == nil:
		diff[key] = []interface{}{*x, y}
		return diff
	}

	for diffKey, diffValue := range (*x).Diff(*y) {
		diff[key+"."+diffKey] = diffValue
	}

	return diff
}
