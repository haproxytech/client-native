// Code generated by go-method-gen. DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package models

func (rec ResolverBase) Diff(obj ResolverBase) map[string][]interface{} {
	diff := make(map[string][]interface{})
	if rec.AcceptedPayloadSize != obj.AcceptedPayloadSize {
		diff["AcceptedPayloadSize"] = []interface{}{rec.AcceptedPayloadSize, obj.AcceptedPayloadSize}
	}
	for diffKey, diffValue := range DiffPointerInt64(rec.HoldNx, obj.HoldNx) {
		diff["HoldNx."+diffKey] = diffValue
	}
	for diffKey, diffValue := range DiffPointerInt64(rec.HoldObsolete, obj.HoldObsolete) {
		diff["HoldObsolete."+diffKey] = diffValue
	}
	for diffKey, diffValue := range DiffPointerInt64(rec.HoldOther, obj.HoldOther) {
		diff["HoldOther."+diffKey] = diffValue
	}
	for diffKey, diffValue := range DiffPointerInt64(rec.HoldRefused, obj.HoldRefused) {
		diff["HoldRefused."+diffKey] = diffValue
	}
	for diffKey, diffValue := range DiffPointerInt64(rec.HoldTimeout, obj.HoldTimeout) {
		diff["HoldTimeout."+diffKey] = diffValue
	}
	for diffKey, diffValue := range DiffPointerInt64(rec.HoldValid, obj.HoldValid) {
		diff["HoldValid."+diffKey] = diffValue
	}
	if rec.Name != obj.Name {
		diff["Name"] = []interface{}{rec.Name, obj.Name}
	}
	if rec.ParseResolvConf != obj.ParseResolvConf {
		diff["ParseResolvConf"] = []interface{}{rec.ParseResolvConf, obj.ParseResolvConf}
	}
	if rec.ResolveRetries != obj.ResolveRetries {
		diff["ResolveRetries"] = []interface{}{rec.ResolveRetries, obj.ResolveRetries}
	}
	if rec.TimeoutResolve != obj.TimeoutResolve {
		diff["TimeoutResolve"] = []interface{}{rec.TimeoutResolve, obj.TimeoutResolve}
	}
	if rec.TimeoutRetry != obj.TimeoutRetry {
		diff["TimeoutRetry"] = []interface{}{rec.TimeoutRetry, obj.TimeoutRetry}
	}
	return diff
}
