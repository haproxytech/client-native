// Code generated by go-method-gen. DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package models

func (rec ClusterSettings) Diff(obj ClusterSettings) map[string][]interface{} {
	diff := make(map[string][]interface{})
	if rec.BootstrapKey != obj.BootstrapKey {
		diff["BootstrapKey"] = []interface{}{rec.BootstrapKey, obj.BootstrapKey}
	}
	for diffKey, diffValue := range DiffPointerClusterSettingsCluster(rec.Cluster, obj.Cluster) {
		diff["Cluster."+diffKey] = diffValue
	}
	if rec.Mode != obj.Mode {
		diff["Mode"] = []interface{}{rec.Mode, obj.Mode}
	}
	if rec.Status != obj.Status {
		diff["Status"] = []interface{}{rec.Status, obj.Status}
	}
	return diff
}

func DiffPointerClusterSettingsCluster(x, y *ClusterSettingsCluster) map[string][]interface{} {
	diff := make(map[string][]interface{})
	if x == nil && y == nil {
		return diff
	}

	key := "Cluster"

	switch {
	case x == nil:
		diff[key] = []interface{}{x, *y}
		return diff
	case y == nil:
		diff[key] = []interface{}{*x, y}
		return diff
	}

	for diffKey, diffValue := range (*x).Diff(*y) {
		diff[key+"."+diffKey] = diffValue
	}

	return diff
}
