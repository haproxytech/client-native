// Code generated by go-method-gen. DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package models

func (rec SslOptions) Equal(obj SslOptions) bool {
	return EqualSlicePointerSslEngine(rec.SslEngines, obj.SslEngines) &&
		rec.AcmeScheduler == obj.AcmeScheduler &&
		rec.CaBase == obj.CaBase &&
		rec.CrtBase == obj.CrtBase &&
		rec.DefaultBindCiphers == obj.DefaultBindCiphers &&
		rec.DefaultBindCiphersuites == obj.DefaultBindCiphersuites &&
		rec.DefaultBindClientSigalgs == obj.DefaultBindClientSigalgs &&
		rec.DefaultBindCurves == obj.DefaultBindCurves &&
		rec.DefaultBindOptions == obj.DefaultBindOptions &&
		rec.DefaultBindSigalgs == obj.DefaultBindSigalgs &&
		rec.DefaultServerCiphers == obj.DefaultServerCiphers &&
		rec.DefaultServerCiphersuites == obj.DefaultServerCiphersuites &&
		rec.DefaultServerClientSigalgs == obj.DefaultServerClientSigalgs &&
		rec.DefaultServerCurves == obj.DefaultServerCurves &&
		rec.DefaultServerOptions == obj.DefaultServerOptions &&
		rec.DefaultServerSigalgs == obj.DefaultServerSigalgs &&
		rec.DhParamFile == obj.DhParamFile &&
		rec.IssuersChainPath == obj.IssuersChainPath &&
		rec.LoadExtraFiles == obj.LoadExtraFiles &&
		rec.Maxsslconn == obj.Maxsslconn &&
		rec.Maxsslrate == obj.Maxsslrate &&
		rec.ModeAsync == obj.ModeAsync &&
		rec.Propquery == obj.Propquery &&
		rec.Provider == obj.Provider &&
		rec.ProviderPath == obj.ProviderPath &&
		EqualPointerInt64(rec.SecurityLevel, obj.SecurityLevel) &&
		rec.ServerVerify == obj.ServerVerify &&
		rec.SkipSelfIssuedCa == obj.SkipSelfIssuedCa
}

func EqualPointerSslEngine(x, y *SslEngine) bool {
	if x == nil || y == nil {
		return x == y
	}
	return (*x).Equal(*y)
}

func EqualSlicePointerSslEngine(x, y []*SslEngine) bool {
	if len(x) != len(y) {
		return false
	}

	for i, vx := range x {
		vy := y[i]
		if !EqualPointerSslEngine(vx, vy) {
			return false
		}
	}

	return true
}
