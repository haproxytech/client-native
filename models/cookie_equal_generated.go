// Code generated by go-method-gen. DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package models

func (rec Cookie) Equal(obj Cookie) bool {
	return EqualSlicePointerAttr(rec.Attrs, obj.Attrs) &&
		EqualSlicePointerDomain(rec.Domains, obj.Domains) &&
		rec.Dynamic == obj.Dynamic &&
		rec.Httponly == obj.Httponly &&
		rec.Indirect == obj.Indirect &&
		rec.Maxidle == obj.Maxidle &&
		rec.Maxlife == obj.Maxlife &&
		EqualPointerString(rec.Name, obj.Name) &&
		rec.Nocache == obj.Nocache &&
		rec.Postonly == obj.Postonly &&
		rec.Preserve == obj.Preserve &&
		rec.Secure == obj.Secure &&
		rec.Type == obj.Type
}

func EqualPointerAttr(x, y *Attr) bool {
	if x == nil || y == nil {
		return x == y
	}
	return (*x).Equal(*y)
}

func EqualPointerDomain(x, y *Domain) bool {
	if x == nil || y == nil {
		return x == y
	}
	return (*x).Equal(*y)
}

func EqualSlicePointerAttr(x, y []*Attr) bool {
	if len(x) != len(y) {
		return false
	}

	for i, vx := range x {
		vy := y[i]
		if !EqualPointerAttr(vx, vy) {
			return false
		}
	}

	return true
}

func EqualSlicePointerDomain(x, y []*Domain) bool {
	if len(x) != len(y) {
		return false
	}

	for i, vx := range x {
		vy := y[i]
		if !EqualPointerDomain(vx, vy) {
			return false
		}
	}

	return true
}
