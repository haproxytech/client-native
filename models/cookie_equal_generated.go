// Code generated by go-method-gen. DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package models

import (
	"github.com/haproxytech/go-method-gen/pkg/eqdiff"
)

func (rec Cookie) Equal(obj Cookie, opts ...eqdiff.GoMethodGenOptions) bool {
	return EqualSlicePointerAttr(rec.Attrs, obj.Attrs, opts...) &&
		EqualSlicePointerDomain(rec.Domains, obj.Domains, opts...) &&
		rec.Dynamic == obj.Dynamic &&
		rec.Httponly == obj.Httponly &&
		rec.Indirect == obj.Indirect &&
		rec.Maxidle == obj.Maxidle &&
		rec.Maxlife == obj.Maxlife &&
		EqualPointerString(rec.Name, obj.Name, opts...) &&
		rec.Nocache == obj.Nocache &&
		rec.Postonly == obj.Postonly &&
		rec.Preserve == obj.Preserve &&
		rec.Secure == obj.Secure &&
		rec.Type == obj.Type
}

func EqualPointerAttr(x, y *Attr, opts ...eqdiff.GoMethodGenOptions) bool {
	if x == nil || y == nil {
		return x == y
	}
	return (*x).Equal(*y, opts...)
}

func EqualPointerDomain(x, y *Domain, opts ...eqdiff.GoMethodGenOptions) bool {
	if x == nil || y == nil {
		return x == y
	}
	return (*x).Equal(*y, opts...)
}

func EqualSlicePointerAttr(x, y []*Attr, opts ...eqdiff.GoMethodGenOptions) bool {
	var opt *eqdiff.GoMethodGenOptions
	if len(opts) > 0 {
		opt = &opts[0]
	}

	if (x == nil) != (y == nil) {
		if opt == nil || (opt != nil && !opt.TreatNilNotAsEmpty) {
			if len(x) == 0 && len(y) == 0 {
				return true
			}
		}
		return false
	}

	if len(x) != len(y) {
		return false
	}

	for i, vx := range x {
		vy := y[i]
		if !EqualPointerAttr(vx, vy, opts...) {
			return false
		}
	}

	return true
}

func EqualSlicePointerDomain(x, y []*Domain, opts ...eqdiff.GoMethodGenOptions) bool {
	var opt *eqdiff.GoMethodGenOptions
	if len(opts) > 0 {
		opt = &opts[0]
	}

	if (x == nil) != (y == nil) {
		if opt == nil || (opt != nil && !opt.TreatNilNotAsEmpty) {
			if len(x) == 0 && len(y) == 0 {
				return true
			}
		}
		return false
	}

	if len(x) != len(y) {
		return false
	}

	for i, vx := range x {
		vy := y[i]
		if !EqualPointerDomain(vx, vy, opts...) {
			return false
		}
	}

	return true
}
