// Code generated by go-method-gen. DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package models

import (
	"github.com/haproxytech/go-method-gen/pkg/eqdiff"
)

func (rec Filter) Diff(obj Filter, opts ...eqdiff.GoMethodGenOptions) map[string][]interface{} {
	diff := make(map[string][]interface{})
	if rec.AppName != obj.AppName {
		diff["AppName"] = []interface{}{rec.AppName, obj.AppName}
	}
	if rec.BandwidthLimitName != obj.BandwidthLimitName {
		diff["BandwidthLimitName"] = []interface{}{rec.BandwidthLimitName, obj.BandwidthLimitName}
	}
	if rec.CacheName != obj.CacheName {
		diff["CacheName"] = []interface{}{rec.CacheName, obj.CacheName}
	}
	if rec.DefaultLimit != obj.DefaultLimit {
		diff["DefaultLimit"] = []interface{}{rec.DefaultLimit, obj.DefaultLimit}
	}
	if rec.DefaultPeriod != obj.DefaultPeriod {
		diff["DefaultPeriod"] = []interface{}{rec.DefaultPeriod, obj.DefaultPeriod}
	}
	if rec.Key != obj.Key {
		diff["Key"] = []interface{}{rec.Key, obj.Key}
	}
	if rec.Limit != obj.Limit {
		diff["Limit"] = []interface{}{rec.Limit, obj.Limit}
	}
	if rec.MinSize != obj.MinSize {
		diff["MinSize"] = []interface{}{rec.MinSize, obj.MinSize}
	}
	if rec.SpoeConfig != obj.SpoeConfig {
		diff["SpoeConfig"] = []interface{}{rec.SpoeConfig, obj.SpoeConfig}
	}
	if rec.SpoeEngine != obj.SpoeEngine {
		diff["SpoeEngine"] = []interface{}{rec.SpoeEngine, obj.SpoeEngine}
	}
	if rec.Table != obj.Table {
		diff["Table"] = []interface{}{rec.Table, obj.Table}
	}
	if rec.TraceHexdump != obj.TraceHexdump {
		diff["TraceHexdump"] = []interface{}{rec.TraceHexdump, obj.TraceHexdump}
	}
	if rec.TraceName != obj.TraceName {
		diff["TraceName"] = []interface{}{rec.TraceName, obj.TraceName}
	}
	if rec.TraceRndForwarding != obj.TraceRndForwarding {
		diff["TraceRndForwarding"] = []interface{}{rec.TraceRndForwarding, obj.TraceRndForwarding}
	}
	if rec.TraceRndParsing != obj.TraceRndParsing {
		diff["TraceRndParsing"] = []interface{}{rec.TraceRndParsing, obj.TraceRndParsing}
	}
	if rec.Type != obj.Type {
		diff["Type"] = []interface{}{rec.Type, obj.Type}
	}
	return diff
}
