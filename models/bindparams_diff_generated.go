// Code generated by go-method-gen. DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package models

import (
	"github.com/haproxytech/go-method-gen/pkg/eqdiff"
)

func (rec BindParams) Diff(obj BindParams, opts ...eqdiff.GoMethodGenOptions) map[string][]interface{} {
	diff := make(map[string][]interface{})
	if rec.AcceptNetscalerCip != obj.AcceptNetscalerCip {
		diff["AcceptNetscalerCip"] = []interface{}{rec.AcceptNetscalerCip, obj.AcceptNetscalerCip}
	}
	if rec.AcceptProxy != obj.AcceptProxy {
		diff["AcceptProxy"] = []interface{}{rec.AcceptProxy, obj.AcceptProxy}
	}
	if rec.Allow0rtt != obj.Allow0rtt {
		diff["Allow0rtt"] = []interface{}{rec.Allow0rtt, obj.Allow0rtt}
	}
	if rec.Alpn != obj.Alpn {
		diff["Alpn"] = []interface{}{rec.Alpn, obj.Alpn}
	}
	if rec.Backlog != obj.Backlog {
		diff["Backlog"] = []interface{}{rec.Backlog, obj.Backlog}
	}
	if rec.CaIgnoreErr != obj.CaIgnoreErr {
		diff["CaIgnoreErr"] = []interface{}{rec.CaIgnoreErr, obj.CaIgnoreErr}
	}
	if rec.CaSignFile != obj.CaSignFile {
		diff["CaSignFile"] = []interface{}{rec.CaSignFile, obj.CaSignFile}
	}
	if rec.CaSignPass != obj.CaSignPass {
		diff["CaSignPass"] = []interface{}{rec.CaSignPass, obj.CaSignPass}
	}
	if rec.CaVerifyFile != obj.CaVerifyFile {
		diff["CaVerifyFile"] = []interface{}{rec.CaVerifyFile, obj.CaVerifyFile}
	}
	if rec.Ciphers != obj.Ciphers {
		diff["Ciphers"] = []interface{}{rec.Ciphers, obj.Ciphers}
	}
	if rec.Ciphersuites != obj.Ciphersuites {
		diff["Ciphersuites"] = []interface{}{rec.Ciphersuites, obj.Ciphersuites}
	}
	if rec.ClientSigalgs != obj.ClientSigalgs {
		diff["ClientSigalgs"] = []interface{}{rec.ClientSigalgs, obj.ClientSigalgs}
	}
	if rec.CrlFile != obj.CrlFile {
		diff["CrlFile"] = []interface{}{rec.CrlFile, obj.CrlFile}
	}
	if rec.CrtIgnoreErr != obj.CrtIgnoreErr {
		diff["CrtIgnoreErr"] = []interface{}{rec.CrtIgnoreErr, obj.CrtIgnoreErr}
	}
	if rec.CrtList != obj.CrtList {
		diff["CrtList"] = []interface{}{rec.CrtList, obj.CrtList}
	}
	if rec.Curves != obj.Curves {
		diff["Curves"] = []interface{}{rec.Curves, obj.Curves}
	}
	for diffKey, diffValue := range DiffSliceString(rec.DefaultCrtList, obj.DefaultCrtList, opts...) {
		diff["DefaultCrtList"+diffKey] = diffValue
	}
	if rec.DeferAccept != obj.DeferAccept {
		diff["DeferAccept"] = []interface{}{rec.DeferAccept, obj.DeferAccept}
	}
	if rec.Ecdhe != obj.Ecdhe {
		diff["Ecdhe"] = []interface{}{rec.Ecdhe, obj.Ecdhe}
	}
	if rec.ExposeFdListeners != obj.ExposeFdListeners {
		diff["ExposeFdListeners"] = []interface{}{rec.ExposeFdListeners, obj.ExposeFdListeners}
	}
	if rec.ForceSslv3 != obj.ForceSslv3 {
		diff["ForceSslv3"] = []interface{}{rec.ForceSslv3, obj.ForceSslv3}
	}
	if rec.ForceStrictSni != obj.ForceStrictSni {
		diff["ForceStrictSni"] = []interface{}{rec.ForceStrictSni, obj.ForceStrictSni}
	}
	if rec.ForceTlsv10 != obj.ForceTlsv10 {
		diff["ForceTlsv10"] = []interface{}{rec.ForceTlsv10, obj.ForceTlsv10}
	}
	if rec.ForceTlsv11 != obj.ForceTlsv11 {
		diff["ForceTlsv11"] = []interface{}{rec.ForceTlsv11, obj.ForceTlsv11}
	}
	if rec.ForceTlsv12 != obj.ForceTlsv12 {
		diff["ForceTlsv12"] = []interface{}{rec.ForceTlsv12, obj.ForceTlsv12}
	}
	if rec.ForceTlsv13 != obj.ForceTlsv13 {
		diff["ForceTlsv13"] = []interface{}{rec.ForceTlsv13, obj.ForceTlsv13}
	}
	if rec.GenerateCertificates != obj.GenerateCertificates {
		diff["GenerateCertificates"] = []interface{}{rec.GenerateCertificates, obj.GenerateCertificates}
	}
	if rec.Gid != obj.Gid {
		diff["Gid"] = []interface{}{rec.Gid, obj.Gid}
	}
	if rec.Group != obj.Group {
		diff["Group"] = []interface{}{rec.Group, obj.Group}
	}
	if rec.GUIDPrefix != obj.GUIDPrefix {
		diff["GUIDPrefix"] = []interface{}{rec.GUIDPrefix, obj.GUIDPrefix}
	}
	if rec.ID != obj.ID {
		diff["ID"] = []interface{}{rec.ID, obj.ID}
	}
	for diffKey, diffValue := range DiffPointerInt64(rec.IdlePing, obj.IdlePing, opts...) {
		diff["IdlePing."+diffKey] = diffValue
	}
	if rec.Interface != obj.Interface {
		diff["Interface"] = []interface{}{rec.Interface, obj.Interface}
	}
	if rec.Label != obj.Label {
		diff["Label"] = []interface{}{rec.Label, obj.Label}
	}
	if rec.Level != obj.Level {
		diff["Level"] = []interface{}{rec.Level, obj.Level}
	}
	if rec.Maxconn != obj.Maxconn {
		diff["Maxconn"] = []interface{}{rec.Maxconn, obj.Maxconn}
	}
	if rec.Mode != obj.Mode {
		diff["Mode"] = []interface{}{rec.Mode, obj.Mode}
	}
	if rec.Mss != obj.Mss {
		diff["Mss"] = []interface{}{rec.Mss, obj.Mss}
	}
	if rec.Name != obj.Name {
		diff["Name"] = []interface{}{rec.Name, obj.Name}
	}
	if rec.Namespace != obj.Namespace {
		diff["Namespace"] = []interface{}{rec.Namespace, obj.Namespace}
	}
	if rec.Nbconn != obj.Nbconn {
		diff["Nbconn"] = []interface{}{rec.Nbconn, obj.Nbconn}
	}
	if rec.Nice != obj.Nice {
		diff["Nice"] = []interface{}{rec.Nice, obj.Nice}
	}
	if rec.NoAlpn != obj.NoAlpn {
		diff["NoAlpn"] = []interface{}{rec.NoAlpn, obj.NoAlpn}
	}
	if rec.NoCaNames != obj.NoCaNames {
		diff["NoCaNames"] = []interface{}{rec.NoCaNames, obj.NoCaNames}
	}
	if rec.NoSslv3 != obj.NoSslv3 {
		diff["NoSslv3"] = []interface{}{rec.NoSslv3, obj.NoSslv3}
	}
	if rec.NoStrictSni != obj.NoStrictSni {
		diff["NoStrictSni"] = []interface{}{rec.NoStrictSni, obj.NoStrictSni}
	}
	if rec.NoTLSTickets != obj.NoTLSTickets {
		diff["NoTLSTickets"] = []interface{}{rec.NoTLSTickets, obj.NoTLSTickets}
	}
	if rec.NoTlsv10 != obj.NoTlsv10 {
		diff["NoTlsv10"] = []interface{}{rec.NoTlsv10, obj.NoTlsv10}
	}
	if rec.NoTlsv11 != obj.NoTlsv11 {
		diff["NoTlsv11"] = []interface{}{rec.NoTlsv11, obj.NoTlsv11}
	}
	if rec.NoTlsv12 != obj.NoTlsv12 {
		diff["NoTlsv12"] = []interface{}{rec.NoTlsv12, obj.NoTlsv12}
	}
	if rec.NoTlsv13 != obj.NoTlsv13 {
		diff["NoTlsv13"] = []interface{}{rec.NoTlsv13, obj.NoTlsv13}
	}
	if rec.Npn != obj.Npn {
		diff["Npn"] = []interface{}{rec.Npn, obj.Npn}
	}
	if rec.PreferClientCiphers != obj.PreferClientCiphers {
		diff["PreferClientCiphers"] = []interface{}{rec.PreferClientCiphers, obj.PreferClientCiphers}
	}
	if rec.Proto != obj.Proto {
		diff["Proto"] = []interface{}{rec.Proto, obj.Proto}
	}
	if rec.QuicCcAlgo != obj.QuicCcAlgo {
		diff["QuicCcAlgo"] = []interface{}{rec.QuicCcAlgo, obj.QuicCcAlgo}
	}
	if rec.QuicForceRetry != obj.QuicForceRetry {
		diff["QuicForceRetry"] = []interface{}{rec.QuicForceRetry, obj.QuicForceRetry}
	}
	if rec.QuicSocket != obj.QuicSocket {
		diff["QuicSocket"] = []interface{}{rec.QuicSocket, obj.QuicSocket}
	}
	for diffKey, diffValue := range DiffPointerInt64(rec.QuicCcAlgoBurstSize, obj.QuicCcAlgoBurstSize, opts...) {
		diff["QuicCcAlgoBurstSize."+diffKey] = diffValue
	}
	for diffKey, diffValue := range DiffPointerInt64(rec.QuicCcAlgoMaxWindow, obj.QuicCcAlgoMaxWindow, opts...) {
		diff["QuicCcAlgoMaxWindow."+diffKey] = diffValue
	}
	if rec.SeverityOutput != obj.SeverityOutput {
		diff["SeverityOutput"] = []interface{}{rec.SeverityOutput, obj.SeverityOutput}
	}
	if rec.Sigalgs != obj.Sigalgs {
		diff["Sigalgs"] = []interface{}{rec.Sigalgs, obj.Sigalgs}
	}
	if rec.Ssl != obj.Ssl {
		diff["Ssl"] = []interface{}{rec.Ssl, obj.Ssl}
	}
	if rec.SslCafile != obj.SslCafile {
		diff["SslCafile"] = []interface{}{rec.SslCafile, obj.SslCafile}
	}
	if rec.SslCertificate != obj.SslCertificate {
		diff["SslCertificate"] = []interface{}{rec.SslCertificate, obj.SslCertificate}
	}
	if rec.SslMaxVer != obj.SslMaxVer {
		diff["SslMaxVer"] = []interface{}{rec.SslMaxVer, obj.SslMaxVer}
	}
	if rec.SslMinVer != obj.SslMinVer {
		diff["SslMinVer"] = []interface{}{rec.SslMinVer, obj.SslMinVer}
	}
	if rec.Sslv3 != obj.Sslv3 {
		diff["Sslv3"] = []interface{}{rec.Sslv3, obj.Sslv3}
	}
	if rec.StrictSni != obj.StrictSni {
		diff["StrictSni"] = []interface{}{rec.StrictSni, obj.StrictSni}
	}
	for diffKey, diffValue := range DiffPointerInt64(rec.TCPUserTimeout, obj.TCPUserTimeout, opts...) {
		diff["TCPUserTimeout."+diffKey] = diffValue
	}
	if rec.Tfo != obj.Tfo {
		diff["Tfo"] = []interface{}{rec.Tfo, obj.Tfo}
	}
	if rec.Thread != obj.Thread {
		diff["Thread"] = []interface{}{rec.Thread, obj.Thread}
	}
	if rec.TLSTicketKeys != obj.TLSTicketKeys {
		diff["TLSTicketKeys"] = []interface{}{rec.TLSTicketKeys, obj.TLSTicketKeys}
	}
	if rec.TLSTickets != obj.TLSTickets {
		diff["TLSTickets"] = []interface{}{rec.TLSTickets, obj.TLSTickets}
	}
	if rec.Tlsv10 != obj.Tlsv10 {
		diff["Tlsv10"] = []interface{}{rec.Tlsv10, obj.Tlsv10}
	}
	if rec.Tlsv11 != obj.Tlsv11 {
		diff["Tlsv11"] = []interface{}{rec.Tlsv11, obj.Tlsv11}
	}
	if rec.Tlsv12 != obj.Tlsv12 {
		diff["Tlsv12"] = []interface{}{rec.Tlsv12, obj.Tlsv12}
	}
	if rec.Tlsv13 != obj.Tlsv13 {
		diff["Tlsv13"] = []interface{}{rec.Tlsv13, obj.Tlsv13}
	}
	if rec.Transparent != obj.Transparent {
		diff["Transparent"] = []interface{}{rec.Transparent, obj.Transparent}
	}
	if rec.UID != obj.UID {
		diff["UID"] = []interface{}{rec.UID, obj.UID}
	}
	if rec.User != obj.User {
		diff["User"] = []interface{}{rec.User, obj.User}
	}
	if rec.V4v6 != obj.V4v6 {
		diff["V4v6"] = []interface{}{rec.V4v6, obj.V4v6}
	}
	if rec.V6only != obj.V6only {
		diff["V6only"] = []interface{}{rec.V6only, obj.V6only}
	}
	if rec.Verify != obj.Verify {
		diff["Verify"] = []interface{}{rec.Verify, obj.Verify}
	}
	return diff
}
