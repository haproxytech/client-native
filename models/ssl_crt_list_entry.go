// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SslCrtListEntry SSL Crt List Entry
//
// # SSL Crt List Entry
//
// swagger:model ssl_crt_list_entry
type SslCrtListEntry struct {

	// s n i filter
	SNIFilter []string `json:"sni_filter,omitempty"`

	// s s l bind config
	SSLBindConfig string `json:"ssl_bind_config,omitempty"`

	// file
	File string `json:"file,omitempty"`

	// line number
	// Minimum: 0
	// +kubebuilder:validation:Minimum=0
	LineNumber int64 `json:"line_number,omitempty"`
}

// Validate validates this ssl crt list entry
func (m *SslCrtListEntry) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLineNumber(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SslCrtListEntry) validateLineNumber(formats strfmt.Registry) error {
	if swag.IsZero(m.LineNumber) { // not required
		return nil
	}

	if err := validate.MinimumInt("line_number", "body", m.LineNumber, 0, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this ssl crt list entry based on context it is used
func (m *SslCrtListEntry) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SslCrtListEntry) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SslCrtListEntry) UnmarshalBinary(b []byte) error {
	var res SslCrtListEntry
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
