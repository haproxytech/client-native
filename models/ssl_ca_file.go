// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SslCaFile SSL File
//
// A file containing one or more SSL/TLS certificates and keys
//
// swagger:model ssl_ca_file
type SslCaFile struct {

	// count
	Count string `json:"count,omitempty"`

	// file
	File string `json:"file,omitempty"`

	// storage name
	StorageName string `json:"storage_name,omitempty"`
}

// Validate validates this ssl ca file
func (m *SslCaFile) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this ssl ca file based on context it is used
func (m *SslCaFile) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SslCaFile) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SslCaFile) UnmarshalBinary(b []byte) error {
	var res SslCaFile
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
