// Code generated by go-method-gen. DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package models

import (
	"fmt"
)

func (rec Error) Diff(obj Error) map[string][]interface{} {
	diff := make(map[string][]interface{})
	for diffKey, diffValue := range DiffPointerInt64(rec.Code, obj.Code) {
		diff["Code."+diffKey] = diffValue
	}
	for diffKey, diffValue := range DiffPointerString(rec.Message, obj.Message) {
		diff["Message."+diffKey] = diffValue
	}
	for diffKey, diffValue := range DiffMapStringString(rec.Error, obj.Error) {
		diff["Error"+diffKey] = diffValue
	}
	return diff
}

func DiffMapStringString(x, y map[string]string) map[string][]interface{} {
	diff := make(map[string][]interface{})
	if (x == nil && y == nil) || (len(x) == 0 && len(y) == 0) {
		return diff
	}

	if x == nil {
		return map[string][]interface{}{"": {nil, y}}
	}

	if y == nil {
		return map[string][]interface{}{"": {x, nil}}
	}

	for kx, vx := range x {
		key := fmt.Sprintf("[%v]", kx)
		vy := y[kx]

		if vx != vy {
			diff[key] = []interface{}{vx, vy}
		}

	}
	for ky, vy := range y {
		key := fmt.Sprintf("[%v]", ky)
		if _, found := diff[key]; found {
			continue
		}

		vx := x[ky]

		if vx != vy {
			diff[key] = []interface{}{vx, vy}
		}

	}
	return diff
}
