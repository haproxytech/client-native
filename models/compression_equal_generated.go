// Code generated by go-method-gen. DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package models

import (
	"github.com/haproxytech/go-method-gen/pkg/eqdiff"
)

func (rec Compression) Equal(obj Compression, opts ...eqdiff.GoMethodGenOptions) bool {
	return rec.AlgoReq == obj.AlgoReq &&
		EqualSliceString(rec.Algorithms, obj.Algorithms, opts...) &&
		EqualSliceString(rec.AlgosRes, obj.AlgosRes, opts...) &&
		rec.Direction == obj.Direction &&
		rec.MinsizeReq == obj.MinsizeReq &&
		rec.MinsizeRes == obj.MinsizeRes &&
		rec.Offload == obj.Offload &&
		EqualSliceString(rec.Types, obj.Types, opts...) &&
		EqualSliceString(rec.TypesReq, obj.TypesReq, opts...) &&
		EqualSliceString(rec.TypesRes, obj.TypesRes, opts...)
}

func EqualSliceString(x, y []string, opts ...eqdiff.GoMethodGenOptions) bool {
	var opt *eqdiff.GoMethodGenOptions
	if len(opts) > 0 {
		opt = &opts[0]
	}

	if (x == nil) != (y == nil) {
		if opt == nil || (opt != nil && !opt.TreatNilNotAsEmpty) {
			if len(x) == 0 && len(y) == 0 {
				return true
			}
		}
		return false
	}

	if len(x) != len(y) {
		return false
	}

	for i, vx := range x {
		vy := y[i]
		if vx != vy {
			return false
		}
	}

	return true
}
