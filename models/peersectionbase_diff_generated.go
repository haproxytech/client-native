// Code generated by go-method-gen. DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package models

func (rec PeerSectionBase) Diff(obj PeerSectionBase) map[string][]interface{} {
	diff := make(map[string][]interface{})
	for diffKey, diffValue := range DiffPointerDefaultBind(rec.DefaultBind, obj.DefaultBind) {
		diff["DefaultBind."+diffKey] = diffValue
	}
	for diffKey, diffValue := range DiffPointerDefaultServer(rec.DefaultServer, obj.DefaultServer) {
		diff["DefaultServer."+diffKey] = diffValue
	}
	if rec.Disabled != obj.Disabled {
		diff["Disabled"] = []interface{}{rec.Disabled, obj.Disabled}
	}
	if rec.Enabled != obj.Enabled {
		diff["Enabled"] = []interface{}{rec.Enabled, obj.Enabled}
	}
	if rec.Name != obj.Name {
		diff["Name"] = []interface{}{rec.Name, obj.Name}
	}
	if rec.Shards != obj.Shards {
		diff["Shards"] = []interface{}{rec.Shards, obj.Shards}
	}
	return diff
}

func DiffPointerDefaultBind(x, y *DefaultBind) map[string][]interface{} {
	diff := make(map[string][]interface{})
	if x == nil && y == nil {
		return diff
	}

	key := "DefaultBind"

	switch {
	case x == nil:
		diff[key] = []interface{}{x, *y}
		return diff
	case y == nil:
		diff[key] = []interface{}{*x, y}
		return diff
	}

	for diffKey, diffValue := range (*x).Diff(*y) {
		diff[key+"."+diffKey] = diffValue
	}

	return diff
}
