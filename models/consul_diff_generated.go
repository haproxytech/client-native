// Code generated by go-method-gen. DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package models

func (rec Consul) Diff(obj Consul) map[string][]interface{} {
	diff := make(map[string][]interface{})
	for diffKey, diffValue := range DiffPointerString(rec.Address, obj.Address) {
		diff["Address."+diffKey] = diffValue
	}
	if rec.Defaults != obj.Defaults {
		diff["Defaults"] = []interface{}{rec.Defaults, obj.Defaults}
	}
	if rec.Description != obj.Description {
		diff["Description"] = []interface{}{rec.Description, obj.Description}
	}
	for diffKey, diffValue := range DiffPointerBool(rec.Enabled, obj.Enabled) {
		diff["Enabled."+diffKey] = diffValue
	}
	for diffKey, diffValue := range DiffPointerString(rec.HealthCheckPolicy, obj.HealthCheckPolicy) {
		diff["HealthCheckPolicy."+diffKey] = diffValue
	}
	if rec.HealthCheckPolicyMin != obj.HealthCheckPolicyMin {
		diff["HealthCheckPolicyMin"] = []interface{}{rec.HealthCheckPolicyMin, obj.HealthCheckPolicyMin}
	}
	for diffKey, diffValue := range DiffPointerString(rec.ID, obj.ID) {
		diff["ID."+diffKey] = diffValue
	}
	for diffKey, diffValue := range DiffPointerString(rec.Mode, obj.Mode) {
		diff["Mode."+diffKey] = diffValue
	}
	if rec.Name != obj.Name {
		diff["Name"] = []interface{}{rec.Name, obj.Name}
	}
	if rec.Namespace != obj.Namespace {
		diff["Namespace"] = []interface{}{rec.Namespace, obj.Namespace}
	}
	for diffKey, diffValue := range DiffPointerInt64(rec.Port, obj.Port) {
		diff["Port."+diffKey] = diffValue
	}
	for diffKey, diffValue := range DiffPointerInt64(rec.RetryTimeout, obj.RetryTimeout) {
		diff["RetryTimeout."+diffKey] = diffValue
	}
	for diffKey, diffValue := range DiffPointerInt64(rec.ServerSlotsBase, obj.ServerSlotsBase) {
		diff["ServerSlotsBase."+diffKey] = diffValue
	}
	if rec.ServerSlotsGrowthIncrement != obj.ServerSlotsGrowthIncrement {
		diff["ServerSlotsGrowthIncrement"] = []interface{}{rec.ServerSlotsGrowthIncrement, obj.ServerSlotsGrowthIncrement}
	}
	for diffKey, diffValue := range DiffPointerString(rec.ServerSlotsGrowthType, obj.ServerSlotsGrowthType) {
		diff["ServerSlotsGrowthType."+diffKey] = diffValue
	}
	for diffKey, diffValue := range DiffSliceString(rec.ServiceAllowlist, obj.ServiceAllowlist) {
		diff["ServiceAllowlist"+diffKey] = diffValue
	}
	for diffKey, diffValue := range DiffSliceString(rec.ServiceDenylist, obj.ServiceDenylist) {
		diff["ServiceDenylist"+diffKey] = diffValue
	}
	if rec.ServiceNameRegexp != obj.ServiceNameRegexp {
		diff["ServiceNameRegexp"] = []interface{}{rec.ServiceNameRegexp, obj.ServiceNameRegexp}
	}
	if rec.Token != obj.Token {
		diff["Token"] = []interface{}{rec.Token, obj.Token}
	}
	return diff
}
