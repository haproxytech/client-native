// Code generated by go-method-gen. DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package models

func (rec Balance) Diff(obj Balance) map[string][]interface{} {
	diff := make(map[string][]interface{})
	for diffKey, diffValue := range DiffPointerString(rec.Algorithm, obj.Algorithm) {
		diff["Algorithm."+diffKey] = diffValue
	}
	if rec.HashExpression != obj.HashExpression {
		diff["HashExpression"] = []interface{}{rec.HashExpression, obj.HashExpression}
	}
	if rec.HdrName != obj.HdrName {
		diff["HdrName"] = []interface{}{rec.HdrName, obj.HdrName}
	}
	if rec.HdrUseDomainOnly != obj.HdrUseDomainOnly {
		diff["HdrUseDomainOnly"] = []interface{}{rec.HdrUseDomainOnly, obj.HdrUseDomainOnly}
	}
	if rec.RandomDraws != obj.RandomDraws {
		diff["RandomDraws"] = []interface{}{rec.RandomDraws, obj.RandomDraws}
	}
	if rec.RdpCookieName != obj.RdpCookieName {
		diff["RdpCookieName"] = []interface{}{rec.RdpCookieName, obj.RdpCookieName}
	}
	if rec.URIDepth != obj.URIDepth {
		diff["URIDepth"] = []interface{}{rec.URIDepth, obj.URIDepth}
	}
	if rec.URILen != obj.URILen {
		diff["URILen"] = []interface{}{rec.URILen, obj.URILen}
	}
	if rec.URIPathOnly != obj.URIPathOnly {
		diff["URIPathOnly"] = []interface{}{rec.URIPathOnly, obj.URIPathOnly}
	}
	if rec.URIWhole != obj.URIWhole {
		diff["URIWhole"] = []interface{}{rec.URIWhole, obj.URIWhole}
	}
	if rec.URLParam != obj.URLParam {
		diff["URLParam"] = []interface{}{rec.URLParam, obj.URLParam}
	}
	if rec.URLParamCheckPost != obj.URLParamCheckPost {
		diff["URLParamCheckPost"] = []interface{}{rec.URLParamCheckPost, obj.URLParamCheckPost}
	}
	if rec.URLParamMaxWait != obj.URLParamMaxWait {
		diff["URLParamMaxWait"] = []interface{}{rec.URLParamMaxWait, obj.URLParamMaxWait}
	}
	return diff
}
