// Code generated by go-method-gen. DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package models

func (rec StatsOptions) Equal(obj StatsOptions) bool {
	return rec.StatsAdmin == obj.StatsAdmin &&
		rec.StatsAdminCond == obj.StatsAdminCond &&
		rec.StatsAdminCondTest == obj.StatsAdminCondTest &&
		EqualSlicePointerStatsAuth(rec.StatsAuths, obj.StatsAuths) &&
		rec.StatsEnable == obj.StatsEnable &&
		rec.StatsHideVersion == obj.StatsHideVersion &&
		EqualSlicePointerStatsHTTPRequest(rec.StatsHTTPRequests, obj.StatsHTTPRequests) &&
		rec.StatsMaxconn == obj.StatsMaxconn &&
		rec.StatsRealm == obj.StatsRealm &&
		EqualPointerString(rec.StatsRealmRealm, obj.StatsRealmRealm) &&
		EqualPointerInt64(rec.StatsRefreshDelay, obj.StatsRefreshDelay) &&
		EqualPointerString(rec.StatsShowDesc, obj.StatsShowDesc) &&
		rec.StatsShowLegends == obj.StatsShowLegends &&
		rec.StatsShowModules == obj.StatsShowModules &&
		EqualPointerString(rec.StatsShowNodeName, obj.StatsShowNodeName) &&
		rec.StatsURIPrefix == obj.StatsURIPrefix
}

func EqualPointerStatsAuth(x, y *StatsAuth) bool {
	if x == nil || y == nil {
		return x == y
	}
	return (*x).Equal(*y)
}

func EqualPointerStatsHTTPRequest(x, y *StatsHTTPRequest) bool {
	if x == nil || y == nil {
		return x == y
	}
	return (*x).Equal(*y)
}

func EqualSlicePointerStatsAuth(x, y []*StatsAuth) bool {
	if len(x) != len(y) {
		return false
	}

	for i, vx := range x {
		vy := y[i]
		if !EqualPointerStatsAuth(vx, vy) {
			return false
		}
	}

	return true
}

func EqualSlicePointerStatsHTTPRequest(x, y []*StatsHTTPRequest) bool {
	if len(x) != len(y) {
		return false
	}

	for i, vx := range x {
		vy := y[i]
		if !EqualPointerStatsHTTPRequest(vx, vy) {
			return false
		}
	}

	return true
}
