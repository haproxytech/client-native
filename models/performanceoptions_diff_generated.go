// Code generated by go-method-gen. DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package models

import (
	"github.com/haproxytech/go-method-gen/pkg/eqdiff"
)

func (rec PerformanceOptions) Diff(obj PerformanceOptions, opts ...eqdiff.GoMethodGenOptions) map[string][]interface{} {
	diff := make(map[string][]interface{})
	if rec.BusyPolling != obj.BusyPolling {
		diff["BusyPolling"] = []interface{}{rec.BusyPolling, obj.BusyPolling}
	}
	for diffKey, diffValue := range DiffPointerInt64(rec.MaxSpreadChecks, obj.MaxSpreadChecks, opts...) {
		diff["MaxSpreadChecks."+diffKey] = diffValue
	}
	if rec.Maxcompcpuusage != obj.Maxcompcpuusage {
		diff["Maxcompcpuusage"] = []interface{}{rec.Maxcompcpuusage, obj.Maxcompcpuusage}
	}
	if rec.Maxcomprate != obj.Maxcomprate {
		diff["Maxcomprate"] = []interface{}{rec.Maxcomprate, obj.Maxcomprate}
	}
	if rec.Maxconn != obj.Maxconn {
		diff["Maxconn"] = []interface{}{rec.Maxconn, obj.Maxconn}
	}
	if rec.Maxconnrate != obj.Maxconnrate {
		diff["Maxconnrate"] = []interface{}{rec.Maxconnrate, obj.Maxconnrate}
	}
	if rec.Maxpipes != obj.Maxpipes {
		diff["Maxpipes"] = []interface{}{rec.Maxpipes, obj.Maxpipes}
	}
	if rec.Maxsessrate != obj.Maxsessrate {
		diff["Maxsessrate"] = []interface{}{rec.Maxsessrate, obj.Maxsessrate}
	}
	if rec.Maxzlibmem != obj.Maxzlibmem {
		diff["Maxzlibmem"] = []interface{}{rec.Maxzlibmem, obj.Maxzlibmem}
	}
	if rec.Noepoll != obj.Noepoll {
		diff["Noepoll"] = []interface{}{rec.Noepoll, obj.Noepoll}
	}
	if rec.Noevports != obj.Noevports {
		diff["Noevports"] = []interface{}{rec.Noevports, obj.Noevports}
	}
	if rec.Nogetaddrinfo != obj.Nogetaddrinfo {
		diff["Nogetaddrinfo"] = []interface{}{rec.Nogetaddrinfo, obj.Nogetaddrinfo}
	}
	if rec.Nokqueue != obj.Nokqueue {
		diff["Nokqueue"] = []interface{}{rec.Nokqueue, obj.Nokqueue}
	}
	if rec.Nopoll != obj.Nopoll {
		diff["Nopoll"] = []interface{}{rec.Nopoll, obj.Nopoll}
	}
	if rec.Noreuseport != obj.Noreuseport {
		diff["Noreuseport"] = []interface{}{rec.Noreuseport, obj.Noreuseport}
	}
	if rec.Nosplice != obj.Nosplice {
		diff["Nosplice"] = []interface{}{rec.Nosplice, obj.Nosplice}
	}
	if rec.ProfilingMemory != obj.ProfilingMemory {
		diff["ProfilingMemory"] = []interface{}{rec.ProfilingMemory, obj.ProfilingMemory}
	}
	if rec.ProfilingTasks != obj.ProfilingTasks {
		diff["ProfilingTasks"] = []interface{}{rec.ProfilingTasks, obj.ProfilingTasks}
	}
	if rec.ServerStateBase != obj.ServerStateBase {
		diff["ServerStateBase"] = []interface{}{rec.ServerStateBase, obj.ServerStateBase}
	}
	if rec.ServerStateFile != obj.ServerStateFile {
		diff["ServerStateFile"] = []interface{}{rec.ServerStateFile, obj.ServerStateFile}
	}
	if rec.SpreadChecks != obj.SpreadChecks {
		diff["SpreadChecks"] = []interface{}{rec.SpreadChecks, obj.SpreadChecks}
	}
	for diffKey, diffValue := range DiffPointerInt64(rec.ThreadHardLimit, obj.ThreadHardLimit, opts...) {
		diff["ThreadHardLimit."+diffKey] = diffValue
	}
	return diff
}
